<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Bits on 0x42697473 - nasm</title><link href="https://derez.github.io/" rel="alternate"></link><link href="https://derez.github.io/tag/nasm/feed/index.xml" rel="self"></link><id>https://derez.github.io/</id><updated>2016-12-09T00:00:00-05:00</updated><entry><title>Shellcode EncodersÂ 2</title><link href="https://derez.github.io/2016/shellcode-encoder-2.html" rel="alternate"></link><published>2016-12-09T00:00:00-05:00</published><updated>2016-12-09T00:00:00-05:00</updated><author><name>Danny Walker</name></author><id>tag:derez.github.io,2016-12-09:/2016/shellcode-encoder-2.html</id><summary type="html">&lt;p class="first last"&gt;Additional shellcode encoder&amp;nbsp;techniques&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Shellcode encoders are used to defeat basic pattern matching or remove bad bytes from a&amp;nbsp;payload.&lt;/p&gt;
&lt;p&gt;The following encoder rotates bytes. I decided to rotate 3 bits left when encoding, meaning the decoder needs to rotate right 3 bits. Here is the decoder&amp;nbsp;logic:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span id="row-1"&gt;&lt;span class="lineno"&gt; 1 &lt;/span&gt;&lt;span class="nl"&gt;_start:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-2"&gt;&lt;span class="lineno"&gt; 2 &lt;/span&gt;    &lt;span class="nf"&gt;jmp&lt;/span&gt; &lt;span class="no"&gt;encoded&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-3"&gt;&lt;span class="lineno"&gt; 3 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-4"&gt;&lt;span class="lineno"&gt; 4 &lt;/span&gt;&lt;span class="nl"&gt;getaddr:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-5"&gt;&lt;span class="lineno"&gt; 5 &lt;/span&gt;    &lt;span class="nf"&gt;pop&lt;/span&gt; &lt;span class="no"&gt;rbx&lt;/span&gt;         &lt;span class="c"&gt;; *rbx stores data&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-6"&gt;&lt;span class="lineno"&gt; 6 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-7"&gt;&lt;span class="lineno"&gt; 7 &lt;/span&gt;    &lt;span class="nf"&gt;xor&lt;/span&gt; &lt;span class="no"&gt;ecx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;ecx&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-8"&gt;&lt;span class="lineno"&gt; 8 &lt;/span&gt;    &lt;span class="nf"&gt;add&lt;/span&gt; &lt;span class="no"&gt;cl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0xff&lt;/span&gt;    &lt;span class="c"&gt;; replace with shellcode size&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-9"&gt;&lt;span class="lineno"&gt; 9 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-10"&gt;&lt;span class="lineno"&gt;10 &lt;/span&gt;&lt;span class="nl"&gt;decode:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-11"&gt;&lt;span class="lineno"&gt;11 &lt;/span&gt;    &lt;span class="nf"&gt;ror&lt;/span&gt; &lt;span class="no"&gt;byte&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="no"&gt;rbx&lt;/span&gt; &lt;span class="err"&gt;+&lt;/span&gt; &lt;span class="no"&gt;rcx&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;0x3&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-12"&gt;&lt;span class="lineno"&gt;12 &lt;/span&gt;    &lt;span class="nf"&gt;loop&lt;/span&gt; &lt;span class="no"&gt;decode&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-13"&gt;&lt;span class="lineno"&gt;13 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-14"&gt;&lt;span class="lineno"&gt;14 &lt;/span&gt;    &lt;span class="nf"&gt;jmp&lt;/span&gt; &lt;span class="no"&gt;rbx&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-15"&gt;&lt;span class="lineno"&gt;15 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-16"&gt;&lt;span class="lineno"&gt;16 &lt;/span&gt;&lt;span class="nl"&gt;encoded:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-17"&gt;&lt;span class="lineno"&gt;17 &lt;/span&gt;    &lt;span class="nf"&gt;call&lt;/span&gt; &lt;span class="no"&gt;getaddr&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-18"&gt;&lt;span class="lineno"&gt;18 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-19"&gt;&lt;span class="lineno"&gt;19 &lt;/span&gt;    &lt;span class="c"&gt;; db 0x.... encoded bytes go here&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This resulted in the following 21 byte&amp;nbsp;stub:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span id="row-1"&gt;&lt;span class="lineno"&gt;1 &lt;/span&gt;&lt;span class="go"&gt;\xeb\x0e\x5b\x31\xc9\x80\xc1\x20\xc0\x0c\x0b\x03\xe2\xfa\xff\xe3\xe8\xed\xff\xff\xff&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="x64-bit-rotate-encoder"&gt;
&lt;h2&gt;x64 Bit-Rotate&amp;nbsp;Encoder&lt;/h2&gt;
&lt;p&gt;Here is a python script that basically just rotates all the bits left by 3, and then prepends the decoder stub (changing the length in the cl register&amp;nbsp;appropriately).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span id="row-1"&gt;&lt;span class="lineno"&gt; 1 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;rol&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-2"&gt;&lt;span class="lineno"&gt; 2 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xff&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-3"&gt;&lt;span class="lineno"&gt; 3 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-4"&gt;&lt;span class="lineno"&gt; 4 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hex_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-5"&gt;&lt;span class="lineno"&gt; 5 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-6"&gt;&lt;span class="lineno"&gt; 6 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-7"&gt;&lt;span class="lineno"&gt; 7 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;rot_encode_vector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shellcode&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-8"&gt;&lt;span class="lineno"&gt; 8 &lt;/span&gt;    &lt;span class="n"&gt;encoded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-9"&gt;&lt;span class="lineno"&gt; 9 &lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;shellcode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-10"&gt;&lt;span class="lineno"&gt;10 &lt;/span&gt;        &lt;span class="n"&gt;encoded&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rol&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-11"&gt;&lt;span class="lineno"&gt;11 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-12"&gt;&lt;span class="lineno"&gt;12 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;encoded&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-13"&gt;&lt;span class="lineno"&gt;13 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-14"&gt;&lt;span class="lineno"&gt;14 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_decoder_stub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;encoded&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-15"&gt;&lt;span class="lineno"&gt;15 &lt;/span&gt;    &lt;span class="n"&gt;decoder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xeb&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;x0e&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;x5b&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;x31&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xc9&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;x80&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xc1&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;x04&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-16"&gt;&lt;span class="lineno"&gt;16 &lt;/span&gt;    &lt;span class="n"&gt;decoder&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;hex_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;encoded&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-17"&gt;&lt;span class="lineno"&gt;17 &lt;/span&gt;    &lt;span class="n"&gt;decoder&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xc0&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;x0c&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;x0b&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;x03&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xe2&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xfa&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xff&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xe3&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-18"&gt;&lt;span class="lineno"&gt;18 &lt;/span&gt;    &lt;span class="n"&gt;decoder&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xe8&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xed&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xff&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xff&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xff&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-19"&gt;&lt;span class="lineno"&gt;19 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-20"&gt;&lt;span class="lineno"&gt;20 &lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;encoded&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-21"&gt;&lt;span class="lineno"&gt;21 &lt;/span&gt;        &lt;span class="n"&gt;decoder&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;hex_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-22"&gt;&lt;span class="lineno"&gt;22 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-23"&gt;&lt;span class="lineno"&gt;23 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;decoder&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-24"&gt;&lt;span class="lineno"&gt;24 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-25"&gt;&lt;span class="lineno"&gt;25 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;rot_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shellcode&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-26"&gt;&lt;span class="lineno"&gt;26 &lt;/span&gt;    &lt;span class="n"&gt;shellcode_vector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;shellcode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-27"&gt;&lt;span class="lineno"&gt;27 &lt;/span&gt;    &lt;span class="n"&gt;shellcode_vector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;shellcode_vector&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-28"&gt;&lt;span class="lineno"&gt;28 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-29"&gt;&lt;span class="lineno"&gt;29 &lt;/span&gt;    &lt;span class="n"&gt;encoded_vector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rot_encode_vector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shellcode_vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-30"&gt;&lt;span class="lineno"&gt;30 &lt;/span&gt;    &lt;span class="n"&gt;complete&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add_decoder_stub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;encoded_vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-31"&gt;&lt;span class="lineno"&gt;31 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-32"&gt;&lt;span class="lineno"&gt;32 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoded_vector&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shellcode_vector&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-33"&gt;&lt;span class="lineno"&gt;33 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-34"&gt;&lt;span class="lineno"&gt;34 &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-35"&gt;&lt;span class="lineno"&gt;35 &lt;/span&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;argparse&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-36"&gt;&lt;span class="lineno"&gt;36 &lt;/span&gt;    &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Bit-Rotate Encoder&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-37"&gt;&lt;span class="lineno"&gt;37 &lt;/span&gt;    &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;shellcode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;shellcode to encode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-38"&gt;&lt;span class="lineno"&gt;38 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-39"&gt;&lt;span class="lineno"&gt;39 &lt;/span&gt;    &lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-40"&gt;&lt;span class="lineno"&gt;40 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-41"&gt;&lt;span class="lineno"&gt;41 &lt;/span&gt;    &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rot_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shellcode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-42"&gt;&lt;span class="lineno"&gt;42 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-43"&gt;&lt;span class="lineno"&gt;43 &lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Original length: &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scv&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-44"&gt;&lt;span class="lineno"&gt;44 &lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shellcode&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-45"&gt;&lt;span class="lineno"&gt;45 &lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-46"&gt;&lt;span class="lineno"&gt;46 &lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Encoded length: &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-47"&gt;&lt;span class="lineno"&gt;47 &lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-48"&gt;&lt;span class="lineno"&gt;48 &lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-49"&gt;&lt;span class="lineno"&gt;49 &lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;db &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encv&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="code"></category><category term="asm"></category><category term="nasm"></category><category term="shellcode"></category><category term="encoder"></category></entry><entry><title>InitialÂ content</title><link href="https://derez.github.io/2016/content.html" rel="alternate"></link><published>2016-10-03T00:00:00-04:00</published><updated>2016-10-04T00:00:00-04:00</updated><author><name>Danny Walker</name></author><id>tag:derez.github.io,2016-10-03:/2016/content.html</id><summary type="html">&lt;p class="first last"&gt;Content for&amp;nbsp;testing&lt;/p&gt;
</summary><content type="html">&lt;div class="figure"&gt;
&lt;img alt="map to buried treasure" src="https://derez.github.io/images/hex.gif" /&gt;
&lt;p class="caption"&gt;This is the caption of the figure (a simple&amp;nbsp;paragraph).&lt;/p&gt;
&lt;div class="legend"&gt;
&lt;p&gt;The legend consists of all elements after the caption.  In this
case, the legend consists of this paragraph and the following&amp;nbsp;table:&lt;/p&gt;
&lt;table border="1" class="docutils"&gt;
&lt;colgroup&gt;
&lt;col width="69%" /&gt;
&lt;col width="31%" /&gt;
&lt;/colgroup&gt;
&lt;thead valign="bottom"&gt;
&lt;tr&gt;&lt;th class="head"&gt;Symbol&lt;/th&gt;
&lt;th class="head"&gt;Meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt="" class="first last" src="https://derez.github.io/images/disc_1.png" /&gt;
&lt;/td&gt;
&lt;td&gt;Disc 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt="" class="first last" src="https://derez.github.io/images/bit_yes.png" /&gt;
&lt;/td&gt;
&lt;td&gt;Bit yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt="" class="first last" src="https://derez.github.io/images/bit.png" /&gt;
&lt;/td&gt;
&lt;td&gt;Bit&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="data"></category><category term="f26"></category><category term="bash"></category><category term="ida python"></category><category term="ctf challenges"></category><category term="nasm"></category><category term="c"></category><category term="excel"></category><category term="trojan"></category><category term="strongswan"></category><category term="visual studio"></category><category term="c++"></category><category term="masm"></category><category term="project placeholder"></category><category term="trac"></category><category term="ida pro"></category><category term="ipsec"></category><category term="visual c++"></category><category term="windbg"></category></entry></feed>