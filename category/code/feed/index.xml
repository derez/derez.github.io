<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Bits on 0x42697473 - code</title><link href="https://derez.github.io/" rel="alternate"></link><link href="https://derez.github.io/category/code/feed/index.xml" rel="self"></link><id>https://derez.github.io/</id><updated>2018-07-04T00:00:00-04:00</updated><entry><title>state-machine</title><link href="https://derez.github.io/2018/state-machine.html" rel="alternate"></link><published>2018-07-04T00:00:00-04:00</published><updated>2018-07-04T00:00:00-04:00</updated><author><name>Danny Walker</name></author><id>tag:derez.github.io,2018-07-04:/2018/state-machine.html</id><summary type="html">&lt;p class="first last"&gt;More looking at&amp;nbsp;code-block&lt;/p&gt;
</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span id="row-1"&gt;&lt;span class="lineno"&gt;  1 &lt;/span&gt;# Copyright: This module has been placed in the public domain.
&lt;/span&gt;&lt;span id="row-2"&gt;&lt;span class="lineno"&gt;  2 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-3"&gt;&lt;span class="lineno"&gt;  3 &lt;/span&gt;&amp;quot;&amp;quot;&amp;quot;
&lt;/span&gt;&lt;span id="row-4"&gt;&lt;span class="lineno"&gt;  4 &lt;/span&gt;A finite state machine specialized for regular-expression-based text filters,
&lt;/span&gt;&lt;span id="row-5"&gt;&lt;span class="lineno"&gt;  5 &lt;/span&gt;this module defines the following classes:
&lt;/span&gt;&lt;span id="row-6"&gt;&lt;span class="lineno"&gt;  6 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-7"&gt;&lt;span class="lineno"&gt;  7 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`StateMachine`&lt;/span&gt;, a state machine
&lt;/span&gt;&lt;span id="row-8"&gt;&lt;span class="lineno"&gt;  8 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`State`&lt;/span&gt;, a state superclass
&lt;/span&gt;&lt;span id="row-9"&gt;&lt;span class="lineno"&gt;  9 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`StateMachineWS`&lt;/span&gt;, a whitespace-sensitive version of &lt;span class="nv"&gt;`StateMachine`&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-10"&gt;&lt;span class="lineno"&gt; 10 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`StateWS`&lt;/span&gt;, a state superclass for use with &lt;span class="nv"&gt;`StateMachineWS`&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-11"&gt;&lt;span class="lineno"&gt; 11 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`SearchStateMachine`&lt;/span&gt;, uses &lt;span class="nv"&gt;`re.search()`&lt;/span&gt; instead of &lt;span class="nv"&gt;`re.match()`&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-12"&gt;&lt;span class="lineno"&gt; 12 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`SearchStateMachineWS`&lt;/span&gt;, uses &lt;span class="nv"&gt;`re.search()`&lt;/span&gt; instead of &lt;span class="nv"&gt;`re.match()`&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-13"&gt;&lt;span class="lineno"&gt; 13 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`ViewList`&lt;/span&gt;, extends standard Python lists.
&lt;/span&gt;&lt;span id="row-14"&gt;&lt;span class="lineno"&gt; 14 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`StringList`&lt;/span&gt;, string-specific ViewList.
&lt;/span&gt;&lt;span id="row-15"&gt;&lt;span class="lineno"&gt; 15 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-16"&gt;&lt;span class="lineno"&gt; 16 &lt;/span&gt;Exception classes:
&lt;/span&gt;&lt;span id="row-17"&gt;&lt;span class="lineno"&gt; 17 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-18"&gt;&lt;span class="lineno"&gt; 18 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`StateMachineError`&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-19"&gt;&lt;span class="lineno"&gt; 19 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`UnknownStateError`&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-20"&gt;&lt;span class="lineno"&gt; 20 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`DuplicateStateError`&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-21"&gt;&lt;span class="lineno"&gt; 21 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`UnknownTransitionError`&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-22"&gt;&lt;span class="lineno"&gt; 22 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`DuplicateTransitionError`&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-23"&gt;&lt;span class="lineno"&gt; 23 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`TransitionPatternNotFound`&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-24"&gt;&lt;span class="lineno"&gt; 24 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`TransitionMethodNotFound`&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-25"&gt;&lt;span class="lineno"&gt; 25 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`UnexpectedIndentationError`&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-26"&gt;&lt;span class="lineno"&gt; 26 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`TransitionCorrection`&lt;/span&gt;: Raised to switch to another transition.
&lt;/span&gt;&lt;span id="row-27"&gt;&lt;span class="lineno"&gt; 27 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`StateCorrection`&lt;/span&gt;: Raised to switch to another state &amp;amp; transition.
&lt;/span&gt;&lt;span id="row-28"&gt;&lt;span class="lineno"&gt; 28 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-29"&gt;&lt;span class="lineno"&gt; 29 &lt;/span&gt;Functions:
&lt;/span&gt;&lt;span id="row-30"&gt;&lt;span class="lineno"&gt; 30 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-31"&gt;&lt;span class="lineno"&gt; 31 &lt;/span&gt;&lt;span class="m"&gt;-&lt;/span&gt; &lt;span class="nv"&gt;`string2lines()`&lt;/span&gt;: split a multi-line string into a list of one-line strings
&lt;/span&gt;&lt;span id="row-32"&gt;&lt;span class="lineno"&gt; 32 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-33"&gt;&lt;span class="lineno"&gt; 33 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-34"&gt;&lt;span class="lineno"&gt; 34 &lt;/span&gt;&lt;span class="gh"&gt;How To Use This Module&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-35"&gt;&lt;span class="lineno"&gt; 35 &lt;/span&gt;&lt;span class="gh"&gt;======================&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-36"&gt;&lt;span class="lineno"&gt; 36 &lt;/span&gt;(See the individual classes, methods, and attributes for details.)
&lt;/span&gt;&lt;span id="row-37"&gt;&lt;span class="lineno"&gt; 37 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-38"&gt;&lt;span class="lineno"&gt; 38 &lt;/span&gt;&lt;span class="m"&gt;1.&lt;/span&gt; Import it: &lt;span class="s"&gt;``import statemachine``&lt;/span&gt; or &lt;span class="s"&gt;``from statemachine import ...``&lt;/span&gt;.
&lt;/span&gt;&lt;span id="row-39"&gt;&lt;span class="lineno"&gt; 39 &lt;/span&gt;   You will also need to &lt;span class="s"&gt;``import re``&lt;/span&gt;.
&lt;/span&gt;&lt;span id="row-40"&gt;&lt;span class="lineno"&gt; 40 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-41"&gt;&lt;span class="lineno"&gt; 41 &lt;/span&gt;&lt;span class="m"&gt;2.&lt;/span&gt; Derive a subclass of &lt;span class="nv"&gt;`State`&lt;/span&gt; (or &lt;span class="nv"&gt;`StateWS`&lt;/span&gt;) for each state in your state
&lt;/span&gt;&lt;span id="row-42"&gt;&lt;span class="lineno"&gt; 42 &lt;/span&gt;   machine&lt;span class="se"&gt;::&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-43"&gt;&lt;span class="lineno"&gt; 43 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-44"&gt;&lt;span class="lineno"&gt; 44 &lt;/span&gt;&lt;span class="s"&gt;       class MyState(statemachine.State):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-45"&gt;&lt;span class="lineno"&gt; 45 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-46"&gt;&lt;span class="lineno"&gt; 46 &lt;/span&gt;   Within the state&amp;#39;s class definition:
&lt;/span&gt;&lt;span id="row-47"&gt;&lt;span class="lineno"&gt; 47 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-48"&gt;&lt;span class="lineno"&gt; 48 &lt;/span&gt;   &lt;span class="m"&gt;a)&lt;/span&gt; Include a pattern for each transition, in &lt;span class="nv"&gt;`State.patterns`&lt;/span&gt;::
&lt;/span&gt;&lt;span id="row-49"&gt;&lt;span class="lineno"&gt; 49 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-50"&gt;&lt;span class="lineno"&gt; 50 &lt;/span&gt;          patterns = {&amp;#39;atransition&amp;#39;: r&amp;#39;pattern&amp;#39;, ...}
&lt;/span&gt;&lt;span id="row-51"&gt;&lt;span class="lineno"&gt; 51 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-52"&gt;&lt;span class="lineno"&gt; 52 &lt;/span&gt;   &lt;span class="m"&gt;b)&lt;/span&gt; Include a list of initial transitions to be set up automatically, in
&lt;/span&gt;&lt;span id="row-53"&gt;&lt;span class="lineno"&gt; 53 &lt;/span&gt;      &lt;span class="nv"&gt;`State.initial_transitions`&lt;/span&gt;::
&lt;/span&gt;&lt;span id="row-54"&gt;&lt;span class="lineno"&gt; 54 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-55"&gt;&lt;span class="lineno"&gt; 55 &lt;/span&gt;          initial_transitions = [&amp;#39;atransition&amp;#39;, ...]
&lt;/span&gt;&lt;span id="row-56"&gt;&lt;span class="lineno"&gt; 56 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-57"&gt;&lt;span class="lineno"&gt; 57 &lt;/span&gt;   &lt;span class="m"&gt;c)&lt;/span&gt; Define a method for each transition, with the same name as the
&lt;/span&gt;&lt;span id="row-58"&gt;&lt;span class="lineno"&gt; 58 &lt;/span&gt;      transition pattern&lt;span class="se"&gt;::&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-59"&gt;&lt;span class="lineno"&gt; 59 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-60"&gt;&lt;span class="lineno"&gt; 60 &lt;/span&gt;&lt;span class="s"&gt;          def atransition(self, match, context, next_state):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-61"&gt;&lt;span class="lineno"&gt; 61 &lt;/span&gt;&lt;span class="s"&gt;              # do something&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-62"&gt;&lt;span class="lineno"&gt; 62 &lt;/span&gt;&lt;span class="s"&gt;              result = [...]  # a list&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-63"&gt;&lt;span class="lineno"&gt; 63 &lt;/span&gt;&lt;span class="s"&gt;              return context, next_state, result&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-64"&gt;&lt;span class="lineno"&gt; 64 &lt;/span&gt;&lt;span class="s"&gt;              # context, next_state may be altered&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-65"&gt;&lt;span class="lineno"&gt; 65 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-66"&gt;&lt;span class="lineno"&gt; 66 &lt;/span&gt;      Transition methods may raise an &lt;span class="nv"&gt;`EOFError`&lt;/span&gt; to cut processing short.
&lt;/span&gt;&lt;span id="row-67"&gt;&lt;span class="lineno"&gt; 67 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-68"&gt;&lt;span class="lineno"&gt; 68 &lt;/span&gt;   &lt;span class="m"&gt;d)&lt;/span&gt; You may wish to override the &lt;span class="nv"&gt;`State.bof()`&lt;/span&gt; and/or &lt;span class="nv"&gt;`State.eof()`&lt;/span&gt; implicit
&lt;/span&gt;&lt;span id="row-69"&gt;&lt;span class="lineno"&gt; 69 &lt;/span&gt;      transition methods, which handle the beginning- and end-of-file.
&lt;/span&gt;&lt;span id="row-70"&gt;&lt;span class="lineno"&gt; 70 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-71"&gt;&lt;span class="lineno"&gt; 71 &lt;/span&gt;   &lt;span class="m"&gt;e)&lt;/span&gt; In order to handle nested processing, you may wish to override the
&lt;/span&gt;&lt;span id="row-72"&gt;&lt;span class="lineno"&gt; 72 &lt;/span&gt;      attributes &lt;span class="nv"&gt;`State.nested_sm`&lt;/span&gt; and/or &lt;span class="nv"&gt;`State.nested_sm_kwargs`&lt;/span&gt;.
&lt;/span&gt;&lt;span id="row-73"&gt;&lt;span class="lineno"&gt; 73 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-74"&gt;&lt;span class="lineno"&gt; 74 &lt;/span&gt;      If you are using &lt;span class="nv"&gt;`StateWS`&lt;/span&gt; as a base class, in order to handle nested
&lt;/span&gt;&lt;span id="row-75"&gt;&lt;span class="lineno"&gt; 75 &lt;/span&gt;      indented blocks, you may wish to:
&lt;/span&gt;&lt;span id="row-76"&gt;&lt;span class="lineno"&gt; 76 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-77"&gt;&lt;span class="lineno"&gt; 77 &lt;/span&gt;      &lt;span class="m"&gt;-&lt;/span&gt; override the attributes &lt;span class="nv"&gt;`StateWS.indent_sm`&lt;/span&gt;,
&lt;/span&gt;&lt;span id="row-78"&gt;&lt;span class="lineno"&gt; 78 &lt;/span&gt;        &lt;span class="nv"&gt;`StateWS.indent_sm_kwargs`&lt;/span&gt;, &lt;span class="nv"&gt;`StateWS.known_indent_sm`&lt;/span&gt;, and/or
&lt;/span&gt;&lt;span id="row-79"&gt;&lt;span class="lineno"&gt; 79 &lt;/span&gt;        &lt;span class="nv"&gt;`StateWS.known_indent_sm_kwargs`&lt;/span&gt;;
&lt;/span&gt;&lt;span id="row-80"&gt;&lt;span class="lineno"&gt; 80 &lt;/span&gt;      &lt;span class="m"&gt;-&lt;/span&gt; override the &lt;span class="nv"&gt;`StateWS.blank()`&lt;/span&gt; method; and/or
&lt;/span&gt;&lt;span id="row-81"&gt;&lt;span class="lineno"&gt; 81 &lt;/span&gt;      &lt;span class="m"&gt;-&lt;/span&gt; override or extend the &lt;span class="nv"&gt;`StateWS.indent()`&lt;/span&gt;, &lt;span class="nv"&gt;`StateWS.known_indent()`&lt;/span&gt;,
&lt;/span&gt;&lt;span id="row-82"&gt;&lt;span class="lineno"&gt; 82 &lt;/span&gt;        and/or &lt;span class="nv"&gt;`StateWS.firstknown_indent()`&lt;/span&gt; methods.
&lt;/span&gt;&lt;span id="row-83"&gt;&lt;span class="lineno"&gt; 83 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-84"&gt;&lt;span class="lineno"&gt; 84 &lt;/span&gt;&lt;span class="m"&gt;3.&lt;/span&gt; Create a state machine object::
&lt;/span&gt;&lt;span id="row-85"&gt;&lt;span class="lineno"&gt; 85 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-86"&gt;&lt;span class="lineno"&gt; 86 &lt;/span&gt;       sm = StateMachine(state_classes=[MyState, ...],
&lt;/span&gt;&lt;span id="row-87"&gt;&lt;span class="lineno"&gt; 87 &lt;/span&gt;                         initial_state=&amp;#39;MyState&amp;#39;)
&lt;/span&gt;&lt;span id="row-88"&gt;&lt;span class="lineno"&gt; 88 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-89"&gt;&lt;span class="lineno"&gt; 89 &lt;/span&gt;&lt;span class="m"&gt;4.&lt;/span&gt; Obtain the input text, which needs to be converted into a tab-free list of
&lt;/span&gt;&lt;span id="row-90"&gt;&lt;span class="lineno"&gt; 90 &lt;/span&gt;   one-line strings. For example, to read text from a file called
&lt;/span&gt;&lt;span id="row-91"&gt;&lt;span class="lineno"&gt; 91 &lt;/span&gt;   &amp;#39;inputfile&amp;#39;&lt;span class="se"&gt;::&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-92"&gt;&lt;span class="lineno"&gt; 92 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-93"&gt;&lt;span class="lineno"&gt; 93 &lt;/span&gt;&lt;span class="s"&gt;       input_string = open(&amp;#39;inputfile&amp;#39;).read()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-94"&gt;&lt;span class="lineno"&gt; 94 &lt;/span&gt;&lt;span class="s"&gt;       input_lines = statemachine.string2lines(input_string)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-95"&gt;&lt;span class="lineno"&gt; 95 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-96"&gt;&lt;span class="lineno"&gt; 96 &lt;/span&gt;&lt;span class="m"&gt;5.&lt;/span&gt; Run the state machine on the input text and collect the results, a list::
&lt;/span&gt;&lt;span id="row-97"&gt;&lt;span class="lineno"&gt; 97 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-98"&gt;&lt;span class="lineno"&gt; 98 &lt;/span&gt;       results = sm.run(input_lines)
&lt;/span&gt;&lt;span id="row-99"&gt;&lt;span class="lineno"&gt; 99 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-100"&gt;&lt;span class="lineno"&gt;100 &lt;/span&gt;&lt;span class="m"&gt;6.&lt;/span&gt; Remove any lingering circular references::
&lt;/span&gt;&lt;span id="row-101"&gt;&lt;span class="lineno"&gt;101 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-102"&gt;&lt;span class="lineno"&gt;102 &lt;/span&gt;       sm.unlink()
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span id="row-1"&gt;&lt;span class="lineno"&gt;   1 &lt;/span&gt;&lt;span class="n"&gt;__docformat__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;restructuredtext&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-2"&gt;&lt;span class="lineno"&gt;   2 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-3"&gt;&lt;span class="lineno"&gt;   3 &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-4"&gt;&lt;span class="lineno"&gt;   4 &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;re&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-5"&gt;&lt;span class="lineno"&gt;   5 &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;types&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-6"&gt;&lt;span class="lineno"&gt;   6 &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;unicodedata&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-7"&gt;&lt;span class="lineno"&gt;   7 &lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;docutils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;utils&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-8"&gt;&lt;span class="lineno"&gt;   8 &lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;docutils.utils.error_reporting&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ErrorOutput&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-9"&gt;&lt;span class="lineno"&gt;   9 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-10"&gt;&lt;span class="lineno"&gt;  10 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-11"&gt;&lt;span class="lineno"&gt;  11 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StateMachine&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-12"&gt;&lt;span class="lineno"&gt;  12 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-13"&gt;&lt;span class="lineno"&gt;  13 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-14"&gt;&lt;span class="lineno"&gt;  14 &lt;/span&gt;&lt;span class="sd"&gt;    A finite state machine for text filters using regular expressions.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-15"&gt;&lt;span class="lineno"&gt;  15 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-16"&gt;&lt;span class="lineno"&gt;  16 &lt;/span&gt;&lt;span class="sd"&gt;    The input is provided in the form of a list of one-line strings (no&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-17"&gt;&lt;span class="lineno"&gt;  17 &lt;/span&gt;&lt;span class="sd"&gt;    newlines). States are subclasses of the `State` class. Transitions consist&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-18"&gt;&lt;span class="lineno"&gt;  18 &lt;/span&gt;&lt;span class="sd"&gt;    of regular expression patterns and transition methods, and are defined in&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-19"&gt;&lt;span class="lineno"&gt;  19 &lt;/span&gt;&lt;span class="sd"&gt;    each state.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-20"&gt;&lt;span class="lineno"&gt;  20 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-21"&gt;&lt;span class="lineno"&gt;  21 &lt;/span&gt;&lt;span class="sd"&gt;    The state machine is started with the `run()` method, which returns the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-22"&gt;&lt;span class="lineno"&gt;  22 &lt;/span&gt;&lt;span class="sd"&gt;    results of processing in a list.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-23"&gt;&lt;span class="lineno"&gt;  23 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-24"&gt;&lt;span class="lineno"&gt;  24 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-25"&gt;&lt;span class="lineno"&gt;  25 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state_classes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;initial_state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-26"&gt;&lt;span class="lineno"&gt;  26 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-27"&gt;&lt;span class="lineno"&gt;  27 &lt;/span&gt;&lt;span class="sd"&gt;        Initialize a `StateMachine` object; add state objects.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-28"&gt;&lt;span class="lineno"&gt;  28 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-29"&gt;&lt;span class="lineno"&gt;  29 &lt;/span&gt;&lt;span class="sd"&gt;        Parameters:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-30"&gt;&lt;span class="lineno"&gt;  30 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-31"&gt;&lt;span class="lineno"&gt;  31 &lt;/span&gt;&lt;span class="sd"&gt;        - `state_classes`: a list of `State` (sub)classes.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-32"&gt;&lt;span class="lineno"&gt;  32 &lt;/span&gt;&lt;span class="sd"&gt;        - `initial_state`: a string, the class name of the initial state.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-33"&gt;&lt;span class="lineno"&gt;  33 &lt;/span&gt;&lt;span class="sd"&gt;        - `debug`: a boolean; produce verbose output if true (nonzero).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-34"&gt;&lt;span class="lineno"&gt;  34 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-35"&gt;&lt;span class="lineno"&gt;  35 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-36"&gt;&lt;span class="lineno"&gt;  36 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-37"&gt;&lt;span class="lineno"&gt;  37 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;`StringList` of input lines (without newlines).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-38"&gt;&lt;span class="lineno"&gt;  38 &lt;/span&gt;&lt;span class="sd"&gt;        Filled by `self.run()`.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-39"&gt;&lt;span class="lineno"&gt;  39 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-40"&gt;&lt;span class="lineno"&gt;  40 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-41"&gt;&lt;span class="lineno"&gt;  41 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Offset of `self.input_lines` from the beginning of the file.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-42"&gt;&lt;span class="lineno"&gt;  42 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-43"&gt;&lt;span class="lineno"&gt;  43 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-44"&gt;&lt;span class="lineno"&gt;  44 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Current input line.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-45"&gt;&lt;span class="lineno"&gt;  45 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-46"&gt;&lt;span class="lineno"&gt;  46 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-47"&gt;&lt;span class="lineno"&gt;  47 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Current input line offset from beginning of `self.input_lines`.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-48"&gt;&lt;span class="lineno"&gt;  48 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-49"&gt;&lt;span class="lineno"&gt;  49 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-50"&gt;&lt;span class="lineno"&gt;  50 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Debugging mode on/off.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-51"&gt;&lt;span class="lineno"&gt;  51 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-52"&gt;&lt;span class="lineno"&gt;  52 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initial_state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;initial_state&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-53"&gt;&lt;span class="lineno"&gt;  53 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;The name of the initial state (key to `self.states`).&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-54"&gt;&lt;span class="lineno"&gt;  54 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-55"&gt;&lt;span class="lineno"&gt;  55 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;initial_state&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-56"&gt;&lt;span class="lineno"&gt;  56 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;The name of the current state (key to `self.states`).&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-57"&gt;&lt;span class="lineno"&gt;  57 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-58"&gt;&lt;span class="lineno"&gt;  58 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;states&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-59"&gt;&lt;span class="lineno"&gt;  59 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Mapping of {state_name: State_object}.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-60"&gt;&lt;span class="lineno"&gt;  60 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-61"&gt;&lt;span class="lineno"&gt;  61 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_states&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state_classes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-62"&gt;&lt;span class="lineno"&gt;  62 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-63"&gt;&lt;span class="lineno"&gt;  63 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;observers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-64"&gt;&lt;span class="lineno"&gt;  64 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;List of bound methods or functions to call whenever the current&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-65"&gt;&lt;span class="lineno"&gt;  65 &lt;/span&gt;&lt;span class="sd"&gt;        line changes.  Observers are called with one argument, ``self``.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-66"&gt;&lt;span class="lineno"&gt;  66 &lt;/span&gt;&lt;span class="sd"&gt;        Cleared at the end of `run()`.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-67"&gt;&lt;span class="lineno"&gt;  67 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-68"&gt;&lt;span class="lineno"&gt;  68 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stderr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ErrorOutput&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-69"&gt;&lt;span class="lineno"&gt;  69 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Wrapper around sys.stderr catching en-/decoding errors&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-70"&gt;&lt;span class="lineno"&gt;  70 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-71"&gt;&lt;span class="lineno"&gt;  71 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-72"&gt;&lt;span class="lineno"&gt;  72 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;unlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-73"&gt;&lt;span class="lineno"&gt;  73 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Remove circular references to objects no longer required.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-74"&gt;&lt;span class="lineno"&gt;  74 &lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;states&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-75"&gt;&lt;span class="lineno"&gt;  75 &lt;/span&gt;            &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;unlink&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-76"&gt;&lt;span class="lineno"&gt;  76 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;states&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-77"&gt;&lt;span class="lineno"&gt;  77 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-78"&gt;&lt;span class="lineno"&gt;  78 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input_offset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-79"&gt;&lt;span class="lineno"&gt;  79 &lt;/span&gt;            &lt;span class="n"&gt;input_source&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;initial_state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-80"&gt;&lt;span class="lineno"&gt;  80 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-81"&gt;&lt;span class="lineno"&gt;  81 &lt;/span&gt;&lt;span class="sd"&gt;        Run the state machine on `input_lines`. Return results (a list).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-82"&gt;&lt;span class="lineno"&gt;  82 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-83"&gt;&lt;span class="lineno"&gt;  83 &lt;/span&gt;&lt;span class="sd"&gt;        Reset `self.line_offset` and `self.current_state`. Run the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-84"&gt;&lt;span class="lineno"&gt;  84 &lt;/span&gt;&lt;span class="sd"&gt;        beginning-of-file transition. Input one line at a time and check for a&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-85"&gt;&lt;span class="lineno"&gt;  85 &lt;/span&gt;&lt;span class="sd"&gt;        matching transition. If a match is found, call the transition method&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-86"&gt;&lt;span class="lineno"&gt;  86 &lt;/span&gt;&lt;span class="sd"&gt;        and possibly change the state. Store the context returned by the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-87"&gt;&lt;span class="lineno"&gt;  87 &lt;/span&gt;&lt;span class="sd"&gt;        transition method to be passed on to the next transition matched.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-88"&gt;&lt;span class="lineno"&gt;  88 &lt;/span&gt;&lt;span class="sd"&gt;        Accumulate the results returned by the transition methods in a list.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-89"&gt;&lt;span class="lineno"&gt;  89 &lt;/span&gt;&lt;span class="sd"&gt;        Run the end-of-file transition. Finally, return the accumulated&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-90"&gt;&lt;span class="lineno"&gt;  90 &lt;/span&gt;&lt;span class="sd"&gt;        results.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-91"&gt;&lt;span class="lineno"&gt;  91 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-92"&gt;&lt;span class="lineno"&gt;  92 &lt;/span&gt;&lt;span class="sd"&gt;        Parameters:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-93"&gt;&lt;span class="lineno"&gt;  93 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-94"&gt;&lt;span class="lineno"&gt;  94 &lt;/span&gt;&lt;span class="sd"&gt;        - `input_lines`: a list of strings without newlines, or `StringList`.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-95"&gt;&lt;span class="lineno"&gt;  95 &lt;/span&gt;&lt;span class="sd"&gt;        - `input_offset`: the line offset of `input_lines` from the beginning&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-96"&gt;&lt;span class="lineno"&gt;  96 &lt;/span&gt;&lt;span class="sd"&gt;          of the file.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-97"&gt;&lt;span class="lineno"&gt;  97 &lt;/span&gt;&lt;span class="sd"&gt;        - `context`: application-specific storage.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-98"&gt;&lt;span class="lineno"&gt;  98 &lt;/span&gt;&lt;span class="sd"&gt;        - `input_source`: name or path of source of `input_lines`.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-99"&gt;&lt;span class="lineno"&gt;  99 &lt;/span&gt;&lt;span class="sd"&gt;        - `initial_state`: name of initial state.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-100"&gt;&lt;span class="lineno"&gt; 100 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-101"&gt;&lt;span class="lineno"&gt; 101 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;runtime_init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-102"&gt;&lt;span class="lineno"&gt; 102 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;StringList&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-103"&gt;&lt;span class="lineno"&gt; 103 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input_lines&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-104"&gt;&lt;span class="lineno"&gt; 104 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-105"&gt;&lt;span class="lineno"&gt; 105 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StringList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;input_source&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-106"&gt;&lt;span class="lineno"&gt; 106 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input_offset&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-107"&gt;&lt;span class="lineno"&gt; 107 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-108"&gt;&lt;span class="lineno"&gt; 108 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;initial_state&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initial_state&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-109"&gt;&lt;span class="lineno"&gt; 109 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-110"&gt;&lt;span class="lineno"&gt; 110 &lt;/span&gt;            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-111"&gt;&lt;span class="lineno"&gt; 111 &lt;/span&gt;                &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;StateMachine.run: input_lines (line_offset=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;):&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;| &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-112"&gt;&lt;span class="lineno"&gt; 112 &lt;/span&gt;                &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;| &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-113"&gt;&lt;span class="lineno"&gt; 113 &lt;/span&gt;        &lt;span class="n"&gt;transitions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-114"&gt;&lt;span class="lineno"&gt; 114 &lt;/span&gt;        &lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-115"&gt;&lt;span class="lineno"&gt; 115 &lt;/span&gt;        &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_state&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-116"&gt;&lt;span class="lineno"&gt; 116 &lt;/span&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-117"&gt;&lt;span class="lineno"&gt; 117 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-118"&gt;&lt;span class="lineno"&gt; 118 &lt;/span&gt;                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;StateMachine.run: bof transition&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-119"&gt;&lt;span class="lineno"&gt; 119 &lt;/span&gt;            &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-120"&gt;&lt;span class="lineno"&gt; 120 &lt;/span&gt;            &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-121"&gt;&lt;span class="lineno"&gt; 121 &lt;/span&gt;            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-122"&gt;&lt;span class="lineno"&gt; 122 &lt;/span&gt;                &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-123"&gt;&lt;span class="lineno"&gt; 123 &lt;/span&gt;                    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-124"&gt;&lt;span class="lineno"&gt; 124 &lt;/span&gt;                        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_line&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-125"&gt;&lt;span class="lineno"&gt; 125 &lt;/span&gt;                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-126"&gt;&lt;span class="lineno"&gt; 126 &lt;/span&gt;                            &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-127"&gt;&lt;span class="lineno"&gt; 127 &lt;/span&gt;                                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-128"&gt;&lt;span class="lineno"&gt; 128 &lt;/span&gt;                            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-129"&gt;&lt;span class="lineno"&gt; 129 &lt;/span&gt;                                &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;StateMachine.run: line (source=&lt;/span&gt;&lt;span class="si"&gt;%r&lt;/span&gt;&lt;span class="s1"&gt;, &amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-130"&gt;&lt;span class="lineno"&gt; 130 &lt;/span&gt;                                &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;offset=&lt;/span&gt;&lt;span class="si"&gt;%r&lt;/span&gt;&lt;span class="s1"&gt;):&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;| &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-131"&gt;&lt;span class="lineno"&gt; 131 &lt;/span&gt;                                &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-132"&gt;&lt;span class="lineno"&gt; 132 &lt;/span&gt;                        &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;check_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-133"&gt;&lt;span class="lineno"&gt; 133 &lt;/span&gt;                            &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-134"&gt;&lt;span class="lineno"&gt; 134 &lt;/span&gt;                    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;EOFError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-135"&gt;&lt;span class="lineno"&gt; 135 &lt;/span&gt;                        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-136"&gt;&lt;span class="lineno"&gt; 136 &lt;/span&gt;                            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-137"&gt;&lt;span class="lineno"&gt; 137 &lt;/span&gt;                                &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;StateMachine.run: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;.eof transition&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-138"&gt;&lt;span class="lineno"&gt; 138 &lt;/span&gt;                                &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-139"&gt;&lt;span class="lineno"&gt; 139 &lt;/span&gt;                        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-140"&gt;&lt;span class="lineno"&gt; 140 &lt;/span&gt;                        &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-141"&gt;&lt;span class="lineno"&gt; 141 &lt;/span&gt;                        &lt;span class="k"&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-142"&gt;&lt;span class="lineno"&gt; 142 &lt;/span&gt;                    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-143"&gt;&lt;span class="lineno"&gt; 143 &lt;/span&gt;                        &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-144"&gt;&lt;span class="lineno"&gt; 144 &lt;/span&gt;                &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;TransitionCorrection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-145"&gt;&lt;span class="lineno"&gt; 145 &lt;/span&gt;                    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;previous_line&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# back up for another try&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-146"&gt;&lt;span class="lineno"&gt; 146 &lt;/span&gt;                    &lt;span class="n"&gt;transitions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-147"&gt;&lt;span class="lineno"&gt; 147 &lt;/span&gt;                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-148"&gt;&lt;span class="lineno"&gt; 148 &lt;/span&gt;                        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-149"&gt;&lt;span class="lineno"&gt; 149 &lt;/span&gt;                              &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;StateMachine.run: TransitionCorrection to &amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-150"&gt;&lt;span class="lineno"&gt; 150 &lt;/span&gt;                              &lt;span class="s1"&gt;&amp;#39;state &amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;quot;, transition &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-151"&gt;&lt;span class="lineno"&gt; 151 &lt;/span&gt;                              &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-152"&gt;&lt;span class="lineno"&gt; 152 &lt;/span&gt;                    &lt;span class="k"&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-153"&gt;&lt;span class="lineno"&gt; 153 &lt;/span&gt;                &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;StateCorrection&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-154"&gt;&lt;span class="lineno"&gt; 154 &lt;/span&gt;                    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;previous_line&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;# back up for another try&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-155"&gt;&lt;span class="lineno"&gt; 155 &lt;/span&gt;                    &lt;span class="n"&gt;next_state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-156"&gt;&lt;span class="lineno"&gt; 156 &lt;/span&gt;                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-157"&gt;&lt;span class="lineno"&gt; 157 &lt;/span&gt;                        &lt;span class="n"&gt;transitions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-158"&gt;&lt;span class="lineno"&gt; 158 &lt;/span&gt;                    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-159"&gt;&lt;span class="lineno"&gt; 159 &lt;/span&gt;                        &lt;span class="n"&gt;transitions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-160"&gt;&lt;span class="lineno"&gt; 160 &lt;/span&gt;                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-161"&gt;&lt;span class="lineno"&gt; 161 &lt;/span&gt;                        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-162"&gt;&lt;span class="lineno"&gt; 162 &lt;/span&gt;                              &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;StateMachine.run: StateCorrection to state &amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-163"&gt;&lt;span class="lineno"&gt; 163 &lt;/span&gt;                              &lt;span class="s1"&gt;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;quot;, transition &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-164"&gt;&lt;span class="lineno"&gt; 164 &lt;/span&gt;                              &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-165"&gt;&lt;span class="lineno"&gt; 165 &lt;/span&gt;                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-166"&gt;&lt;span class="lineno"&gt; 166 &lt;/span&gt;                    &lt;span class="n"&gt;transitions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-167"&gt;&lt;span class="lineno"&gt; 167 &lt;/span&gt;                &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_state&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-168"&gt;&lt;span class="lineno"&gt; 168 &lt;/span&gt;        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-169"&gt;&lt;span class="lineno"&gt; 169 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-170"&gt;&lt;span class="lineno"&gt; 170 &lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-171"&gt;&lt;span class="lineno"&gt; 171 &lt;/span&gt;            &lt;span class="k"&gt;raise&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-172"&gt;&lt;span class="lineno"&gt; 172 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;observers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-173"&gt;&lt;span class="lineno"&gt; 173 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-174"&gt;&lt;span class="lineno"&gt; 174 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-175"&gt;&lt;span class="lineno"&gt; 175 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_state&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-176"&gt;&lt;span class="lineno"&gt; 176 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-177"&gt;&lt;span class="lineno"&gt; 177 &lt;/span&gt;&lt;span class="sd"&gt;        Return current state object; set it first if `next_state` given.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-178"&gt;&lt;span class="lineno"&gt; 178 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-179"&gt;&lt;span class="lineno"&gt; 179 &lt;/span&gt;&lt;span class="sd"&gt;        Parameter `next_state`: a string, the name of the next state.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-180"&gt;&lt;span class="lineno"&gt; 180 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-181"&gt;&lt;span class="lineno"&gt; 181 &lt;/span&gt;&lt;span class="sd"&gt;        Exception: `UnknownStateError` raised if `next_state` unknown.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-182"&gt;&lt;span class="lineno"&gt; 182 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-183"&gt;&lt;span class="lineno"&gt; 183 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-184"&gt;&lt;span class="lineno"&gt; 184 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-185"&gt;&lt;span class="lineno"&gt; 185 &lt;/span&gt;                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-186"&gt;&lt;span class="lineno"&gt; 186 &lt;/span&gt;                    &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;StateMachine.get_state: Changing state from &amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-187"&gt;&lt;span class="lineno"&gt; 187 &lt;/span&gt;                    &lt;span class="s1"&gt;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;quot; to &amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;quot; (input line &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;).&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-188"&gt;&lt;span class="lineno"&gt; 188 &lt;/span&gt;                    &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-189"&gt;&lt;span class="lineno"&gt; 189 &lt;/span&gt;                       &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abs_line_number&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-190"&gt;&lt;span class="lineno"&gt; 190 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-191"&gt;&lt;span class="lineno"&gt; 191 &lt;/span&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-192"&gt;&lt;span class="lineno"&gt; 192 &lt;/span&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;states&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_state&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-193"&gt;&lt;span class="lineno"&gt; 193 &lt;/span&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;KeyError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-194"&gt;&lt;span class="lineno"&gt; 194 &lt;/span&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;UnknownStateError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current_state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-195"&gt;&lt;span class="lineno"&gt; 195 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-196"&gt;&lt;span class="lineno"&gt; 196 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;next_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-197"&gt;&lt;span class="lineno"&gt; 197 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Load `self.line` with the `n`&amp;#39;th next line and return it.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-198"&gt;&lt;span class="lineno"&gt; 198 &lt;/span&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-199"&gt;&lt;span class="lineno"&gt; 199 &lt;/span&gt;            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-200"&gt;&lt;span class="lineno"&gt; 200 &lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-201"&gt;&lt;span class="lineno"&gt; 201 &lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-202"&gt;&lt;span class="lineno"&gt; 202 &lt;/span&gt;            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IndexError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-203"&gt;&lt;span class="lineno"&gt; 203 &lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-204"&gt;&lt;span class="lineno"&gt; 204 &lt;/span&gt;                &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;EOFError&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-205"&gt;&lt;span class="lineno"&gt; 205 &lt;/span&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-206"&gt;&lt;span class="lineno"&gt; 206 &lt;/span&gt;        &lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-207"&gt;&lt;span class="lineno"&gt; 207 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notify_observers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-208"&gt;&lt;span class="lineno"&gt; 208 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-209"&gt;&lt;span class="lineno"&gt; 209 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_next_line_blank&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-210"&gt;&lt;span class="lineno"&gt; 210 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Return 1 if the next line is blank or non-existant.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-211"&gt;&lt;span class="lineno"&gt; 211 &lt;/span&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-212"&gt;&lt;span class="lineno"&gt; 212 &lt;/span&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-213"&gt;&lt;span class="lineno"&gt; 213 &lt;/span&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IndexError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-214"&gt;&lt;span class="lineno"&gt; 214 &lt;/span&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-215"&gt;&lt;span class="lineno"&gt; 215 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-216"&gt;&lt;span class="lineno"&gt; 216 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;at_eof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-217"&gt;&lt;span class="lineno"&gt; 217 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Return 1 if the input is at or past end-of-file.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-218"&gt;&lt;span class="lineno"&gt; 218 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-219"&gt;&lt;span class="lineno"&gt; 219 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-220"&gt;&lt;span class="lineno"&gt; 220 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;at_bof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-221"&gt;&lt;span class="lineno"&gt; 221 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Return 1 if the input is at or before beginning-of-file.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-222"&gt;&lt;span class="lineno"&gt; 222 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-223"&gt;&lt;span class="lineno"&gt; 223 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-224"&gt;&lt;span class="lineno"&gt; 224 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;previous_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-225"&gt;&lt;span class="lineno"&gt; 225 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Load `self.line` with the `n`&amp;#39;th previous line and return it.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-226"&gt;&lt;span class="lineno"&gt; 226 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-227"&gt;&lt;span class="lineno"&gt; 227 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-228"&gt;&lt;span class="lineno"&gt; 228 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-229"&gt;&lt;span class="lineno"&gt; 229 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-230"&gt;&lt;span class="lineno"&gt; 230 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-231"&gt;&lt;span class="lineno"&gt; 231 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notify_observers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-232"&gt;&lt;span class="lineno"&gt; 232 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-233"&gt;&lt;span class="lineno"&gt; 233 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-234"&gt;&lt;span class="lineno"&gt; 234 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;goto_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-235"&gt;&lt;span class="lineno"&gt; 235 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Jump to absolute line offset `line_offset`, load and return it.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-236"&gt;&lt;span class="lineno"&gt; 236 &lt;/span&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-237"&gt;&lt;span class="lineno"&gt; 237 &lt;/span&gt;            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-238"&gt;&lt;span class="lineno"&gt; 238 &lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line_offset&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_offset&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-239"&gt;&lt;span class="lineno"&gt; 239 &lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-240"&gt;&lt;span class="lineno"&gt; 240 &lt;/span&gt;            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IndexError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-241"&gt;&lt;span class="lineno"&gt; 241 &lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-242"&gt;&lt;span class="lineno"&gt; 242 &lt;/span&gt;                &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;EOFError&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-243"&gt;&lt;span class="lineno"&gt; 243 &lt;/span&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-244"&gt;&lt;span class="lineno"&gt; 244 &lt;/span&gt;        &lt;span class="k"&gt;finally&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-245"&gt;&lt;span class="lineno"&gt; 245 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;notify_observers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-246"&gt;&lt;span class="lineno"&gt; 246 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-247"&gt;&lt;span class="lineno"&gt; 247 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-248"&gt;&lt;span class="lineno"&gt; 248 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Return source of line at absolute line offset `line_offset`.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-249"&gt;&lt;span class="lineno"&gt; 249 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-250"&gt;&lt;span class="lineno"&gt; 250 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-251"&gt;&lt;span class="lineno"&gt; 251 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;abs_line_offset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-252"&gt;&lt;span class="lineno"&gt; 252 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Return line offset of current line, from beginning of file.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-253"&gt;&lt;span class="lineno"&gt; 253 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_offset&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-254"&gt;&lt;span class="lineno"&gt; 254 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-255"&gt;&lt;span class="lineno"&gt; 255 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;abs_line_number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-256"&gt;&lt;span class="lineno"&gt; 256 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Return line number of current line (counting from 1).&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-257"&gt;&lt;span class="lineno"&gt; 257 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_offset&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-258"&gt;&lt;span class="lineno"&gt; 258 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-259"&gt;&lt;span class="lineno"&gt; 259 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_source_and_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lineno&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-260"&gt;&lt;span class="lineno"&gt; 260 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Return (source, line) tuple for current or given line number.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-261"&gt;&lt;span class="lineno"&gt; 261 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-262"&gt;&lt;span class="lineno"&gt; 262 &lt;/span&gt;&lt;span class="sd"&gt;        Looks up the source and line number in the `self.input_lines`&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-263"&gt;&lt;span class="lineno"&gt; 263 &lt;/span&gt;&lt;span class="sd"&gt;        StringList instance to count for included source files.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-264"&gt;&lt;span class="lineno"&gt; 264 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-265"&gt;&lt;span class="lineno"&gt; 265 &lt;/span&gt;&lt;span class="sd"&gt;        If the optional argument `lineno` is given, convert it from an&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-266"&gt;&lt;span class="lineno"&gt; 266 &lt;/span&gt;&lt;span class="sd"&gt;        absolute line number to the corresponding (source, line) pair.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-267"&gt;&lt;span class="lineno"&gt; 267 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-268"&gt;&lt;span class="lineno"&gt; 268 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;lineno&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-269"&gt;&lt;span class="lineno"&gt; 269 &lt;/span&gt;            &lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-270"&gt;&lt;span class="lineno"&gt; 270 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-271"&gt;&lt;span class="lineno"&gt; 271 &lt;/span&gt;            &lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lineno&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_offset&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-272"&gt;&lt;span class="lineno"&gt; 272 &lt;/span&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-273"&gt;&lt;span class="lineno"&gt; 273 &lt;/span&gt;            &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;srcoffset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-274"&gt;&lt;span class="lineno"&gt; 274 &lt;/span&gt;            &lt;span class="n"&gt;srcline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;srcoffset&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-275"&gt;&lt;span class="lineno"&gt; 275 &lt;/span&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-276"&gt;&lt;span class="lineno"&gt; 276 &lt;/span&gt;            &lt;span class="c1"&gt;# line is None if index is &amp;quot;Just past the end&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-277"&gt;&lt;span class="lineno"&gt; 277 &lt;/span&gt;            &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;srcline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_source_and_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-278"&gt;&lt;span class="lineno"&gt; 278 &lt;/span&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;srcline&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-279"&gt;&lt;span class="lineno"&gt; 279 &lt;/span&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;IndexError&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="c1"&gt;# `offset` is off the list&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-280"&gt;&lt;span class="lineno"&gt; 280 &lt;/span&gt;            &lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;srcline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-281"&gt;&lt;span class="lineno"&gt; 281 &lt;/span&gt;            &lt;span class="c1"&gt;# raise AssertionError(&amp;#39;cannot find line %d in %s lines&amp;#39; %&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-282"&gt;&lt;span class="lineno"&gt; 282 &lt;/span&gt;            &lt;span class="c1"&gt;#                      (offset, len(self.input_lines)))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-283"&gt;&lt;span class="lineno"&gt; 283 &lt;/span&gt;            &lt;span class="c1"&gt;#                      # list(self.input_lines.lines())))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-284"&gt;&lt;span class="lineno"&gt; 284 &lt;/span&gt;        &lt;span class="c1"&gt;# assert offset == srcoffset, str(self.input_lines)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-285"&gt;&lt;span class="lineno"&gt; 285 &lt;/span&gt;        &lt;span class="c1"&gt;# print &amp;quot;get_source_and_line(%s):&amp;quot; % lineno,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-286"&gt;&lt;span class="lineno"&gt; 286 &lt;/span&gt;        &lt;span class="c1"&gt;# print offset + 1, &amp;#39;-&amp;gt;&amp;#39;, src, srcline&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-287"&gt;&lt;span class="lineno"&gt; 287 &lt;/span&gt;        &lt;span class="c1"&gt;# print self.input_lines&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-288"&gt;&lt;span class="lineno"&gt; 288 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;srcline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-289"&gt;&lt;span class="lineno"&gt; 289 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-290"&gt;&lt;span class="lineno"&gt; 290 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;insert_input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-291"&gt;&lt;span class="lineno"&gt; 291 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-292"&gt;&lt;span class="lineno"&gt; 292 &lt;/span&gt;                                &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;internal padding after &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-293"&gt;&lt;span class="lineno"&gt; 293 &lt;/span&gt;                                &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-294"&gt;&lt;span class="lineno"&gt; 294 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-295"&gt;&lt;span class="lineno"&gt; 295 &lt;/span&gt;                                &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;internal padding before &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-296"&gt;&lt;span class="lineno"&gt; 296 &lt;/span&gt;                                &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-297"&gt;&lt;span class="lineno"&gt; 297 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-298"&gt;&lt;span class="lineno"&gt; 298 &lt;/span&gt;                                &lt;span class="n"&gt;StringList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-299"&gt;&lt;span class="lineno"&gt; 299 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-300"&gt;&lt;span class="lineno"&gt; 300 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_text_block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flush_left&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-301"&gt;&lt;span class="lineno"&gt; 301 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-302"&gt;&lt;span class="lineno"&gt; 302 &lt;/span&gt;&lt;span class="sd"&gt;        Return a contiguous block of text.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-303"&gt;&lt;span class="lineno"&gt; 303 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-304"&gt;&lt;span class="lineno"&gt; 304 &lt;/span&gt;&lt;span class="sd"&gt;        If `flush_left` is true, raise `UnexpectedIndentationError` if an&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-305"&gt;&lt;span class="lineno"&gt; 305 &lt;/span&gt;&lt;span class="sd"&gt;        indented line is encountered before the text block ends (with a blank&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-306"&gt;&lt;span class="lineno"&gt; 306 &lt;/span&gt;&lt;span class="sd"&gt;        line).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-307"&gt;&lt;span class="lineno"&gt; 307 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-308"&gt;&lt;span class="lineno"&gt; 308 &lt;/span&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-309"&gt;&lt;span class="lineno"&gt; 309 &lt;/span&gt;            &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_text_block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-310"&gt;&lt;span class="lineno"&gt; 310 &lt;/span&gt;                                                    &lt;span class="n"&gt;flush_left&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-311"&gt;&lt;span class="lineno"&gt; 311 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-312"&gt;&lt;span class="lineno"&gt; 312 &lt;/span&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-313"&gt;&lt;span class="lineno"&gt; 313 &lt;/span&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;UnexpectedIndentationError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-314"&gt;&lt;span class="lineno"&gt; 314 &lt;/span&gt;            &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-315"&gt;&lt;span class="lineno"&gt; 315 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# advance to last line of block&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-316"&gt;&lt;span class="lineno"&gt; 316 &lt;/span&gt;            &lt;span class="k"&gt;raise&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-317"&gt;&lt;span class="lineno"&gt; 317 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-318"&gt;&lt;span class="lineno"&gt; 318 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;check_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-319"&gt;&lt;span class="lineno"&gt; 319 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-320"&gt;&lt;span class="lineno"&gt; 320 &lt;/span&gt;&lt;span class="sd"&gt;        Examine one line of input for a transition match &amp;amp; execute its method.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-321"&gt;&lt;span class="lineno"&gt; 321 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-322"&gt;&lt;span class="lineno"&gt; 322 &lt;/span&gt;&lt;span class="sd"&gt;        Parameters:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-323"&gt;&lt;span class="lineno"&gt; 323 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-324"&gt;&lt;span class="lineno"&gt; 324 &lt;/span&gt;&lt;span class="sd"&gt;        - `context`: application-dependent storage.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-325"&gt;&lt;span class="lineno"&gt; 325 &lt;/span&gt;&lt;span class="sd"&gt;        - `state`: a `State` object, the current state.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-326"&gt;&lt;span class="lineno"&gt; 326 &lt;/span&gt;&lt;span class="sd"&gt;        - `transitions`: an optional ordered list of transition names to try,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-327"&gt;&lt;span class="lineno"&gt; 327 &lt;/span&gt;&lt;span class="sd"&gt;          instead of ``state.transition_order``.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-328"&gt;&lt;span class="lineno"&gt; 328 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-329"&gt;&lt;span class="lineno"&gt; 329 &lt;/span&gt;&lt;span class="sd"&gt;        Return the values returned by the transition method:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-330"&gt;&lt;span class="lineno"&gt; 330 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-331"&gt;&lt;span class="lineno"&gt; 331 &lt;/span&gt;&lt;span class="sd"&gt;        - context: possibly modified from the parameter `context`;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-332"&gt;&lt;span class="lineno"&gt; 332 &lt;/span&gt;&lt;span class="sd"&gt;        - next state name (`State` subclass name);&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-333"&gt;&lt;span class="lineno"&gt; 333 &lt;/span&gt;&lt;span class="sd"&gt;        - the result output of the transition, a list.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-334"&gt;&lt;span class="lineno"&gt; 334 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-335"&gt;&lt;span class="lineno"&gt; 335 &lt;/span&gt;&lt;span class="sd"&gt;        When there is no match, ``state.no_match()`` is called and its return&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-336"&gt;&lt;span class="lineno"&gt; 336 &lt;/span&gt;&lt;span class="sd"&gt;        value is returned.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-337"&gt;&lt;span class="lineno"&gt; 337 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-338"&gt;&lt;span class="lineno"&gt; 338 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;transitions&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-339"&gt;&lt;span class="lineno"&gt; 339 &lt;/span&gt;            &lt;span class="n"&gt;transitions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transition_order&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-340"&gt;&lt;span class="lineno"&gt; 340 &lt;/span&gt;        &lt;span class="n"&gt;state_correction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-341"&gt;&lt;span class="lineno"&gt; 341 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-342"&gt;&lt;span class="lineno"&gt; 342 &lt;/span&gt;            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-343"&gt;&lt;span class="lineno"&gt; 343 &lt;/span&gt;                  &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;StateMachine.check_line: state=&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;quot;, transitions=&lt;/span&gt;&lt;span class="si"&gt;%r&lt;/span&gt;&lt;span class="s1"&gt;.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-344"&gt;&lt;span class="lineno"&gt; 344 &lt;/span&gt;                  &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-345"&gt;&lt;span class="lineno"&gt; 345 &lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-346"&gt;&lt;span class="lineno"&gt; 346 &lt;/span&gt;            &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-347"&gt;&lt;span class="lineno"&gt; 347 &lt;/span&gt;            &lt;span class="n"&gt;match&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-348"&gt;&lt;span class="lineno"&gt; 348 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-349"&gt;&lt;span class="lineno"&gt; 349 &lt;/span&gt;                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-350"&gt;&lt;span class="lineno"&gt; 350 &lt;/span&gt;                    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-351"&gt;&lt;span class="lineno"&gt; 351 &lt;/span&gt;                          &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;StateMachine.check_line: Matched transition &amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-352"&gt;&lt;span class="lineno"&gt; 352 &lt;/span&gt;                          &lt;span class="s1"&gt;&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;quot; in state &amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;quot;.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-353"&gt;&lt;span class="lineno"&gt; 353 &lt;/span&gt;                          &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-354"&gt;&lt;span class="lineno"&gt; 354 &lt;/span&gt;                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-355"&gt;&lt;span class="lineno"&gt; 355 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-356"&gt;&lt;span class="lineno"&gt; 356 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-357"&gt;&lt;span class="lineno"&gt; 357 &lt;/span&gt;                &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-358"&gt;&lt;span class="lineno"&gt; 358 &lt;/span&gt;                      &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;StateMachine.check_line: No match in state &amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;quot;.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-359"&gt;&lt;span class="lineno"&gt; 359 &lt;/span&gt;                      &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-360"&gt;&lt;span class="lineno"&gt; 360 &lt;/span&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;no_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-361"&gt;&lt;span class="lineno"&gt; 361 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-362"&gt;&lt;span class="lineno"&gt; 362 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_state&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state_class&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-363"&gt;&lt;span class="lineno"&gt; 363 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-364"&gt;&lt;span class="lineno"&gt; 364 &lt;/span&gt;&lt;span class="sd"&gt;        Initialize &amp;amp; add a `state_class` (`State` subclass) object.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-365"&gt;&lt;span class="lineno"&gt; 365 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-366"&gt;&lt;span class="lineno"&gt; 366 &lt;/span&gt;&lt;span class="sd"&gt;        Exception: `DuplicateStateError` raised if `state_class` was already&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-367"&gt;&lt;span class="lineno"&gt; 367 &lt;/span&gt;&lt;span class="sd"&gt;        added.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-368"&gt;&lt;span class="lineno"&gt; 368 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-369"&gt;&lt;span class="lineno"&gt; 369 &lt;/span&gt;        &lt;span class="n"&gt;statename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;state_class&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-370"&gt;&lt;span class="lineno"&gt; 370 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;statename&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;states&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-371"&gt;&lt;span class="lineno"&gt; 371 &lt;/span&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;DuplicateStateError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;statename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-372"&gt;&lt;span class="lineno"&gt; 372 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;states&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;statename&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;state_class&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-373"&gt;&lt;span class="lineno"&gt; 373 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-374"&gt;&lt;span class="lineno"&gt; 374 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_states&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state_classes&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-375"&gt;&lt;span class="lineno"&gt; 375 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-376"&gt;&lt;span class="lineno"&gt; 376 &lt;/span&gt;&lt;span class="sd"&gt;        Add `state_classes` (a list of `State` subclasses).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-377"&gt;&lt;span class="lineno"&gt; 377 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-378"&gt;&lt;span class="lineno"&gt; 378 &lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;state_class&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;state_classes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-379"&gt;&lt;span class="lineno"&gt; 379 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_state&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;state_class&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-380"&gt;&lt;span class="lineno"&gt; 380 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-381"&gt;&lt;span class="lineno"&gt; 381 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;runtime_init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-382"&gt;&lt;span class="lineno"&gt; 382 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-383"&gt;&lt;span class="lineno"&gt; 383 &lt;/span&gt;&lt;span class="sd"&gt;        Initialize `self.states`.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-384"&gt;&lt;span class="lineno"&gt; 384 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-385"&gt;&lt;span class="lineno"&gt; 385 &lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;states&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-386"&gt;&lt;span class="lineno"&gt; 386 &lt;/span&gt;            &lt;span class="n"&gt;state&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;runtime_init&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-387"&gt;&lt;span class="lineno"&gt; 387 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-388"&gt;&lt;span class="lineno"&gt; 388 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-389"&gt;&lt;span class="lineno"&gt; 389 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Report error details.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-390"&gt;&lt;span class="lineno"&gt; 390 &lt;/span&gt;        &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_exception_data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-391"&gt;&lt;span class="lineno"&gt; 391 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-392"&gt;&lt;span class="lineno"&gt; 392 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;input line &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abs_line_number&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-393"&gt;&lt;span class="lineno"&gt; 393 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;module &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;, line &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;, function &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-394"&gt;&lt;span class="lineno"&gt; 394 &lt;/span&gt;                               &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-395"&gt;&lt;span class="lineno"&gt; 395 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-396"&gt;&lt;span class="lineno"&gt; 396 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;attach_observer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-397"&gt;&lt;span class="lineno"&gt; 397 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-398"&gt;&lt;span class="lineno"&gt; 398 &lt;/span&gt;&lt;span class="sd"&gt;        The `observer` parameter is a function or bound method which takes two&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-399"&gt;&lt;span class="lineno"&gt; 399 &lt;/span&gt;&lt;span class="sd"&gt;        arguments, the source and offset of the current line.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-400"&gt;&lt;span class="lineno"&gt; 400 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-401"&gt;&lt;span class="lineno"&gt; 401 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;observers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-402"&gt;&lt;span class="lineno"&gt; 402 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-403"&gt;&lt;span class="lineno"&gt; 403 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;detach_observer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-404"&gt;&lt;span class="lineno"&gt; 404 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;observers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-405"&gt;&lt;span class="lineno"&gt; 405 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-406"&gt;&lt;span class="lineno"&gt; 406 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;notify_observers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-407"&gt;&lt;span class="lineno"&gt; 407 &lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;observer&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;observers&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-408"&gt;&lt;span class="lineno"&gt; 408 &lt;/span&gt;            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-409"&gt;&lt;span class="lineno"&gt; 409 &lt;/span&gt;                &lt;span class="n"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-410"&gt;&lt;span class="lineno"&gt; 410 &lt;/span&gt;            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IndexError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-411"&gt;&lt;span class="lineno"&gt; 411 &lt;/span&gt;                &lt;span class="n"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-412"&gt;&lt;span class="lineno"&gt; 412 &lt;/span&gt;            &lt;span class="n"&gt;observer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-413"&gt;&lt;span class="lineno"&gt; 413 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-414"&gt;&lt;span class="lineno"&gt; 414 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-415"&gt;&lt;span class="lineno"&gt; 415 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;State&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-416"&gt;&lt;span class="lineno"&gt; 416 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-417"&gt;&lt;span class="lineno"&gt; 417 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-418"&gt;&lt;span class="lineno"&gt; 418 &lt;/span&gt;&lt;span class="sd"&gt;    State superclass. Contains a list of transitions, and transition methods.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-419"&gt;&lt;span class="lineno"&gt; 419 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-420"&gt;&lt;span class="lineno"&gt; 420 &lt;/span&gt;&lt;span class="sd"&gt;    Transition methods all have the same signature. They take 3 parameters:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-421"&gt;&lt;span class="lineno"&gt; 421 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-422"&gt;&lt;span class="lineno"&gt; 422 &lt;/span&gt;&lt;span class="sd"&gt;    - An `re` match object. ``match.string`` contains the matched input line,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-423"&gt;&lt;span class="lineno"&gt; 423 &lt;/span&gt;&lt;span class="sd"&gt;      ``match.start()`` gives the start index of the match, and&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-424"&gt;&lt;span class="lineno"&gt; 424 &lt;/span&gt;&lt;span class="sd"&gt;      ``match.end()`` gives the end index.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-425"&gt;&lt;span class="lineno"&gt; 425 &lt;/span&gt;&lt;span class="sd"&gt;    - A context object, whose meaning is application-defined (initial value&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-426"&gt;&lt;span class="lineno"&gt; 426 &lt;/span&gt;&lt;span class="sd"&gt;      ``None``). It can be used to store any information required by the state&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-427"&gt;&lt;span class="lineno"&gt; 427 &lt;/span&gt;&lt;span class="sd"&gt;      machine, and the retured context is passed on to the next transition&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-428"&gt;&lt;span class="lineno"&gt; 428 &lt;/span&gt;&lt;span class="sd"&gt;      method unchanged.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-429"&gt;&lt;span class="lineno"&gt; 429 &lt;/span&gt;&lt;span class="sd"&gt;    - The name of the next state, a string, taken from the transitions list;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-430"&gt;&lt;span class="lineno"&gt; 430 &lt;/span&gt;&lt;span class="sd"&gt;      normally it is returned unchanged, but it may be altered by the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-431"&gt;&lt;span class="lineno"&gt; 431 &lt;/span&gt;&lt;span class="sd"&gt;      transition method if necessary.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-432"&gt;&lt;span class="lineno"&gt; 432 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-433"&gt;&lt;span class="lineno"&gt; 433 &lt;/span&gt;&lt;span class="sd"&gt;    Transition methods all return a 3-tuple:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-434"&gt;&lt;span class="lineno"&gt; 434 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-435"&gt;&lt;span class="lineno"&gt; 435 &lt;/span&gt;&lt;span class="sd"&gt;    - A context object, as (potentially) modified by the transition method.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-436"&gt;&lt;span class="lineno"&gt; 436 &lt;/span&gt;&lt;span class="sd"&gt;    - The next state name (a return value of ``None`` means no state change).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-437"&gt;&lt;span class="lineno"&gt; 437 &lt;/span&gt;&lt;span class="sd"&gt;    - The processing result, a list, which is accumulated by the state&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-438"&gt;&lt;span class="lineno"&gt; 438 &lt;/span&gt;&lt;span class="sd"&gt;      machine.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-439"&gt;&lt;span class="lineno"&gt; 439 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-440"&gt;&lt;span class="lineno"&gt; 440 &lt;/span&gt;&lt;span class="sd"&gt;    Transition methods may raise an `EOFError` to cut processing short.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-441"&gt;&lt;span class="lineno"&gt; 441 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-442"&gt;&lt;span class="lineno"&gt; 442 &lt;/span&gt;&lt;span class="sd"&gt;    There are two implicit transitions, and corresponding transition methods&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-443"&gt;&lt;span class="lineno"&gt; 443 &lt;/span&gt;&lt;span class="sd"&gt;    are defined: `bof()` handles the beginning-of-file, and `eof()` handles&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-444"&gt;&lt;span class="lineno"&gt; 444 &lt;/span&gt;&lt;span class="sd"&gt;    the end-of-file. These methods have non-standard signatures and return&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-445"&gt;&lt;span class="lineno"&gt; 445 &lt;/span&gt;&lt;span class="sd"&gt;    values. `bof()` returns the initial context and results, and may be used&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-446"&gt;&lt;span class="lineno"&gt; 446 &lt;/span&gt;&lt;span class="sd"&gt;    to return a header string, or do any other processing needed. `eof()`&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-447"&gt;&lt;span class="lineno"&gt; 447 &lt;/span&gt;&lt;span class="sd"&gt;    should handle any remaining context and wrap things up; it returns the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-448"&gt;&lt;span class="lineno"&gt; 448 &lt;/span&gt;&lt;span class="sd"&gt;    final processing result.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-449"&gt;&lt;span class="lineno"&gt; 449 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-450"&gt;&lt;span class="lineno"&gt; 450 &lt;/span&gt;&lt;span class="sd"&gt;    Typical applications need only subclass `State` (or a subclass), set the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-451"&gt;&lt;span class="lineno"&gt; 451 &lt;/span&gt;&lt;span class="sd"&gt;    `patterns` and `initial_transitions` class attributes, and provide&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-452"&gt;&lt;span class="lineno"&gt; 452 &lt;/span&gt;&lt;span class="sd"&gt;    corresponding transition methods. The default object initialization will&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-453"&gt;&lt;span class="lineno"&gt; 453 &lt;/span&gt;&lt;span class="sd"&gt;    take care of constructing the list of transitions.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-454"&gt;&lt;span class="lineno"&gt; 454 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-455"&gt;&lt;span class="lineno"&gt; 455 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-456"&gt;&lt;span class="lineno"&gt; 456 &lt;/span&gt;    &lt;span class="n"&gt;patterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-457"&gt;&lt;span class="lineno"&gt; 457 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-458"&gt;&lt;span class="lineno"&gt; 458 &lt;/span&gt;&lt;span class="sd"&gt;    {Name: pattern} mapping, used by `make_transition()`. Each pattern may&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-459"&gt;&lt;span class="lineno"&gt; 459 &lt;/span&gt;&lt;span class="sd"&gt;    be a string or a compiled `re` pattern. Override in subclasses.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-460"&gt;&lt;span class="lineno"&gt; 460 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-461"&gt;&lt;span class="lineno"&gt; 461 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-462"&gt;&lt;span class="lineno"&gt; 462 &lt;/span&gt;    &lt;span class="n"&gt;initial_transitions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-463"&gt;&lt;span class="lineno"&gt; 463 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-464"&gt;&lt;span class="lineno"&gt; 464 &lt;/span&gt;&lt;span class="sd"&gt;    A list of transitions to initialize when a `State` is instantiated.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-465"&gt;&lt;span class="lineno"&gt; 465 &lt;/span&gt;&lt;span class="sd"&gt;    Each entry is either a transition name string, or a (transition name, next&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-466"&gt;&lt;span class="lineno"&gt; 466 &lt;/span&gt;&lt;span class="sd"&gt;    state name) pair. See `make_transitions()`. Override in subclasses.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-467"&gt;&lt;span class="lineno"&gt; 467 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-468"&gt;&lt;span class="lineno"&gt; 468 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-469"&gt;&lt;span class="lineno"&gt; 469 &lt;/span&gt;    &lt;span class="n"&gt;nested_sm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-470"&gt;&lt;span class="lineno"&gt; 470 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-471"&gt;&lt;span class="lineno"&gt; 471 &lt;/span&gt;&lt;span class="sd"&gt;    The `StateMachine` class for handling nested processing.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-472"&gt;&lt;span class="lineno"&gt; 472 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-473"&gt;&lt;span class="lineno"&gt; 473 &lt;/span&gt;&lt;span class="sd"&gt;    If left as ``None``, `nested_sm` defaults to the class of the state&amp;#39;s&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-474"&gt;&lt;span class="lineno"&gt; 474 &lt;/span&gt;&lt;span class="sd"&gt;    controlling state machine. Override it in subclasses to avoid the default.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-475"&gt;&lt;span class="lineno"&gt; 475 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-476"&gt;&lt;span class="lineno"&gt; 476 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-477"&gt;&lt;span class="lineno"&gt; 477 &lt;/span&gt;    &lt;span class="n"&gt;nested_sm_kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-478"&gt;&lt;span class="lineno"&gt; 478 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-479"&gt;&lt;span class="lineno"&gt; 479 &lt;/span&gt;&lt;span class="sd"&gt;    Keyword arguments dictionary, passed to the `nested_sm` constructor.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-480"&gt;&lt;span class="lineno"&gt; 480 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-481"&gt;&lt;span class="lineno"&gt; 481 &lt;/span&gt;&lt;span class="sd"&gt;    Two keys must have entries in the dictionary:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-482"&gt;&lt;span class="lineno"&gt; 482 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-483"&gt;&lt;span class="lineno"&gt; 483 &lt;/span&gt;&lt;span class="sd"&gt;    - Key &amp;#39;state_classes&amp;#39; must be set to a list of `State` classes.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-484"&gt;&lt;span class="lineno"&gt; 484 &lt;/span&gt;&lt;span class="sd"&gt;    - Key &amp;#39;initial_state&amp;#39; must be set to the name of the initial state class.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-485"&gt;&lt;span class="lineno"&gt; 485 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-486"&gt;&lt;span class="lineno"&gt; 486 &lt;/span&gt;&lt;span class="sd"&gt;    If `nested_sm_kwargs` is left as ``None``, &amp;#39;state_classes&amp;#39; defaults to the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-487"&gt;&lt;span class="lineno"&gt; 487 &lt;/span&gt;&lt;span class="sd"&gt;    class of the current state, and &amp;#39;initial_state&amp;#39; defaults to the name of&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-488"&gt;&lt;span class="lineno"&gt; 488 &lt;/span&gt;&lt;span class="sd"&gt;    the class of the current state. Override in subclasses to avoid the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-489"&gt;&lt;span class="lineno"&gt; 489 &lt;/span&gt;&lt;span class="sd"&gt;    defaults.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-490"&gt;&lt;span class="lineno"&gt; 490 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-491"&gt;&lt;span class="lineno"&gt; 491 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-492"&gt;&lt;span class="lineno"&gt; 492 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state_machine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-493"&gt;&lt;span class="lineno"&gt; 493 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-494"&gt;&lt;span class="lineno"&gt; 494 &lt;/span&gt;&lt;span class="sd"&gt;        Initialize a `State` object; make &amp;amp; add initial transitions.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-495"&gt;&lt;span class="lineno"&gt; 495 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-496"&gt;&lt;span class="lineno"&gt; 496 &lt;/span&gt;&lt;span class="sd"&gt;        Parameters:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-497"&gt;&lt;span class="lineno"&gt; 497 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-498"&gt;&lt;span class="lineno"&gt; 498 &lt;/span&gt;&lt;span class="sd"&gt;        - `statemachine`: the controlling `StateMachine` object.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-499"&gt;&lt;span class="lineno"&gt; 499 &lt;/span&gt;&lt;span class="sd"&gt;        - `debug`: a boolean; produce verbose output if true.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-500"&gt;&lt;span class="lineno"&gt; 500 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-501"&gt;&lt;span class="lineno"&gt; 501 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-502"&gt;&lt;span class="lineno"&gt; 502 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transition_order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-503"&gt;&lt;span class="lineno"&gt; 503 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;A list of transition names in search order.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-504"&gt;&lt;span class="lineno"&gt; 504 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-505"&gt;&lt;span class="lineno"&gt; 505 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transitions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-506"&gt;&lt;span class="lineno"&gt; 506 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-507"&gt;&lt;span class="lineno"&gt; 507 &lt;/span&gt;&lt;span class="sd"&gt;        A mapping of transition names to 3-tuples containing&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-508"&gt;&lt;span class="lineno"&gt; 508 &lt;/span&gt;&lt;span class="sd"&gt;        (compiled_pattern, transition_method, next_state_name). Initialized as&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-509"&gt;&lt;span class="lineno"&gt; 509 &lt;/span&gt;&lt;span class="sd"&gt;        an instance attribute dynamically (instead of as a class attribute)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-510"&gt;&lt;span class="lineno"&gt; 510 &lt;/span&gt;&lt;span class="sd"&gt;        because it may make forward references to patterns and methods in this&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-511"&gt;&lt;span class="lineno"&gt; 511 &lt;/span&gt;&lt;span class="sd"&gt;        or other classes.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-512"&gt;&lt;span class="lineno"&gt; 512 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-513"&gt;&lt;span class="lineno"&gt; 513 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-514"&gt;&lt;span class="lineno"&gt; 514 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_initial_transitions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-515"&gt;&lt;span class="lineno"&gt; 515 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-516"&gt;&lt;span class="lineno"&gt; 516 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;state_machine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;state_machine&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-517"&gt;&lt;span class="lineno"&gt; 517 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;A reference to the controlling `StateMachine` object.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-518"&gt;&lt;span class="lineno"&gt; 518 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-519"&gt;&lt;span class="lineno"&gt; 519 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-520"&gt;&lt;span class="lineno"&gt; 520 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Debugging mode on/off.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-521"&gt;&lt;span class="lineno"&gt; 521 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-522"&gt;&lt;span class="lineno"&gt; 522 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nested_sm&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-523"&gt;&lt;span class="lineno"&gt; 523 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nested_sm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;state_machine&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-524"&gt;&lt;span class="lineno"&gt; 524 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nested_sm_kwargs&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-525"&gt;&lt;span class="lineno"&gt; 525 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nested_sm_kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;state_classes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-526"&gt;&lt;span class="lineno"&gt; 526 &lt;/span&gt;                                     &lt;span class="s1"&gt;&amp;#39;initial_state&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-527"&gt;&lt;span class="lineno"&gt; 527 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-528"&gt;&lt;span class="lineno"&gt; 528 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;runtime_init&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-529"&gt;&lt;span class="lineno"&gt; 529 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-530"&gt;&lt;span class="lineno"&gt; 530 &lt;/span&gt;&lt;span class="sd"&gt;        Initialize this `State` before running the state machine; called from&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-531"&gt;&lt;span class="lineno"&gt; 531 &lt;/span&gt;&lt;span class="sd"&gt;        `self.state_machine.run()`.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-532"&gt;&lt;span class="lineno"&gt; 532 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-533"&gt;&lt;span class="lineno"&gt; 533 &lt;/span&gt;        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-534"&gt;&lt;span class="lineno"&gt; 534 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-535"&gt;&lt;span class="lineno"&gt; 535 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;unlink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-536"&gt;&lt;span class="lineno"&gt; 536 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Remove circular references to objects no longer required.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-537"&gt;&lt;span class="lineno"&gt; 537 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;state_machine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-538"&gt;&lt;span class="lineno"&gt; 538 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-539"&gt;&lt;span class="lineno"&gt; 539 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_initial_transitions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-540"&gt;&lt;span class="lineno"&gt; 540 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Make and add transitions listed in `self.initial_transitions`.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-541"&gt;&lt;span class="lineno"&gt; 541 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initial_transitions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-542"&gt;&lt;span class="lineno"&gt; 542 &lt;/span&gt;            &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transitions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_transitions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-543"&gt;&lt;span class="lineno"&gt; 543 &lt;/span&gt;                  &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;initial_transitions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-544"&gt;&lt;span class="lineno"&gt; 544 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_transitions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-545"&gt;&lt;span class="lineno"&gt; 545 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-546"&gt;&lt;span class="lineno"&gt; 546 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_transitions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-547"&gt;&lt;span class="lineno"&gt; 547 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-548"&gt;&lt;span class="lineno"&gt; 548 &lt;/span&gt;&lt;span class="sd"&gt;        Add a list of transitions to the start of the transition list.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-549"&gt;&lt;span class="lineno"&gt; 549 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-550"&gt;&lt;span class="lineno"&gt; 550 &lt;/span&gt;&lt;span class="sd"&gt;        Parameters:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-551"&gt;&lt;span class="lineno"&gt; 551 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-552"&gt;&lt;span class="lineno"&gt; 552 &lt;/span&gt;&lt;span class="sd"&gt;        - `names`: a list of transition names.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-553"&gt;&lt;span class="lineno"&gt; 553 &lt;/span&gt;&lt;span class="sd"&gt;        - `transitions`: a mapping of names to transition tuples.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-554"&gt;&lt;span class="lineno"&gt; 554 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-555"&gt;&lt;span class="lineno"&gt; 555 &lt;/span&gt;&lt;span class="sd"&gt;        Exceptions: `DuplicateTransitionError`, `UnknownTransitionError`.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-556"&gt;&lt;span class="lineno"&gt; 556 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-557"&gt;&lt;span class="lineno"&gt; 557 &lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-558"&gt;&lt;span class="lineno"&gt; 558 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-559"&gt;&lt;span class="lineno"&gt; 559 &lt;/span&gt;                &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;DuplicateTransitionError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-560"&gt;&lt;span class="lineno"&gt; 560 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-561"&gt;&lt;span class="lineno"&gt; 561 &lt;/span&gt;                &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;UnknownTransitionError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-562"&gt;&lt;span class="lineno"&gt; 562 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transition_order&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-563"&gt;&lt;span class="lineno"&gt; 563 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-564"&gt;&lt;span class="lineno"&gt; 564 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-565"&gt;&lt;span class="lineno"&gt; 565 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_transition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-566"&gt;&lt;span class="lineno"&gt; 566 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-567"&gt;&lt;span class="lineno"&gt; 567 &lt;/span&gt;&lt;span class="sd"&gt;        Add a transition to the start of the transition list.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-568"&gt;&lt;span class="lineno"&gt; 568 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-569"&gt;&lt;span class="lineno"&gt; 569 &lt;/span&gt;&lt;span class="sd"&gt;        Parameter `transition`: a ready-made transition 3-tuple.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-570"&gt;&lt;span class="lineno"&gt; 570 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-571"&gt;&lt;span class="lineno"&gt; 571 &lt;/span&gt;&lt;span class="sd"&gt;        Exception: `DuplicateTransitionError`.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-572"&gt;&lt;span class="lineno"&gt; 572 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-573"&gt;&lt;span class="lineno"&gt; 573 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-574"&gt;&lt;span class="lineno"&gt; 574 &lt;/span&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;DuplicateTransitionError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-575"&gt;&lt;span class="lineno"&gt; 575 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transition_order&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-576"&gt;&lt;span class="lineno"&gt; 576 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;transition&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-577"&gt;&lt;span class="lineno"&gt; 577 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-578"&gt;&lt;span class="lineno"&gt; 578 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;remove_transition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-579"&gt;&lt;span class="lineno"&gt; 579 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-580"&gt;&lt;span class="lineno"&gt; 580 &lt;/span&gt;&lt;span class="sd"&gt;        Remove a transition by `name`.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-581"&gt;&lt;span class="lineno"&gt; 581 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-582"&gt;&lt;span class="lineno"&gt; 582 &lt;/span&gt;&lt;span class="sd"&gt;        Exception: `UnknownTransitionError`.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-583"&gt;&lt;span class="lineno"&gt; 583 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-584"&gt;&lt;span class="lineno"&gt; 584 &lt;/span&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-585"&gt;&lt;span class="lineno"&gt; 585 &lt;/span&gt;            &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-586"&gt;&lt;span class="lineno"&gt; 586 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transition_order&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-587"&gt;&lt;span class="lineno"&gt; 587 &lt;/span&gt;        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-588"&gt;&lt;span class="lineno"&gt; 588 &lt;/span&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;UnknownTransitionError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-589"&gt;&lt;span class="lineno"&gt; 589 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-590"&gt;&lt;span class="lineno"&gt; 590 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;make_transition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-591"&gt;&lt;span class="lineno"&gt; 591 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-592"&gt;&lt;span class="lineno"&gt; 592 &lt;/span&gt;&lt;span class="sd"&gt;        Make &amp;amp; return a transition tuple based on `name`.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-593"&gt;&lt;span class="lineno"&gt; 593 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-594"&gt;&lt;span class="lineno"&gt; 594 &lt;/span&gt;&lt;span class="sd"&gt;        This is a convenience function to simplify transition creation.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-595"&gt;&lt;span class="lineno"&gt; 595 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-596"&gt;&lt;span class="lineno"&gt; 596 &lt;/span&gt;&lt;span class="sd"&gt;        Parameters:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-597"&gt;&lt;span class="lineno"&gt; 597 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-598"&gt;&lt;span class="lineno"&gt; 598 &lt;/span&gt;&lt;span class="sd"&gt;        - `name`: a string, the name of the transition pattern &amp;amp; method. This&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-599"&gt;&lt;span class="lineno"&gt; 599 &lt;/span&gt;&lt;span class="sd"&gt;          `State` object must have a method called &amp;#39;`name`&amp;#39;, and a dictionary&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-600"&gt;&lt;span class="lineno"&gt; 600 &lt;/span&gt;&lt;span class="sd"&gt;          `self.patterns` containing a key &amp;#39;`name`&amp;#39;.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-601"&gt;&lt;span class="lineno"&gt; 601 &lt;/span&gt;&lt;span class="sd"&gt;        - `next_state`: a string, the name of the next `State` object for this&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-602"&gt;&lt;span class="lineno"&gt; 602 &lt;/span&gt;&lt;span class="sd"&gt;          transition. A value of ``None`` (or absent) implies no state change&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-603"&gt;&lt;span class="lineno"&gt; 603 &lt;/span&gt;&lt;span class="sd"&gt;          (i.e., continue with the same state).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-604"&gt;&lt;span class="lineno"&gt; 604 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-605"&gt;&lt;span class="lineno"&gt; 605 &lt;/span&gt;&lt;span class="sd"&gt;        Exceptions: `TransitionPatternNotFound`, `TransitionMethodNotFound`.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-606"&gt;&lt;span class="lineno"&gt; 606 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-607"&gt;&lt;span class="lineno"&gt; 607 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-608"&gt;&lt;span class="lineno"&gt; 608 &lt;/span&gt;            &lt;span class="n"&gt;next_state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-609"&gt;&lt;span class="lineno"&gt; 609 &lt;/span&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-610"&gt;&lt;span class="lineno"&gt; 610 &lt;/span&gt;            &lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-611"&gt;&lt;span class="lineno"&gt; 611 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;hasattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;match&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-612"&gt;&lt;span class="lineno"&gt; 612 &lt;/span&gt;                &lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-613"&gt;&lt;span class="lineno"&gt; 613 &lt;/span&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;KeyError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-614"&gt;&lt;span class="lineno"&gt; 614 &lt;/span&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;TransitionPatternNotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-615"&gt;&lt;span class="lineno"&gt; 615 &lt;/span&gt;                  &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;.patterns[&lt;/span&gt;&lt;span class="si"&gt;%r&lt;/span&gt;&lt;span class="s1"&gt;]&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-616"&gt;&lt;span class="lineno"&gt; 616 &lt;/span&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-617"&gt;&lt;span class="lineno"&gt; 617 &lt;/span&gt;            &lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-618"&gt;&lt;span class="lineno"&gt; 618 &lt;/span&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;AttributeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-619"&gt;&lt;span class="lineno"&gt; 619 &lt;/span&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;TransitionMethodNotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-620"&gt;&lt;span class="lineno"&gt; 620 &lt;/span&gt;                  &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;.&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-621"&gt;&lt;span class="lineno"&gt; 621 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-622"&gt;&lt;span class="lineno"&gt; 622 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-623"&gt;&lt;span class="lineno"&gt; 623 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;make_transitions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name_list&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-624"&gt;&lt;span class="lineno"&gt; 624 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-625"&gt;&lt;span class="lineno"&gt; 625 &lt;/span&gt;&lt;span class="sd"&gt;        Return a list of transition names and a transition mapping.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-626"&gt;&lt;span class="lineno"&gt; 626 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-627"&gt;&lt;span class="lineno"&gt; 627 &lt;/span&gt;&lt;span class="sd"&gt;        Parameter `name_list`: a list, where each entry is either a transition&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-628"&gt;&lt;span class="lineno"&gt; 628 &lt;/span&gt;&lt;span class="sd"&gt;        name string, or a 1- or 2-tuple (transition name, optional next state&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-629"&gt;&lt;span class="lineno"&gt; 629 &lt;/span&gt;&lt;span class="sd"&gt;        name).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-630"&gt;&lt;span class="lineno"&gt; 630 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-631"&gt;&lt;span class="lineno"&gt; 631 &lt;/span&gt;        &lt;span class="n"&gt;stringtype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-632"&gt;&lt;span class="lineno"&gt; 632 &lt;/span&gt;        &lt;span class="n"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-633"&gt;&lt;span class="lineno"&gt; 633 &lt;/span&gt;        &lt;span class="n"&gt;transitions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-634"&gt;&lt;span class="lineno"&gt; 634 &lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;namestate&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;name_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-635"&gt;&lt;span class="lineno"&gt; 635 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;namestate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;stringtype&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-636"&gt;&lt;span class="lineno"&gt; 636 &lt;/span&gt;                &lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;namestate&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_transition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;namestate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-637"&gt;&lt;span class="lineno"&gt; 637 &lt;/span&gt;                &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;namestate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-638"&gt;&lt;span class="lineno"&gt; 638 &lt;/span&gt;            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-639"&gt;&lt;span class="lineno"&gt; 639 &lt;/span&gt;                &lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;namestate&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_transition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;namestate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-640"&gt;&lt;span class="lineno"&gt; 640 &lt;/span&gt;                &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;namestate&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-641"&gt;&lt;span class="lineno"&gt; 641 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transitions&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-642"&gt;&lt;span class="lineno"&gt; 642 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-643"&gt;&lt;span class="lineno"&gt; 643 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;no_match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-644"&gt;&lt;span class="lineno"&gt; 644 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-645"&gt;&lt;span class="lineno"&gt; 645 &lt;/span&gt;&lt;span class="sd"&gt;        Called when there is no match from `StateMachine.check_line()`.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-646"&gt;&lt;span class="lineno"&gt; 646 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-647"&gt;&lt;span class="lineno"&gt; 647 &lt;/span&gt;&lt;span class="sd"&gt;        Return the same values returned by transition methods:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-648"&gt;&lt;span class="lineno"&gt; 648 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-649"&gt;&lt;span class="lineno"&gt; 649 &lt;/span&gt;&lt;span class="sd"&gt;        - context: unchanged;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-650"&gt;&lt;span class="lineno"&gt; 650 &lt;/span&gt;&lt;span class="sd"&gt;        - next state name: ``None``;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-651"&gt;&lt;span class="lineno"&gt; 651 &lt;/span&gt;&lt;span class="sd"&gt;        - empty result list.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-652"&gt;&lt;span class="lineno"&gt; 652 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-653"&gt;&lt;span class="lineno"&gt; 653 &lt;/span&gt;&lt;span class="sd"&gt;        Override in subclasses to catch this event.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-654"&gt;&lt;span class="lineno"&gt; 654 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-655"&gt;&lt;span class="lineno"&gt; 655 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-656"&gt;&lt;span class="lineno"&gt; 656 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-657"&gt;&lt;span class="lineno"&gt; 657 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;bof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-658"&gt;&lt;span class="lineno"&gt; 658 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-659"&gt;&lt;span class="lineno"&gt; 659 &lt;/span&gt;&lt;span class="sd"&gt;        Handle beginning-of-file. Return unchanged `context`, empty result.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-660"&gt;&lt;span class="lineno"&gt; 660 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-661"&gt;&lt;span class="lineno"&gt; 661 &lt;/span&gt;&lt;span class="sd"&gt;        Override in subclasses.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-662"&gt;&lt;span class="lineno"&gt; 662 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-663"&gt;&lt;span class="lineno"&gt; 663 &lt;/span&gt;&lt;span class="sd"&gt;        Parameter `context`: application-defined storage.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-664"&gt;&lt;span class="lineno"&gt; 664 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-665"&gt;&lt;span class="lineno"&gt; 665 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-666"&gt;&lt;span class="lineno"&gt; 666 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-667"&gt;&lt;span class="lineno"&gt; 667 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;eof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-668"&gt;&lt;span class="lineno"&gt; 668 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-669"&gt;&lt;span class="lineno"&gt; 669 &lt;/span&gt;&lt;span class="sd"&gt;        Handle end-of-file. Return empty result.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-670"&gt;&lt;span class="lineno"&gt; 670 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-671"&gt;&lt;span class="lineno"&gt; 671 &lt;/span&gt;&lt;span class="sd"&gt;        Override in subclasses.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-672"&gt;&lt;span class="lineno"&gt; 672 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-673"&gt;&lt;span class="lineno"&gt; 673 &lt;/span&gt;&lt;span class="sd"&gt;        Parameter `context`: application-defined storage.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-674"&gt;&lt;span class="lineno"&gt; 674 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-675"&gt;&lt;span class="lineno"&gt; 675 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-676"&gt;&lt;span class="lineno"&gt; 676 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-677"&gt;&lt;span class="lineno"&gt; 677 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;nop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-678"&gt;&lt;span class="lineno"&gt; 678 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-679"&gt;&lt;span class="lineno"&gt; 679 &lt;/span&gt;&lt;span class="sd"&gt;        A &amp;quot;do nothing&amp;quot; transition method.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-680"&gt;&lt;span class="lineno"&gt; 680 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-681"&gt;&lt;span class="lineno"&gt; 681 &lt;/span&gt;&lt;span class="sd"&gt;        Return unchanged `context` &amp;amp; `next_state`, empty result. Useful for&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-682"&gt;&lt;span class="lineno"&gt; 682 &lt;/span&gt;&lt;span class="sd"&gt;        simple state changes (actionless transitions).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-683"&gt;&lt;span class="lineno"&gt; 683 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-684"&gt;&lt;span class="lineno"&gt; 684 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-685"&gt;&lt;span class="lineno"&gt; 685 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-686"&gt;&lt;span class="lineno"&gt; 686 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-687"&gt;&lt;span class="lineno"&gt; 687 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StateMachineWS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StateMachine&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-688"&gt;&lt;span class="lineno"&gt; 688 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-689"&gt;&lt;span class="lineno"&gt; 689 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-690"&gt;&lt;span class="lineno"&gt; 690 &lt;/span&gt;&lt;span class="sd"&gt;    `StateMachine` subclass specialized for whitespace recognition.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-691"&gt;&lt;span class="lineno"&gt; 691 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-692"&gt;&lt;span class="lineno"&gt; 692 &lt;/span&gt;&lt;span class="sd"&gt;    There are three methods provided for extracting indented text blocks:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-693"&gt;&lt;span class="lineno"&gt; 693 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-694"&gt;&lt;span class="lineno"&gt; 694 &lt;/span&gt;&lt;span class="sd"&gt;    - `get_indented()`: use when the indent is unknown.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-695"&gt;&lt;span class="lineno"&gt; 695 &lt;/span&gt;&lt;span class="sd"&gt;    - `get_known_indented()`: use when the indent is known for all lines.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-696"&gt;&lt;span class="lineno"&gt; 696 &lt;/span&gt;&lt;span class="sd"&gt;    - `get_first_known_indented()`: use when only the first line&amp;#39;s indent is&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-697"&gt;&lt;span class="lineno"&gt; 697 &lt;/span&gt;&lt;span class="sd"&gt;      known.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-698"&gt;&lt;span class="lineno"&gt; 698 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-699"&gt;&lt;span class="lineno"&gt; 699 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-700"&gt;&lt;span class="lineno"&gt; 700 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_indented&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;until_blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strip_indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-701"&gt;&lt;span class="lineno"&gt; 701 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-702"&gt;&lt;span class="lineno"&gt; 702 &lt;/span&gt;&lt;span class="sd"&gt;        Return a block of indented lines of text, and info.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-703"&gt;&lt;span class="lineno"&gt; 703 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-704"&gt;&lt;span class="lineno"&gt; 704 &lt;/span&gt;&lt;span class="sd"&gt;        Extract an indented block where the indent is unknown for all lines.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-705"&gt;&lt;span class="lineno"&gt; 705 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-706"&gt;&lt;span class="lineno"&gt; 706 &lt;/span&gt;&lt;span class="sd"&gt;        :Parameters:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-707"&gt;&lt;span class="lineno"&gt; 707 &lt;/span&gt;&lt;span class="sd"&gt;            - `until_blank`: Stop collecting at the first blank line if true.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-708"&gt;&lt;span class="lineno"&gt; 708 &lt;/span&gt;&lt;span class="sd"&gt;            - `strip_indent`: Strip common leading indent if true (default).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-709"&gt;&lt;span class="lineno"&gt; 709 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-710"&gt;&lt;span class="lineno"&gt; 710 &lt;/span&gt;&lt;span class="sd"&gt;        :Return:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-711"&gt;&lt;span class="lineno"&gt; 711 &lt;/span&gt;&lt;span class="sd"&gt;            - the indented block (a list of lines of text),&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-712"&gt;&lt;span class="lineno"&gt; 712 &lt;/span&gt;&lt;span class="sd"&gt;            - its indent,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-713"&gt;&lt;span class="lineno"&gt; 713 &lt;/span&gt;&lt;span class="sd"&gt;            - its first line offset from BOF, and&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-714"&gt;&lt;span class="lineno"&gt; 714 &lt;/span&gt;&lt;span class="sd"&gt;            - whether or not it finished with a blank line.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-715"&gt;&lt;span class="lineno"&gt; 715 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-716"&gt;&lt;span class="lineno"&gt; 716 &lt;/span&gt;        &lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abs_line_offset&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-717"&gt;&lt;span class="lineno"&gt; 717 &lt;/span&gt;        &lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank_finish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_indented&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-718"&gt;&lt;span class="lineno"&gt; 718 &lt;/span&gt;              &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;until_blank&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strip_indent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-719"&gt;&lt;span class="lineno"&gt; 719 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-720"&gt;&lt;span class="lineno"&gt; 720 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# advance to last indented line&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-721"&gt;&lt;span class="lineno"&gt; 721 &lt;/span&gt;        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;indented&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-722"&gt;&lt;span class="lineno"&gt; 722 &lt;/span&gt;            &lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trim_start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-723"&gt;&lt;span class="lineno"&gt; 723 &lt;/span&gt;            &lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-724"&gt;&lt;span class="lineno"&gt; 724 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank_finish&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-725"&gt;&lt;span class="lineno"&gt; 725 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-726"&gt;&lt;span class="lineno"&gt; 726 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_known_indented&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;until_blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strip_indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-727"&gt;&lt;span class="lineno"&gt; 727 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-728"&gt;&lt;span class="lineno"&gt; 728 &lt;/span&gt;&lt;span class="sd"&gt;        Return an indented block and info.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-729"&gt;&lt;span class="lineno"&gt; 729 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-730"&gt;&lt;span class="lineno"&gt; 730 &lt;/span&gt;&lt;span class="sd"&gt;        Extract an indented block where the indent is known for all lines.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-731"&gt;&lt;span class="lineno"&gt; 731 &lt;/span&gt;&lt;span class="sd"&gt;        Starting with the current line, extract the entire text block with at&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-732"&gt;&lt;span class="lineno"&gt; 732 &lt;/span&gt;&lt;span class="sd"&gt;        least `indent` indentation (which must be whitespace, except for the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-733"&gt;&lt;span class="lineno"&gt; 733 &lt;/span&gt;&lt;span class="sd"&gt;        first line).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-734"&gt;&lt;span class="lineno"&gt; 734 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-735"&gt;&lt;span class="lineno"&gt; 735 &lt;/span&gt;&lt;span class="sd"&gt;        :Parameters:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-736"&gt;&lt;span class="lineno"&gt; 736 &lt;/span&gt;&lt;span class="sd"&gt;            - `indent`: The number of indent columns/characters.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-737"&gt;&lt;span class="lineno"&gt; 737 &lt;/span&gt;&lt;span class="sd"&gt;            - `until_blank`: Stop collecting at the first blank line if true.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-738"&gt;&lt;span class="lineno"&gt; 738 &lt;/span&gt;&lt;span class="sd"&gt;            - `strip_indent`: Strip `indent` characters of indentation if true&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-739"&gt;&lt;span class="lineno"&gt; 739 &lt;/span&gt;&lt;span class="sd"&gt;              (default).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-740"&gt;&lt;span class="lineno"&gt; 740 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-741"&gt;&lt;span class="lineno"&gt; 741 &lt;/span&gt;&lt;span class="sd"&gt;        :Return:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-742"&gt;&lt;span class="lineno"&gt; 742 &lt;/span&gt;&lt;span class="sd"&gt;            - the indented block,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-743"&gt;&lt;span class="lineno"&gt; 743 &lt;/span&gt;&lt;span class="sd"&gt;            - its first line offset from BOF, and&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-744"&gt;&lt;span class="lineno"&gt; 744 &lt;/span&gt;&lt;span class="sd"&gt;            - whether or not it finished with a blank line.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-745"&gt;&lt;span class="lineno"&gt; 745 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-746"&gt;&lt;span class="lineno"&gt; 746 &lt;/span&gt;        &lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abs_line_offset&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-747"&gt;&lt;span class="lineno"&gt; 747 &lt;/span&gt;        &lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank_finish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_indented&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-748"&gt;&lt;span class="lineno"&gt; 748 &lt;/span&gt;              &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;until_blank&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strip_indent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-749"&gt;&lt;span class="lineno"&gt; 749 &lt;/span&gt;              &lt;span class="n"&gt;block_indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-750"&gt;&lt;span class="lineno"&gt; 750 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# advance to last indented line&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-751"&gt;&lt;span class="lineno"&gt; 751 &lt;/span&gt;        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;indented&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-752"&gt;&lt;span class="lineno"&gt; 752 &lt;/span&gt;            &lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trim_start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-753"&gt;&lt;span class="lineno"&gt; 753 &lt;/span&gt;            &lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-754"&gt;&lt;span class="lineno"&gt; 754 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank_finish&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-755"&gt;&lt;span class="lineno"&gt; 755 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-756"&gt;&lt;span class="lineno"&gt; 756 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_first_known_indented&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;until_blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-757"&gt;&lt;span class="lineno"&gt; 757 &lt;/span&gt;                                 &lt;span class="n"&gt;strip_indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strip_top&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-758"&gt;&lt;span class="lineno"&gt; 758 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-759"&gt;&lt;span class="lineno"&gt; 759 &lt;/span&gt;&lt;span class="sd"&gt;        Return an indented block and info.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-760"&gt;&lt;span class="lineno"&gt; 760 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-761"&gt;&lt;span class="lineno"&gt; 761 &lt;/span&gt;&lt;span class="sd"&gt;        Extract an indented block where the indent is known for the first line&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-762"&gt;&lt;span class="lineno"&gt; 762 &lt;/span&gt;&lt;span class="sd"&gt;        and unknown for all other lines.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-763"&gt;&lt;span class="lineno"&gt; 763 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-764"&gt;&lt;span class="lineno"&gt; 764 &lt;/span&gt;&lt;span class="sd"&gt;        :Parameters:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-765"&gt;&lt;span class="lineno"&gt; 765 &lt;/span&gt;&lt;span class="sd"&gt;            - `indent`: The first line&amp;#39;s indent (# of columns/characters).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-766"&gt;&lt;span class="lineno"&gt; 766 &lt;/span&gt;&lt;span class="sd"&gt;            - `until_blank`: Stop collecting at the first blank line if true&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-767"&gt;&lt;span class="lineno"&gt; 767 &lt;/span&gt;&lt;span class="sd"&gt;              (1).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-768"&gt;&lt;span class="lineno"&gt; 768 &lt;/span&gt;&lt;span class="sd"&gt;            - `strip_indent`: Strip `indent` characters of indentation if true&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-769"&gt;&lt;span class="lineno"&gt; 769 &lt;/span&gt;&lt;span class="sd"&gt;              (1, default).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-770"&gt;&lt;span class="lineno"&gt; 770 &lt;/span&gt;&lt;span class="sd"&gt;            - `strip_top`: Strip blank lines from the beginning of the block.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-771"&gt;&lt;span class="lineno"&gt; 771 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-772"&gt;&lt;span class="lineno"&gt; 772 &lt;/span&gt;&lt;span class="sd"&gt;        :Return:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-773"&gt;&lt;span class="lineno"&gt; 773 &lt;/span&gt;&lt;span class="sd"&gt;            - the indented block,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-774"&gt;&lt;span class="lineno"&gt; 774 &lt;/span&gt;&lt;span class="sd"&gt;            - its indent,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-775"&gt;&lt;span class="lineno"&gt; 775 &lt;/span&gt;&lt;span class="sd"&gt;            - its first line offset from BOF, and&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-776"&gt;&lt;span class="lineno"&gt; 776 &lt;/span&gt;&lt;span class="sd"&gt;            - whether or not it finished with a blank line.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-777"&gt;&lt;span class="lineno"&gt; 777 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-778"&gt;&lt;span class="lineno"&gt; 778 &lt;/span&gt;        &lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abs_line_offset&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-779"&gt;&lt;span class="lineno"&gt; 779 &lt;/span&gt;        &lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank_finish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;input_lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_indented&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-780"&gt;&lt;span class="lineno"&gt; 780 &lt;/span&gt;              &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;until_blank&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strip_indent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-781"&gt;&lt;span class="lineno"&gt; 781 &lt;/span&gt;              &lt;span class="n"&gt;first_indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-782"&gt;&lt;span class="lineno"&gt; 782 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;next_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# advance to last indented line&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-783"&gt;&lt;span class="lineno"&gt; 783 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;strip_top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-784"&gt;&lt;span class="lineno"&gt; 784 &lt;/span&gt;            &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;indented&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-785"&gt;&lt;span class="lineno"&gt; 785 &lt;/span&gt;                &lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trim_start&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-786"&gt;&lt;span class="lineno"&gt; 786 &lt;/span&gt;                &lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-787"&gt;&lt;span class="lineno"&gt; 787 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank_finish&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-788"&gt;&lt;span class="lineno"&gt; 788 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-789"&gt;&lt;span class="lineno"&gt; 789 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-790"&gt;&lt;span class="lineno"&gt; 790 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StateWS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-791"&gt;&lt;span class="lineno"&gt; 791 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-792"&gt;&lt;span class="lineno"&gt; 792 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-793"&gt;&lt;span class="lineno"&gt; 793 &lt;/span&gt;&lt;span class="sd"&gt;    State superclass specialized for whitespace (blank lines &amp;amp; indents).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-794"&gt;&lt;span class="lineno"&gt; 794 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-795"&gt;&lt;span class="lineno"&gt; 795 &lt;/span&gt;&lt;span class="sd"&gt;    Use this class with `StateMachineWS`.  The transitions &amp;#39;blank&amp;#39; (for blank&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-796"&gt;&lt;span class="lineno"&gt; 796 &lt;/span&gt;&lt;span class="sd"&gt;    lines) and &amp;#39;indent&amp;#39; (for indented text blocks) are added automatically,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-797"&gt;&lt;span class="lineno"&gt; 797 &lt;/span&gt;&lt;span class="sd"&gt;    before any other transitions.  The transition method `blank()` handles&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-798"&gt;&lt;span class="lineno"&gt; 798 &lt;/span&gt;&lt;span class="sd"&gt;    blank lines and `indent()` handles nested indented blocks.  Indented&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-799"&gt;&lt;span class="lineno"&gt; 799 &lt;/span&gt;&lt;span class="sd"&gt;    blocks trigger a new state machine to be created by `indent()` and run.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-800"&gt;&lt;span class="lineno"&gt; 800 &lt;/span&gt;&lt;span class="sd"&gt;    The class of the state machine to be created is in `indent_sm`, and the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-801"&gt;&lt;span class="lineno"&gt; 801 &lt;/span&gt;&lt;span class="sd"&gt;    constructor keyword arguments are in the dictionary `indent_sm_kwargs`.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-802"&gt;&lt;span class="lineno"&gt; 802 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-803"&gt;&lt;span class="lineno"&gt; 803 &lt;/span&gt;&lt;span class="sd"&gt;    The methods `known_indent()` and `firstknown_indent()` are provided for&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-804"&gt;&lt;span class="lineno"&gt; 804 &lt;/span&gt;&lt;span class="sd"&gt;    indented blocks where the indent (all lines&amp;#39; and first line&amp;#39;s only,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-805"&gt;&lt;span class="lineno"&gt; 805 &lt;/span&gt;&lt;span class="sd"&gt;    respectively) is known to the transition method, along with the attributes&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-806"&gt;&lt;span class="lineno"&gt; 806 &lt;/span&gt;&lt;span class="sd"&gt;    `known_indent_sm` and `known_indent_sm_kwargs`.  Neither transition method&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-807"&gt;&lt;span class="lineno"&gt; 807 &lt;/span&gt;&lt;span class="sd"&gt;    is triggered automatically.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-808"&gt;&lt;span class="lineno"&gt; 808 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-809"&gt;&lt;span class="lineno"&gt; 809 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-810"&gt;&lt;span class="lineno"&gt; 810 &lt;/span&gt;    &lt;span class="n"&gt;indent_sm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-811"&gt;&lt;span class="lineno"&gt; 811 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-812"&gt;&lt;span class="lineno"&gt; 812 &lt;/span&gt;&lt;span class="sd"&gt;    The `StateMachine` class handling indented text blocks.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-813"&gt;&lt;span class="lineno"&gt; 813 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-814"&gt;&lt;span class="lineno"&gt; 814 &lt;/span&gt;&lt;span class="sd"&gt;    If left as ``None``, `indent_sm` defaults to the value of&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-815"&gt;&lt;span class="lineno"&gt; 815 &lt;/span&gt;&lt;span class="sd"&gt;    `State.nested_sm`.  Override it in subclasses to avoid the default.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-816"&gt;&lt;span class="lineno"&gt; 816 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-817"&gt;&lt;span class="lineno"&gt; 817 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-818"&gt;&lt;span class="lineno"&gt; 818 &lt;/span&gt;    &lt;span class="n"&gt;indent_sm_kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-819"&gt;&lt;span class="lineno"&gt; 819 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-820"&gt;&lt;span class="lineno"&gt; 820 &lt;/span&gt;&lt;span class="sd"&gt;    Keyword arguments dictionary, passed to the `indent_sm` constructor.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-821"&gt;&lt;span class="lineno"&gt; 821 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-822"&gt;&lt;span class="lineno"&gt; 822 &lt;/span&gt;&lt;span class="sd"&gt;    If left as ``None``, `indent_sm_kwargs` defaults to the value of&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-823"&gt;&lt;span class="lineno"&gt; 823 &lt;/span&gt;&lt;span class="sd"&gt;    `State.nested_sm_kwargs`. Override it in subclasses to avoid the default.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-824"&gt;&lt;span class="lineno"&gt; 824 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-825"&gt;&lt;span class="lineno"&gt; 825 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-826"&gt;&lt;span class="lineno"&gt; 826 &lt;/span&gt;    &lt;span class="n"&gt;known_indent_sm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-827"&gt;&lt;span class="lineno"&gt; 827 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-828"&gt;&lt;span class="lineno"&gt; 828 &lt;/span&gt;&lt;span class="sd"&gt;    The `StateMachine` class handling known-indented text blocks.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-829"&gt;&lt;span class="lineno"&gt; 829 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-830"&gt;&lt;span class="lineno"&gt; 830 &lt;/span&gt;&lt;span class="sd"&gt;    If left as ``None``, `known_indent_sm` defaults to the value of&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-831"&gt;&lt;span class="lineno"&gt; 831 &lt;/span&gt;&lt;span class="sd"&gt;    `indent_sm`.  Override it in subclasses to avoid the default.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-832"&gt;&lt;span class="lineno"&gt; 832 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-833"&gt;&lt;span class="lineno"&gt; 833 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-834"&gt;&lt;span class="lineno"&gt; 834 &lt;/span&gt;    &lt;span class="n"&gt;known_indent_sm_kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-835"&gt;&lt;span class="lineno"&gt; 835 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-836"&gt;&lt;span class="lineno"&gt; 836 &lt;/span&gt;&lt;span class="sd"&gt;    Keyword arguments dictionary, passed to the `known_indent_sm` constructor.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-837"&gt;&lt;span class="lineno"&gt; 837 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-838"&gt;&lt;span class="lineno"&gt; 838 &lt;/span&gt;&lt;span class="sd"&gt;    If left as ``None``, `known_indent_sm_kwargs` defaults to the value of&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-839"&gt;&lt;span class="lineno"&gt; 839 &lt;/span&gt;&lt;span class="sd"&gt;    `indent_sm_kwargs`. Override it in subclasses to avoid the default.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-840"&gt;&lt;span class="lineno"&gt; 840 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-841"&gt;&lt;span class="lineno"&gt; 841 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-842"&gt;&lt;span class="lineno"&gt; 842 &lt;/span&gt;    &lt;span class="n"&gt;ws_patterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;blank&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; *$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-843"&gt;&lt;span class="lineno"&gt; 843 &lt;/span&gt;                   &lt;span class="s1"&gt;&amp;#39;indent&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; +&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-844"&gt;&lt;span class="lineno"&gt; 844 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Patterns for default whitespace transitions.  May be overridden in&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-845"&gt;&lt;span class="lineno"&gt; 845 &lt;/span&gt;&lt;span class="sd"&gt;    subclasses.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-846"&gt;&lt;span class="lineno"&gt; 846 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-847"&gt;&lt;span class="lineno"&gt; 847 &lt;/span&gt;    &lt;span class="n"&gt;ws_initial_transitions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;blank&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;indent&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-848"&gt;&lt;span class="lineno"&gt; 848 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Default initial whitespace transitions, added before those listed in&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-849"&gt;&lt;span class="lineno"&gt; 849 &lt;/span&gt;&lt;span class="sd"&gt;    `State.initial_transitions`.  May be overridden in subclasses.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-850"&gt;&lt;span class="lineno"&gt; 850 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-851"&gt;&lt;span class="lineno"&gt; 851 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state_machine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-852"&gt;&lt;span class="lineno"&gt; 852 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-853"&gt;&lt;span class="lineno"&gt; 853 &lt;/span&gt;&lt;span class="sd"&gt;        Initialize a `StateSM` object; extends `State.__init__()`.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-854"&gt;&lt;span class="lineno"&gt; 854 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-855"&gt;&lt;span class="lineno"&gt; 855 &lt;/span&gt;&lt;span class="sd"&gt;        Check for indent state machine attributes, set defaults if not set.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-856"&gt;&lt;span class="lineno"&gt; 856 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-857"&gt;&lt;span class="lineno"&gt; 857 &lt;/span&gt;        &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;state_machine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-858"&gt;&lt;span class="lineno"&gt; 858 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indent_sm&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-859"&gt;&lt;span class="lineno"&gt; 859 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indent_sm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nested_sm&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-860"&gt;&lt;span class="lineno"&gt; 860 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indent_sm_kwargs&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-861"&gt;&lt;span class="lineno"&gt; 861 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indent_sm_kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nested_sm_kwargs&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-862"&gt;&lt;span class="lineno"&gt; 862 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;known_indent_sm&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-863"&gt;&lt;span class="lineno"&gt; 863 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;known_indent_sm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indent_sm&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-864"&gt;&lt;span class="lineno"&gt; 864 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;known_indent_sm_kwargs&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-865"&gt;&lt;span class="lineno"&gt; 865 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;known_indent_sm_kwargs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indent_sm_kwargs&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-866"&gt;&lt;span class="lineno"&gt; 866 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-867"&gt;&lt;span class="lineno"&gt; 867 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_initial_transitions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-868"&gt;&lt;span class="lineno"&gt; 868 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-869"&gt;&lt;span class="lineno"&gt; 869 &lt;/span&gt;&lt;span class="sd"&gt;        Add whitespace-specific transitions before those defined in subclass.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-870"&gt;&lt;span class="lineno"&gt; 870 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-871"&gt;&lt;span class="lineno"&gt; 871 &lt;/span&gt;&lt;span class="sd"&gt;        Extends `State.add_initial_transitions()`.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-872"&gt;&lt;span class="lineno"&gt; 872 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-873"&gt;&lt;span class="lineno"&gt; 873 &lt;/span&gt;        &lt;span class="n"&gt;State&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_initial_transitions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-874"&gt;&lt;span class="lineno"&gt; 874 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;patterns&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-875"&gt;&lt;span class="lineno"&gt; 875 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;patterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-876"&gt;&lt;span class="lineno"&gt; 876 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ws_patterns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-877"&gt;&lt;span class="lineno"&gt; 877 &lt;/span&gt;        &lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transitions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;make_transitions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-878"&gt;&lt;span class="lineno"&gt; 878 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ws_initial_transitions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-879"&gt;&lt;span class="lineno"&gt; 879 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_transitions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;names&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;transitions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-880"&gt;&lt;span class="lineno"&gt; 880 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-881"&gt;&lt;span class="lineno"&gt; 881 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;blank&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-882"&gt;&lt;span class="lineno"&gt; 882 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Handle blank lines. Does nothing. Override in subclasses.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-883"&gt;&lt;span class="lineno"&gt; 883 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;nop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-884"&gt;&lt;span class="lineno"&gt; 884 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-885"&gt;&lt;span class="lineno"&gt; 885 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-886"&gt;&lt;span class="lineno"&gt; 886 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-887"&gt;&lt;span class="lineno"&gt; 887 &lt;/span&gt;&lt;span class="sd"&gt;        Handle an indented text block. Extend or override in subclasses.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-888"&gt;&lt;span class="lineno"&gt; 888 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-889"&gt;&lt;span class="lineno"&gt; 889 &lt;/span&gt;&lt;span class="sd"&gt;        Recursively run the registered state machine for indented blocks&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-890"&gt;&lt;span class="lineno"&gt; 890 &lt;/span&gt;&lt;span class="sd"&gt;        (`self.indent_sm`).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-891"&gt;&lt;span class="lineno"&gt; 891 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-892"&gt;&lt;span class="lineno"&gt; 892 &lt;/span&gt;        &lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank_finish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; \
&lt;/span&gt;&lt;span id="row-893"&gt;&lt;span class="lineno"&gt; 893 &lt;/span&gt;              &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;state_machine&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_indented&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-894"&gt;&lt;span class="lineno"&gt; 894 &lt;/span&gt;        &lt;span class="n"&gt;sm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indent_sm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indent_sm_kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-895"&gt;&lt;span class="lineno"&gt; 895 &lt;/span&gt;        &lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input_offset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-896"&gt;&lt;span class="lineno"&gt; 896 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-897"&gt;&lt;span class="lineno"&gt; 897 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-898"&gt;&lt;span class="lineno"&gt; 898 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;known_indent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-899"&gt;&lt;span class="lineno"&gt; 899 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-900"&gt;&lt;span class="lineno"&gt; 900 &lt;/span&gt;&lt;span class="sd"&gt;        Handle a known-indent text block. Extend or override in subclasses.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-901"&gt;&lt;span class="lineno"&gt; 901 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-902"&gt;&lt;span class="lineno"&gt; 902 &lt;/span&gt;&lt;span class="sd"&gt;        Recursively run the registered state machine for known-indent indented&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-903"&gt;&lt;span class="lineno"&gt; 903 &lt;/span&gt;&lt;span class="sd"&gt;        blocks (`self.known_indent_sm`). The indent is the length of the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-904"&gt;&lt;span class="lineno"&gt; 904 &lt;/span&gt;&lt;span class="sd"&gt;        match, ``match.end()``.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-905"&gt;&lt;span class="lineno"&gt; 905 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-906"&gt;&lt;span class="lineno"&gt; 906 &lt;/span&gt;        &lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank_finish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; \
&lt;/span&gt;&lt;span id="row-907"&gt;&lt;span class="lineno"&gt; 907 &lt;/span&gt;              &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;state_machine&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_known_indented&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-908"&gt;&lt;span class="lineno"&gt; 908 &lt;/span&gt;        &lt;span class="n"&gt;sm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;known_indent_sm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-909"&gt;&lt;span class="lineno"&gt; 909 &lt;/span&gt;                                 &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;known_indent_sm_kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-910"&gt;&lt;span class="lineno"&gt; 910 &lt;/span&gt;        &lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input_offset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-911"&gt;&lt;span class="lineno"&gt; 911 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-912"&gt;&lt;span class="lineno"&gt; 912 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-913"&gt;&lt;span class="lineno"&gt; 913 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;first_known_indent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-914"&gt;&lt;span class="lineno"&gt; 914 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-915"&gt;&lt;span class="lineno"&gt; 915 &lt;/span&gt;&lt;span class="sd"&gt;        Handle an indented text block (first line&amp;#39;s indent known).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-916"&gt;&lt;span class="lineno"&gt; 916 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-917"&gt;&lt;span class="lineno"&gt; 917 &lt;/span&gt;&lt;span class="sd"&gt;        Extend or override in subclasses.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-918"&gt;&lt;span class="lineno"&gt; 918 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-919"&gt;&lt;span class="lineno"&gt; 919 &lt;/span&gt;&lt;span class="sd"&gt;        Recursively run the registered state machine for known-indent indented&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-920"&gt;&lt;span class="lineno"&gt; 920 &lt;/span&gt;&lt;span class="sd"&gt;        blocks (`self.known_indent_sm`). The indent is the length of the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-921"&gt;&lt;span class="lineno"&gt; 921 &lt;/span&gt;&lt;span class="sd"&gt;        match, ``match.end()``.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-922"&gt;&lt;span class="lineno"&gt; 922 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-923"&gt;&lt;span class="lineno"&gt; 923 &lt;/span&gt;        &lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank_finish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; \
&lt;/span&gt;&lt;span id="row-924"&gt;&lt;span class="lineno"&gt; 924 &lt;/span&gt;              &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;state_machine&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_first_known_indented&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;match&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-925"&gt;&lt;span class="lineno"&gt; 925 &lt;/span&gt;        &lt;span class="n"&gt;sm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;known_indent_sm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-926"&gt;&lt;span class="lineno"&gt; 926 &lt;/span&gt;                                 &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;known_indent_sm_kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-927"&gt;&lt;span class="lineno"&gt; 927 &lt;/span&gt;        &lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;indented&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input_offset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;line_offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-928"&gt;&lt;span class="lineno"&gt; 928 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;next_state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-929"&gt;&lt;span class="lineno"&gt; 929 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-930"&gt;&lt;span class="lineno"&gt; 930 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-931"&gt;&lt;span class="lineno"&gt; 931 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;_SearchOverride&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-932"&gt;&lt;span class="lineno"&gt; 932 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-933"&gt;&lt;span class="lineno"&gt; 933 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-934"&gt;&lt;span class="lineno"&gt; 934 &lt;/span&gt;&lt;span class="sd"&gt;    Mix-in class to override `StateMachine` regular expression behavior.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-935"&gt;&lt;span class="lineno"&gt; 935 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-936"&gt;&lt;span class="lineno"&gt; 936 &lt;/span&gt;&lt;span class="sd"&gt;    Changes regular expression matching, from the default `re.match()`&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-937"&gt;&lt;span class="lineno"&gt; 937 &lt;/span&gt;&lt;span class="sd"&gt;    (succeeds only if the pattern matches at the start of `self.line`) to&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-938"&gt;&lt;span class="lineno"&gt; 938 &lt;/span&gt;&lt;span class="sd"&gt;    `re.search()` (succeeds if the pattern matches anywhere in `self.line`).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-939"&gt;&lt;span class="lineno"&gt; 939 &lt;/span&gt;&lt;span class="sd"&gt;    When subclassing a `StateMachine`, list this class **first** in the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-940"&gt;&lt;span class="lineno"&gt; 940 &lt;/span&gt;&lt;span class="sd"&gt;    inheritance list of the class definition.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-941"&gt;&lt;span class="lineno"&gt; 941 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-942"&gt;&lt;span class="lineno"&gt; 942 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-943"&gt;&lt;span class="lineno"&gt; 943 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-944"&gt;&lt;span class="lineno"&gt; 944 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-945"&gt;&lt;span class="lineno"&gt; 945 &lt;/span&gt;&lt;span class="sd"&gt;        Return the result of a regular expression search.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-946"&gt;&lt;span class="lineno"&gt; 946 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-947"&gt;&lt;span class="lineno"&gt; 947 &lt;/span&gt;&lt;span class="sd"&gt;        Overrides `StateMachine.match()`.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-948"&gt;&lt;span class="lineno"&gt; 948 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-949"&gt;&lt;span class="lineno"&gt; 949 &lt;/span&gt;&lt;span class="sd"&gt;        Parameter `pattern`: `re` compiled regular expression.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-950"&gt;&lt;span class="lineno"&gt; 950 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-951"&gt;&lt;span class="lineno"&gt; 951 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-952"&gt;&lt;span class="lineno"&gt; 952 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-953"&gt;&lt;span class="lineno"&gt; 953 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-954"&gt;&lt;span class="lineno"&gt; 954 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SearchStateMachine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_SearchOverride&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;StateMachine&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-955"&gt;&lt;span class="lineno"&gt; 955 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;`StateMachine` which uses `re.search()` instead of `re.match()`.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-956"&gt;&lt;span class="lineno"&gt; 956 &lt;/span&gt;    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-957"&gt;&lt;span class="lineno"&gt; 957 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-958"&gt;&lt;span class="lineno"&gt; 958 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-959"&gt;&lt;span class="lineno"&gt; 959 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SearchStateMachineWS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_SearchOverride&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;StateMachineWS&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-960"&gt;&lt;span class="lineno"&gt; 960 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;`StateMachineWS` which uses `re.search()` instead of `re.match()`.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-961"&gt;&lt;span class="lineno"&gt; 961 &lt;/span&gt;    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-962"&gt;&lt;span class="lineno"&gt; 962 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-963"&gt;&lt;span class="lineno"&gt; 963 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-964"&gt;&lt;span class="lineno"&gt; 964 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ViewList&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-965"&gt;&lt;span class="lineno"&gt; 965 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-966"&gt;&lt;span class="lineno"&gt; 966 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-967"&gt;&lt;span class="lineno"&gt; 967 &lt;/span&gt;&lt;span class="sd"&gt;    List with extended functionality: slices of ViewList objects are child&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-968"&gt;&lt;span class="lineno"&gt; 968 &lt;/span&gt;&lt;span class="sd"&gt;    lists, linked to their parents. Changes made to a child list also affect&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-969"&gt;&lt;span class="lineno"&gt; 969 &lt;/span&gt;&lt;span class="sd"&gt;    the parent list.  A child list is effectively a &amp;quot;view&amp;quot; (in the SQL sense)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-970"&gt;&lt;span class="lineno"&gt; 970 &lt;/span&gt;&lt;span class="sd"&gt;    of the parent list.  Changes to parent lists, however, do *not* affect&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-971"&gt;&lt;span class="lineno"&gt; 971 &lt;/span&gt;&lt;span class="sd"&gt;    active child lists.  If a parent list is changed, any active child lists&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-972"&gt;&lt;span class="lineno"&gt; 972 &lt;/span&gt;&lt;span class="sd"&gt;    should be recreated.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-973"&gt;&lt;span class="lineno"&gt; 973 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-974"&gt;&lt;span class="lineno"&gt; 974 &lt;/span&gt;&lt;span class="sd"&gt;    The start and end of the slice can be trimmed using the `trim_start()` and&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-975"&gt;&lt;span class="lineno"&gt; 975 &lt;/span&gt;&lt;span class="sd"&gt;    `trim_end()` methods, without affecting the parent list.  The link between&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-976"&gt;&lt;span class="lineno"&gt; 976 &lt;/span&gt;&lt;span class="sd"&gt;    child and parent lists can be broken by calling `disconnect()` on the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-977"&gt;&lt;span class="lineno"&gt; 977 &lt;/span&gt;&lt;span class="sd"&gt;    child list.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-978"&gt;&lt;span class="lineno"&gt; 978 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-979"&gt;&lt;span class="lineno"&gt; 979 &lt;/span&gt;&lt;span class="sd"&gt;    Also, ViewList objects keep track of the source &amp;amp; offset of each item.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-980"&gt;&lt;span class="lineno"&gt; 980 &lt;/span&gt;&lt;span class="sd"&gt;    This information is accessible via the `source()`, `offset()`, and&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-981"&gt;&lt;span class="lineno"&gt; 981 &lt;/span&gt;&lt;span class="sd"&gt;    `info()` methods.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-982"&gt;&lt;span class="lineno"&gt; 982 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-983"&gt;&lt;span class="lineno"&gt; 983 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-984"&gt;&lt;span class="lineno"&gt; 984 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;initlist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-985"&gt;&lt;span class="lineno"&gt; 985 &lt;/span&gt;                 &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent_offset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-986"&gt;&lt;span class="lineno"&gt; 986 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-987"&gt;&lt;span class="lineno"&gt; 987 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;The actual list of data, flattened from various sources.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-988"&gt;&lt;span class="lineno"&gt; 988 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-989"&gt;&lt;span class="lineno"&gt; 989 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-990"&gt;&lt;span class="lineno"&gt; 990 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;A list of (source, offset) pairs, same length as `self.data`: the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-991"&gt;&lt;span class="lineno"&gt; 991 &lt;/span&gt;&lt;span class="sd"&gt;        source of each line and the offset of each line from the beginning of&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-992"&gt;&lt;span class="lineno"&gt; 992 &lt;/span&gt;&lt;span class="sd"&gt;        its source.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-993"&gt;&lt;span class="lineno"&gt; 993 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-994"&gt;&lt;span class="lineno"&gt; 994 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parent&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-995"&gt;&lt;span class="lineno"&gt; 995 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;The parent list.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-996"&gt;&lt;span class="lineno"&gt; 996 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-997"&gt;&lt;span class="lineno"&gt; 997 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;parent_offset&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-998"&gt;&lt;span class="lineno"&gt; 998 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Offset of this list from the beginning of the parent list.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-999"&gt;&lt;span class="lineno"&gt; 999 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1000"&gt;&lt;span class="lineno"&gt;1000 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;initlist&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ViewList&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1001"&gt;&lt;span class="lineno"&gt;1001 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;initlist&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[:]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1002"&gt;&lt;span class="lineno"&gt;1002 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;initlist&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[:]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1003"&gt;&lt;span class="lineno"&gt;1003 &lt;/span&gt;        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;initlist&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1004"&gt;&lt;span class="lineno"&gt;1004 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;initlist&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1005"&gt;&lt;span class="lineno"&gt;1005 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1006"&gt;&lt;span class="lineno"&gt;1006 &lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1007"&gt;&lt;span class="lineno"&gt;1007 &lt;/span&gt;            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1008"&gt;&lt;span class="lineno"&gt;1008 &lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;initlist&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1009"&gt;&lt;span class="lineno"&gt;1009 &lt;/span&gt;        &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;data mismatch&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1010"&gt;&lt;span class="lineno"&gt;1010 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1011"&gt;&lt;span class="lineno"&gt;1011 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1012"&gt;&lt;span class="lineno"&gt;1012 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1013"&gt;&lt;span class="lineno"&gt;1013 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1014"&gt;&lt;span class="lineno"&gt;1014 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__repr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1015"&gt;&lt;span class="lineno"&gt;1015 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;(&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;, items=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;)&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1016"&gt;&lt;span class="lineno"&gt;1016 &lt;/span&gt;                                     &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1017"&gt;&lt;span class="lineno"&gt;1017 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1018"&gt;&lt;span class="lineno"&gt;1018 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__lt__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;  &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__cast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1019"&gt;&lt;span class="lineno"&gt;1019 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__le__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__cast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1020"&gt;&lt;span class="lineno"&gt;1020 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__eq__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__cast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1021"&gt;&lt;span class="lineno"&gt;1021 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__ne__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__cast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1022"&gt;&lt;span class="lineno"&gt;1022 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__gt__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;  &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__cast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1023"&gt;&lt;span class="lineno"&gt;1023 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__ge__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__cast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1024"&gt;&lt;span class="lineno"&gt;1024 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__cmp__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__cast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1025"&gt;&lt;span class="lineno"&gt;1025 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1026"&gt;&lt;span class="lineno"&gt;1026 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__cast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1027"&gt;&lt;span class="lineno"&gt;1027 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ViewList&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1028"&gt;&lt;span class="lineno"&gt;1028 &lt;/span&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1029"&gt;&lt;span class="lineno"&gt;1029 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1030"&gt;&lt;span class="lineno"&gt;1030 &lt;/span&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1031"&gt;&lt;span class="lineno"&gt;1031 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1032"&gt;&lt;span class="lineno"&gt;1032 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__contains__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1033"&gt;&lt;span class="lineno"&gt;1033 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__len__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1034"&gt;&lt;span class="lineno"&gt;1034 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1035"&gt;&lt;span class="lineno"&gt;1035 &lt;/span&gt;    &lt;span class="c1"&gt;# The __getitem__()/__setitem__() methods check whether the index&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1036"&gt;&lt;span class="lineno"&gt;1036 &lt;/span&gt;    &lt;span class="c1"&gt;# is a slice first, since indexing a native list with a slice object&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1037"&gt;&lt;span class="lineno"&gt;1037 &lt;/span&gt;    &lt;span class="c1"&gt;# just works.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1038"&gt;&lt;span class="lineno"&gt;1038 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1039"&gt;&lt;span class="lineno"&gt;1039 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__getitem__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1040"&gt;&lt;span class="lineno"&gt;1040 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SliceType&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1041"&gt;&lt;span class="lineno"&gt;1041 &lt;/span&gt;            &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;  &lt;span class="s1"&gt;&amp;#39;cannot handle slice with stride&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1042"&gt;&lt;span class="lineno"&gt;1042 &lt;/span&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1043"&gt;&lt;span class="lineno"&gt;1043 &lt;/span&gt;                                  &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1044"&gt;&lt;span class="lineno"&gt;1044 &lt;/span&gt;                                  &lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent_offset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1045"&gt;&lt;span class="lineno"&gt;1045 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1046"&gt;&lt;span class="lineno"&gt;1046 &lt;/span&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1047"&gt;&lt;span class="lineno"&gt;1047 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1048"&gt;&lt;span class="lineno"&gt;1048 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__setitem__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1049"&gt;&lt;span class="lineno"&gt;1049 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SliceType&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1050"&gt;&lt;span class="lineno"&gt;1050 &lt;/span&gt;            &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cannot handle slice with stride&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1051"&gt;&lt;span class="lineno"&gt;1051 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ViewList&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1052"&gt;&lt;span class="lineno"&gt;1052 &lt;/span&gt;                &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;assigning non-ViewList to ViewList slice&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1053"&gt;&lt;span class="lineno"&gt;1053 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1054"&gt;&lt;span class="lineno"&gt;1054 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1055"&gt;&lt;span class="lineno"&gt;1055 &lt;/span&gt;            &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;data mismatch&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1056"&gt;&lt;span class="lineno"&gt;1056 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1057"&gt;&lt;span class="lineno"&gt;1057 &lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_offset&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1058"&gt;&lt;span class="lineno"&gt;1058 &lt;/span&gt;                            &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1059"&gt;&lt;span class="lineno"&gt;1059 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1060"&gt;&lt;span class="lineno"&gt;1060 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1061"&gt;&lt;span class="lineno"&gt;1061 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1062"&gt;&lt;span class="lineno"&gt;1062 &lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1063"&gt;&lt;span class="lineno"&gt;1063 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1064"&gt;&lt;span class="lineno"&gt;1064 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__delitem__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1065"&gt;&lt;span class="lineno"&gt;1065 &lt;/span&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1066"&gt;&lt;span class="lineno"&gt;1066 &lt;/span&gt;            &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1067"&gt;&lt;span class="lineno"&gt;1067 &lt;/span&gt;            &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1068"&gt;&lt;span class="lineno"&gt;1068 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1069"&gt;&lt;span class="lineno"&gt;1069 &lt;/span&gt;                &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1070"&gt;&lt;span class="lineno"&gt;1070 &lt;/span&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1071"&gt;&lt;span class="lineno"&gt;1071 &lt;/span&gt;            &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;step&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cannot handle slice with stride&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1072"&gt;&lt;span class="lineno"&gt;1072 &lt;/span&gt;            &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1073"&gt;&lt;span class="lineno"&gt;1073 &lt;/span&gt;            &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1074"&gt;&lt;span class="lineno"&gt;1074 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1075"&gt;&lt;span class="lineno"&gt;1075 &lt;/span&gt;                &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_offset&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1076"&gt;&lt;span class="lineno"&gt;1076 &lt;/span&gt;                                &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_offset&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1077"&gt;&lt;span class="lineno"&gt;1077 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1078"&gt;&lt;span class="lineno"&gt;1078 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__add__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1079"&gt;&lt;span class="lineno"&gt;1079 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ViewList&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1080"&gt;&lt;span class="lineno"&gt;1080 &lt;/span&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1081"&gt;&lt;span class="lineno"&gt;1081 &lt;/span&gt;                                  &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1082"&gt;&lt;span class="lineno"&gt;1082 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1083"&gt;&lt;span class="lineno"&gt;1083 &lt;/span&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;adding non-ViewList to a ViewList&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1084"&gt;&lt;span class="lineno"&gt;1084 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1085"&gt;&lt;span class="lineno"&gt;1085 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__radd__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1086"&gt;&lt;span class="lineno"&gt;1086 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ViewList&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1087"&gt;&lt;span class="lineno"&gt;1087 &lt;/span&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1088"&gt;&lt;span class="lineno"&gt;1088 &lt;/span&gt;                                  &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1089"&gt;&lt;span class="lineno"&gt;1089 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1090"&gt;&lt;span class="lineno"&gt;1090 &lt;/span&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;adding ViewList to a non-ViewList&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1091"&gt;&lt;span class="lineno"&gt;1091 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1092"&gt;&lt;span class="lineno"&gt;1092 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__iadd__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1093"&gt;&lt;span class="lineno"&gt;1093 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ViewList&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1094"&gt;&lt;span class="lineno"&gt;1094 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1095"&gt;&lt;span class="lineno"&gt;1095 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1096"&gt;&lt;span class="lineno"&gt;1096 &lt;/span&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;argument to += must be a ViewList&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1097"&gt;&lt;span class="lineno"&gt;1097 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1098"&gt;&lt;span class="lineno"&gt;1098 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1099"&gt;&lt;span class="lineno"&gt;1099 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__mul__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1100"&gt;&lt;span class="lineno"&gt;1100 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__class__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1101"&gt;&lt;span class="lineno"&gt;1101 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1102"&gt;&lt;span class="lineno"&gt;1102 &lt;/span&gt;    &lt;span class="fm"&gt;__rmul__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="fm"&gt;__mul__&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1103"&gt;&lt;span class="lineno"&gt;1103 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1104"&gt;&lt;span class="lineno"&gt;1104 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__imul__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1105"&gt;&lt;span class="lineno"&gt;1105 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1106"&gt;&lt;span class="lineno"&gt;1106 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;*=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1107"&gt;&lt;span class="lineno"&gt;1107 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1108"&gt;&lt;span class="lineno"&gt;1108 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1109"&gt;&lt;span class="lineno"&gt;1109 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1110"&gt;&lt;span class="lineno"&gt;1110 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ViewList&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1111"&gt;&lt;span class="lineno"&gt;1111 &lt;/span&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;extending a ViewList with a non-ViewList&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1112"&gt;&lt;span class="lineno"&gt;1112 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1113"&gt;&lt;span class="lineno"&gt;1113 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1114"&gt;&lt;span class="lineno"&gt;1114 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1115"&gt;&lt;span class="lineno"&gt;1115 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1116"&gt;&lt;span class="lineno"&gt;1116 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1117"&gt;&lt;span class="lineno"&gt;1117 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1118"&gt;&lt;span class="lineno"&gt;1118 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1119"&gt;&lt;span class="lineno"&gt;1119 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1120"&gt;&lt;span class="lineno"&gt;1120 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1121"&gt;&lt;span class="lineno"&gt;1121 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1122"&gt;&lt;span class="lineno"&gt;1122 &lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1123"&gt;&lt;span class="lineno"&gt;1123 &lt;/span&gt;                                   &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1124"&gt;&lt;span class="lineno"&gt;1124 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1125"&gt;&lt;span class="lineno"&gt;1125 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1126"&gt;&lt;span class="lineno"&gt;1126 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1127"&gt;&lt;span class="lineno"&gt;1127 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1128"&gt;&lt;span class="lineno"&gt;1128 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1129"&gt;&lt;span class="lineno"&gt;1129 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ViewList&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1130"&gt;&lt;span class="lineno"&gt;1130 &lt;/span&gt;                &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;inserting non-ViewList with no source given&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1131"&gt;&lt;span class="lineno"&gt;1131 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1132"&gt;&lt;span class="lineno"&gt;1132 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1133"&gt;&lt;span class="lineno"&gt;1133 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1134"&gt;&lt;span class="lineno"&gt;1134 &lt;/span&gt;                &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1135"&gt;&lt;span class="lineno"&gt;1135 &lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1136"&gt;&lt;span class="lineno"&gt;1136 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1137"&gt;&lt;span class="lineno"&gt;1137 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1138"&gt;&lt;span class="lineno"&gt;1138 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1139"&gt;&lt;span class="lineno"&gt;1139 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1140"&gt;&lt;span class="lineno"&gt;1140 &lt;/span&gt;                &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1141"&gt;&lt;span class="lineno"&gt;1141 &lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;insert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1142"&gt;&lt;span class="lineno"&gt;1142 &lt;/span&gt;                                   &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1143"&gt;&lt;span class="lineno"&gt;1143 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1144"&gt;&lt;span class="lineno"&gt;1144 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1145"&gt;&lt;span class="lineno"&gt;1145 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1146"&gt;&lt;span class="lineno"&gt;1146 &lt;/span&gt;            &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1147"&gt;&lt;span class="lineno"&gt;1147 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_offset&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1148"&gt;&lt;span class="lineno"&gt;1148 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1149"&gt;&lt;span class="lineno"&gt;1149 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1150"&gt;&lt;span class="lineno"&gt;1150 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1151"&gt;&lt;span class="lineno"&gt;1151 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;trim_start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1152"&gt;&lt;span class="lineno"&gt;1152 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1153"&gt;&lt;span class="lineno"&gt;1153 &lt;/span&gt;&lt;span class="sd"&gt;        Remove items from the start of the list, without touching the parent.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1154"&gt;&lt;span class="lineno"&gt;1154 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1155"&gt;&lt;span class="lineno"&gt;1155 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1156"&gt;&lt;span class="lineno"&gt;1156 &lt;/span&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;IndexError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Size of trim too large; can&amp;#39;t trim &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; items &amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1157"&gt;&lt;span class="lineno"&gt;1157 &lt;/span&gt;                             &lt;span class="s2"&gt;&amp;quot;from a list of size &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1158"&gt;&lt;span class="lineno"&gt;1158 &lt;/span&gt;        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1159"&gt;&lt;span class="lineno"&gt;1159 &lt;/span&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;IndexError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Trim size must be &amp;gt;= 0.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1160"&gt;&lt;span class="lineno"&gt;1160 &lt;/span&gt;        &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1161"&gt;&lt;span class="lineno"&gt;1161 &lt;/span&gt;        &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1162"&gt;&lt;span class="lineno"&gt;1162 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1163"&gt;&lt;span class="lineno"&gt;1163 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_offset&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1164"&gt;&lt;span class="lineno"&gt;1164 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1165"&gt;&lt;span class="lineno"&gt;1165 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;trim_end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1166"&gt;&lt;span class="lineno"&gt;1166 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1167"&gt;&lt;span class="lineno"&gt;1167 &lt;/span&gt;&lt;span class="sd"&gt;        Remove items from the end of the list, without touching the parent.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1168"&gt;&lt;span class="lineno"&gt;1168 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1169"&gt;&lt;span class="lineno"&gt;1169 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1170"&gt;&lt;span class="lineno"&gt;1170 &lt;/span&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;IndexError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Size of trim too large; can&amp;#39;t trim &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; items &amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1171"&gt;&lt;span class="lineno"&gt;1171 &lt;/span&gt;                             &lt;span class="s2"&gt;&amp;quot;from a list of size &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;.&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1172"&gt;&lt;span class="lineno"&gt;1172 &lt;/span&gt;        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1173"&gt;&lt;span class="lineno"&gt;1173 &lt;/span&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;IndexError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Trim size must be &amp;gt;= 0.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1174"&gt;&lt;span class="lineno"&gt;1174 &lt;/span&gt;        &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1175"&gt;&lt;span class="lineno"&gt;1175 &lt;/span&gt;        &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1176"&gt;&lt;span class="lineno"&gt;1176 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1177"&gt;&lt;span class="lineno"&gt;1177 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1178"&gt;&lt;span class="lineno"&gt;1178 &lt;/span&gt;        &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1179"&gt;&lt;span class="lineno"&gt;1179 &lt;/span&gt;        &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1180"&gt;&lt;span class="lineno"&gt;1180 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1181"&gt;&lt;span class="lineno"&gt;1181 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1182"&gt;&lt;span class="lineno"&gt;1182 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1183"&gt;&lt;span class="lineno"&gt;1183 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1184"&gt;&lt;span class="lineno"&gt;1184 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1185"&gt;&lt;span class="lineno"&gt;1185 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1186"&gt;&lt;span class="lineno"&gt;1186 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1187"&gt;&lt;span class="lineno"&gt;1187 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1188"&gt;&lt;span class="lineno"&gt;1188 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1189"&gt;&lt;span class="lineno"&gt;1189 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1190"&gt;&lt;span class="lineno"&gt;1190 &lt;/span&gt;        &lt;span class="n"&gt;tmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1191"&gt;&lt;span class="lineno"&gt;1191 &lt;/span&gt;        &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1192"&gt;&lt;span class="lineno"&gt;1192 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1193"&gt;&lt;span class="lineno"&gt;1193 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1194"&gt;&lt;span class="lineno"&gt;1194 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1195"&gt;&lt;span class="lineno"&gt;1195 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1196"&gt;&lt;span class="lineno"&gt;1196 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1197"&gt;&lt;span class="lineno"&gt;1197 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Return source &amp;amp; offset for index `i`.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1198"&gt;&lt;span class="lineno"&gt;1198 &lt;/span&gt;        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1199"&gt;&lt;span class="lineno"&gt;1199 &lt;/span&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1200"&gt;&lt;span class="lineno"&gt;1200 &lt;/span&gt;        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IndexError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1201"&gt;&lt;span class="lineno"&gt;1201 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;     &lt;span class="c1"&gt;# Just past the end&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1202"&gt;&lt;span class="lineno"&gt;1202 &lt;/span&gt;                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1203"&gt;&lt;span class="lineno"&gt;1203 &lt;/span&gt;            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1204"&gt;&lt;span class="lineno"&gt;1204 &lt;/span&gt;                &lt;span class="k"&gt;raise&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1205"&gt;&lt;span class="lineno"&gt;1205 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1206"&gt;&lt;span class="lineno"&gt;1206 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;source&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1207"&gt;&lt;span class="lineno"&gt;1207 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Return source for index `i`.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1208"&gt;&lt;span class="lineno"&gt;1208 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1209"&gt;&lt;span class="lineno"&gt;1209 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1210"&gt;&lt;span class="lineno"&gt;1210 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1211"&gt;&lt;span class="lineno"&gt;1211 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Return offset for index `i`.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1212"&gt;&lt;span class="lineno"&gt;1212 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1213"&gt;&lt;span class="lineno"&gt;1213 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1214"&gt;&lt;span class="lineno"&gt;1214 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;disconnect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1215"&gt;&lt;span class="lineno"&gt;1215 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Break link between this list and parent list.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1216"&gt;&lt;span class="lineno"&gt;1216 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1217"&gt;&lt;span class="lineno"&gt;1217 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1218"&gt;&lt;span class="lineno"&gt;1218 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;xitems&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1219"&gt;&lt;span class="lineno"&gt;1219 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Return iterator yielding (source, offset, value) tuples.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1220"&gt;&lt;span class="lineno"&gt;1220 &lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1221"&gt;&lt;span class="lineno"&gt;1221 &lt;/span&gt;            &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1222"&gt;&lt;span class="lineno"&gt;1222 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1223"&gt;&lt;span class="lineno"&gt;1223 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;pprint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1224"&gt;&lt;span class="lineno"&gt;1224 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Print the list in `grep` format (`source:offset:value` lines)&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1225"&gt;&lt;span class="lineno"&gt;1225 &lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xitems&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1226"&gt;&lt;span class="lineno"&gt;1226 &lt;/span&gt;            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1227"&gt;&lt;span class="lineno"&gt;1227 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1228"&gt;&lt;span class="lineno"&gt;1228 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1229"&gt;&lt;span class="lineno"&gt;1229 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StringList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ViewList&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1230"&gt;&lt;span class="lineno"&gt;1230 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1231"&gt;&lt;span class="lineno"&gt;1231 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;A `ViewList` with string-specific methods.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1232"&gt;&lt;span class="lineno"&gt;1232 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1233"&gt;&lt;span class="lineno"&gt;1233 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;trim_left&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;maxint&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1234"&gt;&lt;span class="lineno"&gt;1234 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1235"&gt;&lt;span class="lineno"&gt;1235 &lt;/span&gt;&lt;span class="sd"&gt;        Trim `length` characters off the beginning of each item, in-place,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1236"&gt;&lt;span class="lineno"&gt;1236 &lt;/span&gt;&lt;span class="sd"&gt;        from index `start` to `end`.  No whitespace-checking is done on the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1237"&gt;&lt;span class="lineno"&gt;1237 &lt;/span&gt;&lt;span class="sd"&gt;        trimmed text.  Does not affect slice parent.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1238"&gt;&lt;span class="lineno"&gt;1238 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1239"&gt;&lt;span class="lineno"&gt;1239 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1240"&gt;&lt;span class="lineno"&gt;1240 &lt;/span&gt;                                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1241"&gt;&lt;span class="lineno"&gt;1241 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1242"&gt;&lt;span class="lineno"&gt;1242 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_text_block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flush_left&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1243"&gt;&lt;span class="lineno"&gt;1243 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1244"&gt;&lt;span class="lineno"&gt;1244 &lt;/span&gt;&lt;span class="sd"&gt;        Return a contiguous block of text.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1245"&gt;&lt;span class="lineno"&gt;1245 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1246"&gt;&lt;span class="lineno"&gt;1246 &lt;/span&gt;&lt;span class="sd"&gt;        If `flush_left` is true, raise `UnexpectedIndentationError` if an&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1247"&gt;&lt;span class="lineno"&gt;1247 &lt;/span&gt;&lt;span class="sd"&gt;        indented line is encountered before the text block ends (with a blank&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1248"&gt;&lt;span class="lineno"&gt;1248 &lt;/span&gt;&lt;span class="sd"&gt;        line).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1249"&gt;&lt;span class="lineno"&gt;1249 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1250"&gt;&lt;span class="lineno"&gt;1250 &lt;/span&gt;        &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1251"&gt;&lt;span class="lineno"&gt;1251 &lt;/span&gt;        &lt;span class="n"&gt;last&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1252"&gt;&lt;span class="lineno"&gt;1252 &lt;/span&gt;        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1253"&gt;&lt;span class="lineno"&gt;1253 &lt;/span&gt;            &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1254"&gt;&lt;span class="lineno"&gt;1254 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1255"&gt;&lt;span class="lineno"&gt;1255 &lt;/span&gt;                &lt;span class="k"&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1256"&gt;&lt;span class="lineno"&gt;1256 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;flush_left&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1257"&gt;&lt;span class="lineno"&gt;1257 &lt;/span&gt;                &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1258"&gt;&lt;span class="lineno"&gt;1258 &lt;/span&gt;                &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;UnexpectedIndentationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1259"&gt;&lt;span class="lineno"&gt;1259 &lt;/span&gt;                                                 &lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1260"&gt;&lt;span class="lineno"&gt;1260 &lt;/span&gt;            &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1261"&gt;&lt;span class="lineno"&gt;1261 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1262"&gt;&lt;span class="lineno"&gt;1262 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1263"&gt;&lt;span class="lineno"&gt;1263 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_indented&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;until_blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strip_indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1264"&gt;&lt;span class="lineno"&gt;1264 &lt;/span&gt;                     &lt;span class="n"&gt;block_indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;first_indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1265"&gt;&lt;span class="lineno"&gt;1265 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1266"&gt;&lt;span class="lineno"&gt;1266 &lt;/span&gt;&lt;span class="sd"&gt;        Extract and return a StringList of indented lines of text.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1267"&gt;&lt;span class="lineno"&gt;1267 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1268"&gt;&lt;span class="lineno"&gt;1268 &lt;/span&gt;&lt;span class="sd"&gt;        Collect all lines with indentation, determine the minimum indentation,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1269"&gt;&lt;span class="lineno"&gt;1269 &lt;/span&gt;&lt;span class="sd"&gt;        remove the minimum indentation from all indented lines (unless&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1270"&gt;&lt;span class="lineno"&gt;1270 &lt;/span&gt;&lt;span class="sd"&gt;        `strip_indent` is false), and return them. All lines up to but not&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1271"&gt;&lt;span class="lineno"&gt;1271 &lt;/span&gt;&lt;span class="sd"&gt;        including the first unindented line will be returned.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1272"&gt;&lt;span class="lineno"&gt;1272 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1273"&gt;&lt;span class="lineno"&gt;1273 &lt;/span&gt;&lt;span class="sd"&gt;        :Parameters:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1274"&gt;&lt;span class="lineno"&gt;1274 &lt;/span&gt;&lt;span class="sd"&gt;          - `start`: The index of the first line to examine.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1275"&gt;&lt;span class="lineno"&gt;1275 &lt;/span&gt;&lt;span class="sd"&gt;          - `until_blank`: Stop collecting at the first blank line if true.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1276"&gt;&lt;span class="lineno"&gt;1276 &lt;/span&gt;&lt;span class="sd"&gt;          - `strip_indent`: Strip common leading indent if true (default).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1277"&gt;&lt;span class="lineno"&gt;1277 &lt;/span&gt;&lt;span class="sd"&gt;          - `block_indent`: The indent of the entire block, if known.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1278"&gt;&lt;span class="lineno"&gt;1278 &lt;/span&gt;&lt;span class="sd"&gt;          - `first_indent`: The indent of the first line, if known.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1279"&gt;&lt;span class="lineno"&gt;1279 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1280"&gt;&lt;span class="lineno"&gt;1280 &lt;/span&gt;&lt;span class="sd"&gt;        :Return:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1281"&gt;&lt;span class="lineno"&gt;1281 &lt;/span&gt;&lt;span class="sd"&gt;          - a StringList of indented lines with mininum indent removed;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1282"&gt;&lt;span class="lineno"&gt;1282 &lt;/span&gt;&lt;span class="sd"&gt;          - the amount of the indent;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1283"&gt;&lt;span class="lineno"&gt;1283 &lt;/span&gt;&lt;span class="sd"&gt;          - a boolean: did the indented block finish with a blank line or EOF?&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1284"&gt;&lt;span class="lineno"&gt;1284 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1285"&gt;&lt;span class="lineno"&gt;1285 &lt;/span&gt;        &lt;span class="n"&gt;indent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;block_indent&lt;/span&gt;           &lt;span class="c1"&gt;# start with None if unknown&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1286"&gt;&lt;span class="lineno"&gt;1286 &lt;/span&gt;        &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1287"&gt;&lt;span class="lineno"&gt;1287 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;block_indent&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;first_indent&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1288"&gt;&lt;span class="lineno"&gt;1288 &lt;/span&gt;            &lt;span class="n"&gt;first_indent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;block_indent&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1289"&gt;&lt;span class="lineno"&gt;1289 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;first_indent&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1290"&gt;&lt;span class="lineno"&gt;1290 &lt;/span&gt;            &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1291"&gt;&lt;span class="lineno"&gt;1291 &lt;/span&gt;        &lt;span class="n"&gt;last&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1292"&gt;&lt;span class="lineno"&gt;1292 &lt;/span&gt;        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1293"&gt;&lt;span class="lineno"&gt;1293 &lt;/span&gt;            &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1294"&gt;&lt;span class="lineno"&gt;1294 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1295"&gt;&lt;span class="lineno"&gt;1295 &lt;/span&gt;                         &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;block_indent&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1296"&gt;&lt;span class="lineno"&gt;1296 &lt;/span&gt;                             &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;block_indent&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;())):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1297"&gt;&lt;span class="lineno"&gt;1297 &lt;/span&gt;                &lt;span class="c1"&gt;# Line not indented or insufficiently indented.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1298"&gt;&lt;span class="lineno"&gt;1298 &lt;/span&gt;                &lt;span class="c1"&gt;# Block finished properly iff the last indented line blank:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1299"&gt;&lt;span class="lineno"&gt;1299 &lt;/span&gt;                &lt;span class="n"&gt;blank_finish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1300"&gt;&lt;span class="lineno"&gt;1300 &lt;/span&gt;                                &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1301"&gt;&lt;span class="lineno"&gt;1301 &lt;/span&gt;                &lt;span class="k"&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1302"&gt;&lt;span class="lineno"&gt;1302 &lt;/span&gt;            &lt;span class="n"&gt;stripped&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstrip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1303"&gt;&lt;span class="lineno"&gt;1303 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;stripped&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;            &lt;span class="c1"&gt;# blank line&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1304"&gt;&lt;span class="lineno"&gt;1304 &lt;/span&gt;                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;until_blank&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1305"&gt;&lt;span class="lineno"&gt;1305 &lt;/span&gt;                    &lt;span class="n"&gt;blank_finish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1306"&gt;&lt;span class="lineno"&gt;1306 &lt;/span&gt;                    &lt;span class="k"&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1307"&gt;&lt;span class="lineno"&gt;1307 &lt;/span&gt;            &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;block_indent&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1308"&gt;&lt;span class="lineno"&gt;1308 &lt;/span&gt;                &lt;span class="n"&gt;line_indent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stripped&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1309"&gt;&lt;span class="lineno"&gt;1309 &lt;/span&gt;                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1310"&gt;&lt;span class="lineno"&gt;1310 &lt;/span&gt;                    &lt;span class="n"&gt;indent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line_indent&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1311"&gt;&lt;span class="lineno"&gt;1311 &lt;/span&gt;                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1312"&gt;&lt;span class="lineno"&gt;1312 &lt;/span&gt;                    &lt;span class="n"&gt;indent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line_indent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1313"&gt;&lt;span class="lineno"&gt;1313 &lt;/span&gt;            &lt;span class="n"&gt;end&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1314"&gt;&lt;span class="lineno"&gt;1314 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1315"&gt;&lt;span class="lineno"&gt;1315 &lt;/span&gt;            &lt;span class="n"&gt;blank_finish&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;            &lt;span class="c1"&gt;# block ends at end of lines&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1316"&gt;&lt;span class="lineno"&gt;1316 &lt;/span&gt;        &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1317"&gt;&lt;span class="lineno"&gt;1317 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;first_indent&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1318"&gt;&lt;span class="lineno"&gt;1318 &lt;/span&gt;            &lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;first_indent&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1319"&gt;&lt;span class="lineno"&gt;1319 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;strip_indent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1320"&gt;&lt;span class="lineno"&gt;1320 &lt;/span&gt;            &lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trim_left&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first_indent&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1321"&gt;&lt;span class="lineno"&gt;1321 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank_finish&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1322"&gt;&lt;span class="lineno"&gt;1322 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1323"&gt;&lt;span class="lineno"&gt;1323 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_2D_block&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strip_indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1324"&gt;&lt;span class="lineno"&gt;1324 &lt;/span&gt;        &lt;span class="n"&gt;block&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1325"&gt;&lt;span class="lineno"&gt;1325 &lt;/span&gt;        &lt;span class="n"&gt;indent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1326"&gt;&lt;span class="lineno"&gt;1326 &lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1327"&gt;&lt;span class="lineno"&gt;1327 &lt;/span&gt;            &lt;span class="c1"&gt;# get slice from line, care for combining characters&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1328"&gt;&lt;span class="lineno"&gt;1328 &lt;/span&gt;            &lt;span class="n"&gt;ci&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;column_indices&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1329"&gt;&lt;span class="lineno"&gt;1329 &lt;/span&gt;            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1330"&gt;&lt;span class="lineno"&gt;1330 &lt;/span&gt;                &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ci&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1331"&gt;&lt;span class="lineno"&gt;1331 &lt;/span&gt;            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IndexError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1332"&gt;&lt;span class="lineno"&gt;1332 &lt;/span&gt;                &lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ci&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1333"&gt;&lt;span class="lineno"&gt;1333 &lt;/span&gt;            &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1334"&gt;&lt;span class="lineno"&gt;1334 &lt;/span&gt;                &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ci&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1335"&gt;&lt;span class="lineno"&gt;1335 &lt;/span&gt;            &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;IndexError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1336"&gt;&lt;span class="lineno"&gt;1336 &lt;/span&gt;                &lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ci&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1337"&gt;&lt;span class="lineno"&gt;1337 &lt;/span&gt;            &lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1338"&gt;&lt;span class="lineno"&gt;1338 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1339"&gt;&lt;span class="lineno"&gt;1339 &lt;/span&gt;                &lt;span class="n"&gt;indent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstrip&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1340"&gt;&lt;span class="lineno"&gt;1340 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;strip_indent&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1341"&gt;&lt;span class="lineno"&gt;1341 &lt;/span&gt;            &lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1342"&gt;&lt;span class="lineno"&gt;1342 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;block&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1343"&gt;&lt;span class="lineno"&gt;1343 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1344"&gt;&lt;span class="lineno"&gt;1344 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;pad_double_width&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pad_char&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1345"&gt;&lt;span class="lineno"&gt;1345 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1346"&gt;&lt;span class="lineno"&gt;1346 &lt;/span&gt;&lt;span class="sd"&gt;        Pad all double-width characters in self by appending `pad_char` to each.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1347"&gt;&lt;span class="lineno"&gt;1347 &lt;/span&gt;&lt;span class="sd"&gt;        For East Asian language support.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1348"&gt;&lt;span class="lineno"&gt;1348 &lt;/span&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1349"&gt;&lt;span class="lineno"&gt;1349 &lt;/span&gt;        &lt;span class="n"&gt;east_asian_width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unicodedata&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;east_asian_width&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1350"&gt;&lt;span class="lineno"&gt;1350 &lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1351"&gt;&lt;span class="lineno"&gt;1351 &lt;/span&gt;            &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1352"&gt;&lt;span class="lineno"&gt;1352 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;unicode&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1353"&gt;&lt;span class="lineno"&gt;1353 &lt;/span&gt;                &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1354"&gt;&lt;span class="lineno"&gt;1354 &lt;/span&gt;                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;char&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1355"&gt;&lt;span class="lineno"&gt;1355 &lt;/span&gt;                    &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1356"&gt;&lt;span class="lineno"&gt;1356 &lt;/span&gt;                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;east_asian_width&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;WF&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# &amp;#39;W&amp;#39;ide &amp;amp; &amp;#39;F&amp;#39;ull-width&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1357"&gt;&lt;span class="lineno"&gt;1357 &lt;/span&gt;                        &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pad_char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1358"&gt;&lt;span class="lineno"&gt;1358 &lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1359"&gt;&lt;span class="lineno"&gt;1359 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1360"&gt;&lt;span class="lineno"&gt;1360 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;old&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1361"&gt;&lt;span class="lineno"&gt;1361 &lt;/span&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Replace all occurrences of substring `old` with `new`.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1362"&gt;&lt;span class="lineno"&gt;1362 &lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1363"&gt;&lt;span class="lineno"&gt;1363 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;old&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1364"&gt;&lt;span class="lineno"&gt;1364 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1365"&gt;&lt;span class="lineno"&gt;1365 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1366"&gt;&lt;span class="lineno"&gt;1366 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StateMachineError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1367"&gt;&lt;span class="lineno"&gt;1367 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UnknownStateError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StateMachineError&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1368"&gt;&lt;span class="lineno"&gt;1368 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DuplicateStateError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StateMachineError&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1369"&gt;&lt;span class="lineno"&gt;1369 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UnknownTransitionError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StateMachineError&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1370"&gt;&lt;span class="lineno"&gt;1370 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DuplicateTransitionError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StateMachineError&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1371"&gt;&lt;span class="lineno"&gt;1371 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TransitionPatternNotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StateMachineError&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1372"&gt;&lt;span class="lineno"&gt;1372 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TransitionMethodNotFound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StateMachineError&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1373"&gt;&lt;span class="lineno"&gt;1373 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UnexpectedIndentationError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StateMachineError&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1374"&gt;&lt;span class="lineno"&gt;1374 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1375"&gt;&lt;span class="lineno"&gt;1375 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1376"&gt;&lt;span class="lineno"&gt;1376 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TransitionCorrection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1377"&gt;&lt;span class="lineno"&gt;1377 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1378"&gt;&lt;span class="lineno"&gt;1378 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1379"&gt;&lt;span class="lineno"&gt;1379 &lt;/span&gt;&lt;span class="sd"&gt;    Raise from within a transition method to switch to another transition.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1380"&gt;&lt;span class="lineno"&gt;1380 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1381"&gt;&lt;span class="lineno"&gt;1381 &lt;/span&gt;&lt;span class="sd"&gt;    Raise with one argument, the new transition name.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1382"&gt;&lt;span class="lineno"&gt;1382 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1383"&gt;&lt;span class="lineno"&gt;1383 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1384"&gt;&lt;span class="lineno"&gt;1384 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1385"&gt;&lt;span class="lineno"&gt;1385 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StateCorrection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1386"&gt;&lt;span class="lineno"&gt;1386 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1387"&gt;&lt;span class="lineno"&gt;1387 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1388"&gt;&lt;span class="lineno"&gt;1388 &lt;/span&gt;&lt;span class="sd"&gt;    Raise from within a transition method to switch to another state.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1389"&gt;&lt;span class="lineno"&gt;1389 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1390"&gt;&lt;span class="lineno"&gt;1390 &lt;/span&gt;&lt;span class="sd"&gt;    Raise with one or two arguments: new state name, and an optional new&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1391"&gt;&lt;span class="lineno"&gt;1391 &lt;/span&gt;&lt;span class="sd"&gt;    transition name.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1392"&gt;&lt;span class="lineno"&gt;1392 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1393"&gt;&lt;span class="lineno"&gt;1393 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1394"&gt;&lt;span class="lineno"&gt;1394 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1395"&gt;&lt;span class="lineno"&gt;1395 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;string2lines&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;astring&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tab_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;convert_whitespace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1396"&gt;&lt;span class="lineno"&gt;1396 &lt;/span&gt;                 &lt;span class="n"&gt;whitespace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;compile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;[&lt;/span&gt;&lt;span class="se"&gt;\v\f&lt;/span&gt;&lt;span class="s1"&gt;]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1397"&gt;&lt;span class="lineno"&gt;1397 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1398"&gt;&lt;span class="lineno"&gt;1398 &lt;/span&gt;&lt;span class="sd"&gt;    Return a list of one-line strings with tabs expanded, no newlines, and&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1399"&gt;&lt;span class="lineno"&gt;1399 &lt;/span&gt;&lt;span class="sd"&gt;    trailing whitespace stripped.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1400"&gt;&lt;span class="lineno"&gt;1400 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1401"&gt;&lt;span class="lineno"&gt;1401 &lt;/span&gt;&lt;span class="sd"&gt;    Each tab is expanded with between 1 and `tab_width` spaces, so that the&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1402"&gt;&lt;span class="lineno"&gt;1402 &lt;/span&gt;&lt;span class="sd"&gt;    next character&amp;#39;s index becomes a multiple of `tab_width` (8 by default).&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1403"&gt;&lt;span class="lineno"&gt;1403 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1404"&gt;&lt;span class="lineno"&gt;1404 &lt;/span&gt;&lt;span class="sd"&gt;    Parameters:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1405"&gt;&lt;span class="lineno"&gt;1405 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1406"&gt;&lt;span class="lineno"&gt;1406 &lt;/span&gt;&lt;span class="sd"&gt;    - `astring`: a multi-line string.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1407"&gt;&lt;span class="lineno"&gt;1407 &lt;/span&gt;&lt;span class="sd"&gt;    - `tab_width`: the number of columns between tab stops.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1408"&gt;&lt;span class="lineno"&gt;1408 &lt;/span&gt;&lt;span class="sd"&gt;    - `convert_whitespace`: convert form feeds and vertical tabs to spaces?&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1409"&gt;&lt;span class="lineno"&gt;1409 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1410"&gt;&lt;span class="lineno"&gt;1410 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;convert_whitespace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1411"&gt;&lt;span class="lineno"&gt;1411 &lt;/span&gt;        &lt;span class="n"&gt;astring&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;whitespace&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;astring&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1412"&gt;&lt;span class="lineno"&gt;1412 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expandtabs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tab_width&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rstrip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;astring&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitlines&lt;/span&gt;&lt;span class="p"&gt;()]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1413"&gt;&lt;span class="lineno"&gt;1413 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1414"&gt;&lt;span class="lineno"&gt;1414 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;_exception_data&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1415"&gt;&lt;span class="lineno"&gt;1415 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1416"&gt;&lt;span class="lineno"&gt;1416 &lt;/span&gt;&lt;span class="sd"&gt;    Return exception information:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1417"&gt;&lt;span class="lineno"&gt;1417 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1418"&gt;&lt;span class="lineno"&gt;1418 &lt;/span&gt;&lt;span class="sd"&gt;    - the exception&amp;#39;s class name;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1419"&gt;&lt;span class="lineno"&gt;1419 &lt;/span&gt;&lt;span class="sd"&gt;    - the exception object;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1420"&gt;&lt;span class="lineno"&gt;1420 &lt;/span&gt;&lt;span class="sd"&gt;    - the name of the file containing the offending code;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1421"&gt;&lt;span class="lineno"&gt;1421 &lt;/span&gt;&lt;span class="sd"&gt;    - the line number of the offending code;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1422"&gt;&lt;span class="lineno"&gt;1422 &lt;/span&gt;&lt;span class="sd"&gt;    - the function name of the offending code.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1423"&gt;&lt;span class="lineno"&gt;1423 &lt;/span&gt;&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1424"&gt;&lt;span class="lineno"&gt;1424 &lt;/span&gt;    &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;traceback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exc_info&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1425"&gt;&lt;span class="lineno"&gt;1425 &lt;/span&gt;    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;traceback&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tb_next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1426"&gt;&lt;span class="lineno"&gt;1426 &lt;/span&gt;        &lt;span class="n"&gt;traceback&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;traceback&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tb_next&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1427"&gt;&lt;span class="lineno"&gt;1427 &lt;/span&gt;    &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;traceback&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tb_frame&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f_code&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1428"&gt;&lt;span class="lineno"&gt;1428 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;co_filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;traceback&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tb_lineno&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-1429"&gt;&lt;span class="lineno"&gt;1429 &lt;/span&gt;            &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;co_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
</content><category term="state-machine"></category><category term="markup"></category><category term="rst"></category></entry><entry><title>Meltdown test</title><link href="https://derez.github.io/2018/meltdown.html" rel="alternate"></link><published>2018-02-03T00:00:00-05:00</published><updated>2018-02-03T00:00:00-05:00</updated><author><name>Danny Walker</name></author><id>tag:derez.github.io,2018-02-03:/2018/meltdown.html</id><summary type="html">&lt;p class="first last"&gt;Meltdown&amp;nbsp;test&lt;/p&gt;
</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span id="row-1"&gt;&lt;span class="lineno"&gt;  1 &lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-2"&gt;&lt;span class="lineno"&gt;  2 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-3"&gt;&lt;span class="lineno"&gt;  3 &lt;/span&gt;&lt;span class="c1"&gt;# Copyright (C) 2018  Red Hat, Inc.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-4"&gt;&lt;span class="lineno"&gt;  4 &lt;/span&gt;&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-5"&gt;&lt;span class="lineno"&gt;  5 &lt;/span&gt;&lt;span class="c1"&gt;# This program is free software: you can redistribute it and/or modify&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-6"&gt;&lt;span class="lineno"&gt;  6 &lt;/span&gt;&lt;span class="c1"&gt;# it under the terms of the GNU General Public License as published by&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-7"&gt;&lt;span class="lineno"&gt;  7 &lt;/span&gt;&lt;span class="c1"&gt;# the Free Software Foundation, either version 3 of the License, or&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-8"&gt;&lt;span class="lineno"&gt;  8 &lt;/span&gt;&lt;span class="c1"&gt;# (at your option) any later version.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-9"&gt;&lt;span class="lineno"&gt;  9 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-10"&gt;&lt;span class="lineno"&gt; 10 &lt;/span&gt;&lt;span class="c1"&gt;# Version: 2.1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-11"&gt;&lt;span class="lineno"&gt; 11 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-12"&gt;&lt;span class="lineno"&gt; 12 &lt;/span&gt;&lt;span class="c1"&gt;# Warning! Be sure to download the latest version of this script from its primary source:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-13"&gt;&lt;span class="lineno"&gt; 13 &lt;/span&gt;&lt;span class="c1"&gt;# https://access.redhat.com/security/vulnerabilities/speculativeexecution&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-14"&gt;&lt;span class="lineno"&gt; 14 &lt;/span&gt;&lt;span class="c1"&gt;# DO NOT blindly trust any internet sources and NEVER do `curl something | bash`!&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-15"&gt;&lt;span class="lineno"&gt; 15 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-16"&gt;&lt;span class="lineno"&gt; 16 &lt;/span&gt;&lt;span class="c1"&gt;# This script is meant for simple detection of the vulnerability. Feel free to modify it for your&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-17"&gt;&lt;span class="lineno"&gt; 17 &lt;/span&gt;&lt;span class="c1"&gt;# environment or needs. For more advanced detection, consider Red Hat Insights:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-18"&gt;&lt;span class="lineno"&gt; 18 &lt;/span&gt;&lt;span class="c1"&gt;# https://access.redhat.com/products/red-hat-insights#getstarted&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-19"&gt;&lt;span class="lineno"&gt; 19 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-20"&gt;&lt;span class="lineno"&gt; 20 &lt;/span&gt;&lt;span class="c1"&gt;# Checking against the list of vulnerable packages is necessary because of the way how features&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-21"&gt;&lt;span class="lineno"&gt; 21 &lt;/span&gt;&lt;span class="c1"&gt;# are back-ported to older versions of packages in various channels.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-22"&gt;&lt;span class="lineno"&gt; 22 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-23"&gt;&lt;span class="lineno"&gt; 23 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-24"&gt;&lt;span class="lineno"&gt; 24 &lt;/span&gt;basic_args&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-25"&gt;&lt;span class="lineno"&gt; 25 &lt;/span&gt;    &lt;span class="c1"&gt;# Parses basic commandline arguments and sets basic environment.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-26"&gt;&lt;span class="lineno"&gt; 26 &lt;/span&gt;    &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-27"&gt;&lt;span class="lineno"&gt; 27 &lt;/span&gt;    &lt;span class="c1"&gt;# Args:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-28"&gt;&lt;span class="lineno"&gt; 28 &lt;/span&gt;    &lt;span class="c1"&gt;#     parameters - an array of commandline arguments&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-29"&gt;&lt;span class="lineno"&gt; 29 &lt;/span&gt;    &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-30"&gt;&lt;span class="lineno"&gt; 30 &lt;/span&gt;    &lt;span class="c1"&gt;# Side effects:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-31"&gt;&lt;span class="lineno"&gt; 31 &lt;/span&gt;    &lt;span class="c1"&gt;#     Exits if --help parameters is used&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-32"&gt;&lt;span class="lineno"&gt; 32 &lt;/span&gt;    &lt;span class="c1"&gt;#     Sets COLOR constants and debug variable&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-33"&gt;&lt;span class="lineno"&gt; 33 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-34"&gt;&lt;span class="lineno"&gt; 34 &lt;/span&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;parameters&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-35"&gt;&lt;span class="lineno"&gt; 35 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-36"&gt;&lt;span class="lineno"&gt; 36 &lt;/span&gt;    &lt;span class="nv"&gt;RED&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\033[1;31m&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-37"&gt;&lt;span class="lineno"&gt; 37 &lt;/span&gt;    &lt;span class="nv"&gt;YELLOW&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\033[1;33m&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-38"&gt;&lt;span class="lineno"&gt; 38 &lt;/span&gt;    &lt;span class="nv"&gt;GREEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\033[1;32m&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-39"&gt;&lt;span class="lineno"&gt; 39 &lt;/span&gt;    &lt;span class="nv"&gt;BOLD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\033[1m&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-40"&gt;&lt;span class="lineno"&gt; 40 &lt;/span&gt;    &lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;\033[0m&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-41"&gt;&lt;span class="lineno"&gt; 41 &lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; parameter in &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;[@]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-42"&gt;&lt;span class="lineno"&gt; 42 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-h&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--help&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-43"&gt;&lt;span class="lineno"&gt; 43 &lt;/span&gt;            &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt; basename &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt; [-n | --no-colors] [-d | --debug]&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-44"&gt;&lt;span class="lineno"&gt; 44 &lt;/span&gt;            &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-45"&gt;&lt;span class="lineno"&gt; 45 &lt;/span&gt;        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-n&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--no-colors&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-46"&gt;&lt;span class="lineno"&gt; 46 &lt;/span&gt;            &lt;span class="nv"&gt;RED&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-47"&gt;&lt;span class="lineno"&gt; 47 &lt;/span&gt;            &lt;span class="nv"&gt;YELLOW&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-48"&gt;&lt;span class="lineno"&gt; 48 &lt;/span&gt;            &lt;span class="nv"&gt;GREEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-49"&gt;&lt;span class="lineno"&gt; 49 &lt;/span&gt;            &lt;span class="nv"&gt;BOLD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-50"&gt;&lt;span class="lineno"&gt; 50 &lt;/span&gt;            &lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-51"&gt;&lt;span class="lineno"&gt; 51 &lt;/span&gt;        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-d&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$parameter&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;--debug&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-52"&gt;&lt;span class="lineno"&gt; 52 &lt;/span&gt;            &lt;span class="nv"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-53"&gt;&lt;span class="lineno"&gt; 53 &lt;/span&gt;        &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-54"&gt;&lt;span class="lineno"&gt; 54 &lt;/span&gt;    &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-55"&gt;&lt;span class="lineno"&gt; 55 &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-56"&gt;&lt;span class="lineno"&gt; 56 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-57"&gt;&lt;span class="lineno"&gt; 57 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-58"&gt;&lt;span class="lineno"&gt; 58 &lt;/span&gt;basic_reqs&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-59"&gt;&lt;span class="lineno"&gt; 59 &lt;/span&gt;    &lt;span class="c1"&gt;# Prints common disclaimer and checks basic requirements.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-60"&gt;&lt;span class="lineno"&gt; 60 &lt;/span&gt;    &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-61"&gt;&lt;span class="lineno"&gt; 61 &lt;/span&gt;    &lt;span class="c1"&gt;# Args:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-62"&gt;&lt;span class="lineno"&gt; 62 &lt;/span&gt;    &lt;span class="c1"&gt;#     CVE - string printed in the disclaimer&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-63"&gt;&lt;span class="lineno"&gt; 63 &lt;/span&gt;    &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-64"&gt;&lt;span class="lineno"&gt; 64 &lt;/span&gt;    &lt;span class="c1"&gt;# Side effects:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-65"&gt;&lt;span class="lineno"&gt; 65 &lt;/span&gt;    &lt;span class="c1"&gt;#     Exits when &amp;#39;rpm&amp;#39; command is not available&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-66"&gt;&lt;span class="lineno"&gt; 66 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-67"&gt;&lt;span class="lineno"&gt; 67 &lt;/span&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;CVE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-68"&gt;&lt;span class="lineno"&gt; 68 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-69"&gt;&lt;span class="lineno"&gt; 69 &lt;/span&gt;    &lt;span class="c1"&gt;# Disclaimer&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-70"&gt;&lt;span class="lineno"&gt; 70 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-71"&gt;&lt;span class="lineno"&gt; 71 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BOLD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;This script is primarily designed to detect &lt;/span&gt;&lt;span class="nv"&gt;$CVE&lt;/span&gt;&lt;span class="s2"&gt; on supported&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-72"&gt;&lt;span class="lineno"&gt; 72 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;Red Hat Enterprise Linux systems and kernel packages.&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-73"&gt;&lt;span class="lineno"&gt; 73 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;Result may be inaccurate for other RPM based systems.&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-74"&gt;&lt;span class="lineno"&gt; 74 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-75"&gt;&lt;span class="lineno"&gt; 75 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-76"&gt;&lt;span class="lineno"&gt; 76 &lt;/span&gt;    &lt;span class="c1"&gt;# RPM is required&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-77"&gt;&lt;span class="lineno"&gt; 77 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; ! &lt;span class="nb"&gt;command&lt;/span&gt; -v rpm &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&amp;gt; /dev/null&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-78"&gt;&lt;span class="lineno"&gt; 78 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;#39;rpm&amp;#39; command is required, but not installed. Exiting.&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-79"&gt;&lt;span class="lineno"&gt; 79 &lt;/span&gt;        &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-80"&gt;&lt;span class="lineno"&gt; 80 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-81"&gt;&lt;span class="lineno"&gt; 81 &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-82"&gt;&lt;span class="lineno"&gt; 82 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-83"&gt;&lt;span class="lineno"&gt; 83 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-84"&gt;&lt;span class="lineno"&gt; 84 &lt;/span&gt;check_supported_kernel&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-85"&gt;&lt;span class="lineno"&gt; 85 &lt;/span&gt;    &lt;span class="c1"&gt;# Checks if running kernel is supported.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-86"&gt;&lt;span class="lineno"&gt; 86 &lt;/span&gt;    &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-87"&gt;&lt;span class="lineno"&gt; 87 &lt;/span&gt;    &lt;span class="c1"&gt;# Args:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-88"&gt;&lt;span class="lineno"&gt; 88 &lt;/span&gt;    &lt;span class="c1"&gt;#     running_kernel - kernel string as returned by &amp;#39;uname -r&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-89"&gt;&lt;span class="lineno"&gt; 89 &lt;/span&gt;    &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-90"&gt;&lt;span class="lineno"&gt; 90 &lt;/span&gt;    &lt;span class="c1"&gt;# Side effects:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-91"&gt;&lt;span class="lineno"&gt; 91 &lt;/span&gt;    &lt;span class="c1"&gt;#     Exits when running kernel is obviously not supported&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-92"&gt;&lt;span class="lineno"&gt; 92 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-93"&gt;&lt;span class="lineno"&gt; 93 &lt;/span&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;running_kernel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-94"&gt;&lt;span class="lineno"&gt; 94 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-95"&gt;&lt;span class="lineno"&gt; 95 &lt;/span&gt;    &lt;span class="c1"&gt;# Check supported platform&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-96"&gt;&lt;span class="lineno"&gt; 96 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$running_kernel&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; !&lt;span class="o"&gt;=&lt;/span&gt; *&lt;span class="s2"&gt;&amp;quot;.el&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;-7&lt;span class="o"&gt;]&lt;/span&gt;* &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-97"&gt;&lt;span class="lineno"&gt; 97 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;This script is meant to be used only on Red Hat Enterprise Linux 5, 6 and 7.&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-98"&gt;&lt;span class="lineno"&gt; 98 &lt;/span&gt;        &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-99"&gt;&lt;span class="lineno"&gt; 99 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-100"&gt;&lt;span class="lineno"&gt;100 &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-101"&gt;&lt;span class="lineno"&gt;101 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-102"&gt;&lt;span class="lineno"&gt;102 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-103"&gt;&lt;span class="lineno"&gt;103 &lt;/span&gt;get_rhel&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-104"&gt;&lt;span class="lineno"&gt;104 &lt;/span&gt;    &lt;span class="c1"&gt;# Gets RHEL number.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-105"&gt;&lt;span class="lineno"&gt;105 &lt;/span&gt;    &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-106"&gt;&lt;span class="lineno"&gt;106 &lt;/span&gt;    &lt;span class="c1"&gt;# Args:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-107"&gt;&lt;span class="lineno"&gt;107 &lt;/span&gt;    &lt;span class="c1"&gt;#     running_kernel - kernel string as returned by &amp;#39;uname -r&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-108"&gt;&lt;span class="lineno"&gt;108 &lt;/span&gt;    &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-109"&gt;&lt;span class="lineno"&gt;109 &lt;/span&gt;    &lt;span class="c1"&gt;# Prints:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-110"&gt;&lt;span class="lineno"&gt;110 &lt;/span&gt;    &lt;span class="c1"&gt;#     RHEL number, e.g. &amp;#39;5&amp;#39;, &amp;#39;6&amp;#39;, or &amp;#39;7&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-111"&gt;&lt;span class="lineno"&gt;111 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-112"&gt;&lt;span class="lineno"&gt;112 &lt;/span&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;running_kernel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-113"&gt;&lt;span class="lineno"&gt;113 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-114"&gt;&lt;span class="lineno"&gt;114 &lt;/span&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;rhel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt; sed -r -n &lt;span class="s1"&gt;&amp;#39;s/^.*el([[:digit:]]).*$/\1/p&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$running_kernel&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-115"&gt;&lt;span class="lineno"&gt;115 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$rhel&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-116"&gt;&lt;span class="lineno"&gt;116 &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-117"&gt;&lt;span class="lineno"&gt;117 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-118"&gt;&lt;span class="lineno"&gt;118 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-119"&gt;&lt;span class="lineno"&gt;119 &lt;/span&gt;check_cpu_vendor&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-120"&gt;&lt;span class="lineno"&gt;120 &lt;/span&gt;    &lt;span class="c1"&gt;# Checks for supported CPU vendor.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-121"&gt;&lt;span class="lineno"&gt;121 &lt;/span&gt;    &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-122"&gt;&lt;span class="lineno"&gt;122 &lt;/span&gt;    &lt;span class="c1"&gt;# Prints:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-123"&gt;&lt;span class="lineno"&gt;123 &lt;/span&gt;    &lt;span class="c1"&gt;#     &amp;#39;Intel&amp;#39; or &amp;#39;AMD&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-124"&gt;&lt;span class="lineno"&gt;124 &lt;/span&gt;    &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-125"&gt;&lt;span class="lineno"&gt;125 &lt;/span&gt;    &lt;span class="c1"&gt;# Returns:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-126"&gt;&lt;span class="lineno"&gt;126 &lt;/span&gt;    &lt;span class="c1"&gt;#     0 if supported CPU vendor found, otherwise 1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-127"&gt;&lt;span class="lineno"&gt;127 &lt;/span&gt;    &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-128"&gt;&lt;span class="lineno"&gt;128 &lt;/span&gt;    &lt;span class="c1"&gt;# Notes:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-129"&gt;&lt;span class="lineno"&gt;129 &lt;/span&gt;    &lt;span class="c1"&gt;#     MOCK_CPU_INFO_PATH can be used to mock /proc/cpuinfo file&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-130"&gt;&lt;span class="lineno"&gt;130 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-131"&gt;&lt;span class="lineno"&gt;131 &lt;/span&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;cpuinfo&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MOCK_CPU_INFO_PATH&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="p"&gt;/proc/cpuinfo&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-132"&gt;&lt;span class="lineno"&gt;132 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-133"&gt;&lt;span class="lineno"&gt;133 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; grep --quiet &lt;span class="s2"&gt;&amp;quot;GenuineIntel&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$cpuinfo&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-134"&gt;&lt;span class="lineno"&gt;134 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Intel&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-135"&gt;&lt;span class="lineno"&gt;135 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-136"&gt;&lt;span class="lineno"&gt;136 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-137"&gt;&lt;span class="lineno"&gt;137 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; grep --quiet &lt;span class="s2"&gt;&amp;quot;AuthenticAMD&amp;quot;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$cpuinfo&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-138"&gt;&lt;span class="lineno"&gt;138 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;AMD&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-139"&gt;&lt;span class="lineno"&gt;139 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-140"&gt;&lt;span class="lineno"&gt;140 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-141"&gt;&lt;span class="lineno"&gt;141 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-142"&gt;&lt;span class="lineno"&gt;142 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-143"&gt;&lt;span class="lineno"&gt;143 &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-144"&gt;&lt;span class="lineno"&gt;144 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-145"&gt;&lt;span class="lineno"&gt;145 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-146"&gt;&lt;span class="lineno"&gt;146 &lt;/span&gt;gather_info&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-147"&gt;&lt;span class="lineno"&gt;147 &lt;/span&gt;    &lt;span class="c1"&gt;# Gathers all available information and stores it in global variables.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-148"&gt;&lt;span class="lineno"&gt;148 &lt;/span&gt;    &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-149"&gt;&lt;span class="lineno"&gt;149 &lt;/span&gt;    &lt;span class="c1"&gt;# Side effects:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-150"&gt;&lt;span class="lineno"&gt;150 &lt;/span&gt;    &lt;span class="c1"&gt;#     Sets many global boolean flags&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-151"&gt;&lt;span class="lineno"&gt;151 &lt;/span&gt;    &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-152"&gt;&lt;span class="lineno"&gt;152 &lt;/span&gt;    &lt;span class="c1"&gt;# Notes:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-153"&gt;&lt;span class="lineno"&gt;153 &lt;/span&gt;    &lt;span class="c1"&gt;#     MOCK_DEBUG_X86_PATH can be used to mock /sys/kernel/debug/x86 directory&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-154"&gt;&lt;span class="lineno"&gt;154 &lt;/span&gt;    &lt;span class="c1"&gt;#     MOCK_CMDLINE_PATH can be used to mock /proc/cmdline file&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-155"&gt;&lt;span class="lineno"&gt;155 &lt;/span&gt;    &lt;span class="c1"&gt;#     MOCK_EUID can be used to mock EUID variable&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-156"&gt;&lt;span class="lineno"&gt;156 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-157"&gt;&lt;span class="lineno"&gt;157 &lt;/span&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;debug_x86&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MOCK_DEBUG_X86_PATH&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="p"&gt;/sys/kernel/debug/x86&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-158"&gt;&lt;span class="lineno"&gt;158 &lt;/span&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;cmdline_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MOCK_CMDLINE_PATH&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="p"&gt;/proc/cmdline&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-159"&gt;&lt;span class="lineno"&gt;159 &lt;/span&gt;    &lt;span class="nb"&gt;local&lt;/span&gt; &lt;span class="nv"&gt;euid&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;MOCK_EUID&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="nv"&gt;$EUID&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-160"&gt;&lt;span class="lineno"&gt;160 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-161"&gt;&lt;span class="lineno"&gt;161 &lt;/span&gt;    &lt;span class="c1"&gt;# Am I root?&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-162"&gt;&lt;span class="lineno"&gt;162 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; &lt;span class="nv"&gt;euid&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-163"&gt;&lt;span class="lineno"&gt;163 &lt;/span&gt;        &lt;span class="nv"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-164"&gt;&lt;span class="lineno"&gt;164 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-165"&gt;&lt;span class="lineno"&gt;165 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-166"&gt;&lt;span class="lineno"&gt;166 &lt;/span&gt;    &lt;span class="c1"&gt;# Is debugfs mounted?&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-167"&gt;&lt;span class="lineno"&gt;167 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; mount &lt;span class="p"&gt;|&lt;/span&gt; grep --quiet debugfs&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-168"&gt;&lt;span class="lineno"&gt;168 &lt;/span&gt;        &lt;span class="nv"&gt;mounted_debugfs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-169"&gt;&lt;span class="lineno"&gt;169 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-170"&gt;&lt;span class="lineno"&gt;170 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-171"&gt;&lt;span class="lineno"&gt;171 &lt;/span&gt;    &lt;span class="c1"&gt;# Will fallback detection be needed?&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-172"&gt;&lt;span class="lineno"&gt;172 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; ! mounted_debugfs &lt;span class="o"&gt;||&lt;/span&gt; ! root &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-173"&gt;&lt;span class="lineno"&gt;173 &lt;/span&gt;        &lt;span class="nv"&gt;fallback_needed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-174"&gt;&lt;span class="lineno"&gt;174 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-175"&gt;&lt;span class="lineno"&gt;175 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-176"&gt;&lt;span class="lineno"&gt;176 &lt;/span&gt;    &lt;span class="c1"&gt;# Are all debug files accessible?&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-177"&gt;&lt;span class="lineno"&gt;177 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; -r &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;debug_x86&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/pti_enabled&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; -r &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;debug_x86&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/ibpb_enabled&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; -r &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;debug_x86&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/ibrs_enabled&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-178"&gt;&lt;span class="lineno"&gt;178 &lt;/span&gt;        &lt;span class="nv"&gt;all_debug_files&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-179"&gt;&lt;span class="lineno"&gt;179 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-180"&gt;&lt;span class="lineno"&gt;180 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-181"&gt;&lt;span class="lineno"&gt;181 &lt;/span&gt;    &lt;span class="c1"&gt;# Read features from debugfs&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-182"&gt;&lt;span class="lineno"&gt;182 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; all_debug_files &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-183"&gt;&lt;span class="lineno"&gt;183 &lt;/span&gt;        &lt;span class="nv"&gt;new_kernel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-184"&gt;&lt;span class="lineno"&gt;184 &lt;/span&gt;        &lt;span class="nv"&gt;pti_debugfs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt; &amp;lt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;debug_x86&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/pti_enabled&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-185"&gt;&lt;span class="lineno"&gt;185 &lt;/span&gt;        &lt;span class="nv"&gt;ibpb_debugfs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt; &amp;lt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;debug_x86&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/ibpb_enabled&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-186"&gt;&lt;span class="lineno"&gt;186 &lt;/span&gt;        &lt;span class="nv"&gt;ibrs_debugfs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt; &amp;lt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;debug_x86&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/ibrs_enabled&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-187"&gt;&lt;span class="lineno"&gt;187 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-188"&gt;&lt;span class="lineno"&gt;188 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-189"&gt;&lt;span class="lineno"&gt;189 &lt;/span&gt;    &lt;span class="c1"&gt;# Read features from dmesg&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-190"&gt;&lt;span class="lineno"&gt;190 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; ! dmesg &lt;span class="p"&gt;|&lt;/span&gt; grep --quiet &lt;span class="s1"&gt;&amp;#39;Linux.version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-191"&gt;&lt;span class="lineno"&gt;191 &lt;/span&gt;        &lt;span class="nv"&gt;dmesg_wrapped&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-192"&gt;&lt;span class="lineno"&gt;192 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-193"&gt;&lt;span class="lineno"&gt;193 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-194"&gt;&lt;span class="lineno"&gt;194 &lt;/span&gt;    &lt;span class="c1"&gt;# These will not appear if disabled from commandline&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-195"&gt;&lt;span class="lineno"&gt;195 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; dmesg &lt;span class="p"&gt;|&lt;/span&gt; grep --quiet -e &lt;span class="s1"&gt;&amp;#39;x86/pti: Unmapping kernel while in userspace&amp;#39;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-196"&gt;&lt;span class="lineno"&gt;196 &lt;/span&gt;                            -e &lt;span class="s1"&gt;&amp;#39;x86/pti: Kernel page table isolation enabled&amp;#39;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-197"&gt;&lt;span class="lineno"&gt;197 &lt;/span&gt;                            -e &lt;span class="s1"&gt;&amp;#39;x86/pti: Xen PV detected, disabling&amp;#39;&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-198"&gt;&lt;span class="lineno"&gt;198 &lt;/span&gt;                            -e &lt;span class="s1"&gt;&amp;#39;x86/pti: Xen PV detected, disabling PTI protection&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-199"&gt;&lt;span class="lineno"&gt;199 &lt;/span&gt;        &lt;span class="nv"&gt;new_kernel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-200"&gt;&lt;span class="lineno"&gt;200 &lt;/span&gt;        &lt;span class="nv"&gt;pti_dmesg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-201"&gt;&lt;span class="lineno"&gt;201 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-202"&gt;&lt;span class="lineno"&gt;202 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-203"&gt;&lt;span class="lineno"&gt;203 &lt;/span&gt;    &lt;span class="c1"&gt;# These will appear if disabled from commandline&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-204"&gt;&lt;span class="lineno"&gt;204 &lt;/span&gt;    &lt;span class="nv"&gt;line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt; dmesg &lt;span class="p"&gt;|&lt;/span&gt; tac &lt;span class="p"&gt;|&lt;/span&gt; grep --max-count &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;FEATURE SPEC_CTRL&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Check last&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-205"&gt;&lt;span class="lineno"&gt;205 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-206"&gt;&lt;span class="lineno"&gt;206 &lt;/span&gt;        &lt;span class="nv"&gt;new_kernel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-207"&gt;&lt;span class="lineno"&gt;207 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; ! grep --quiet &lt;span class="s1"&gt;&amp;#39;Not Present&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-208"&gt;&lt;span class="lineno"&gt;208 &lt;/span&gt;            &lt;span class="nv"&gt;ibrs_dmesg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-209"&gt;&lt;span class="lineno"&gt;209 &lt;/span&gt;            &lt;span class="nv"&gt;hw_support&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-210"&gt;&lt;span class="lineno"&gt;210 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-211"&gt;&lt;span class="lineno"&gt;211 &lt;/span&gt;            &lt;span class="nv"&gt;not_ibrs_dmesg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-212"&gt;&lt;span class="lineno"&gt;212 &lt;/span&gt;        &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-213"&gt;&lt;span class="lineno"&gt;213 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-214"&gt;&lt;span class="lineno"&gt;214 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-215"&gt;&lt;span class="lineno"&gt;215 &lt;/span&gt;    &lt;span class="nv"&gt;line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt; dmesg &lt;span class="p"&gt;|&lt;/span&gt; tac &lt;span class="p"&gt;|&lt;/span&gt; grep --max-count &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;FEATURE IBPB_SUPPORT&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;   &lt;span class="c1"&gt;# Check last&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-216"&gt;&lt;span class="lineno"&gt;216 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-217"&gt;&lt;span class="lineno"&gt;217 &lt;/span&gt;        &lt;span class="nv"&gt;new_kernel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-218"&gt;&lt;span class="lineno"&gt;218 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; ! grep --quiet &lt;span class="s1"&gt;&amp;#39;Not Present&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-219"&gt;&lt;span class="lineno"&gt;219 &lt;/span&gt;            &lt;span class="nv"&gt;ibpb_dmesg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-220"&gt;&lt;span class="lineno"&gt;220 &lt;/span&gt;            &lt;span class="nv"&gt;hw_support&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-221"&gt;&lt;span class="lineno"&gt;221 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-222"&gt;&lt;span class="lineno"&gt;222 &lt;/span&gt;            &lt;span class="nv"&gt;not_ibpb_dmesg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-223"&gt;&lt;span class="lineno"&gt;223 &lt;/span&gt;        &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-224"&gt;&lt;span class="lineno"&gt;224 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-225"&gt;&lt;span class="lineno"&gt;225 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-226"&gt;&lt;span class="lineno"&gt;226 &lt;/span&gt;    &lt;span class="c1"&gt;# Read commandline&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-227"&gt;&lt;span class="lineno"&gt;227 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; grep --quiet &lt;span class="s1"&gt;&amp;#39;nopti&amp;#39;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$cmdline_path&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-228"&gt;&lt;span class="lineno"&gt;228 &lt;/span&gt;        &lt;span class="nv"&gt;nopti&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-229"&gt;&lt;span class="lineno"&gt;229 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-230"&gt;&lt;span class="lineno"&gt;230 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; grep --quiet &lt;span class="s1"&gt;&amp;#39;noibrs&amp;#39;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$cmdline_path&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-231"&gt;&lt;span class="lineno"&gt;231 &lt;/span&gt;        &lt;span class="nv"&gt;noibrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-232"&gt;&lt;span class="lineno"&gt;232 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-233"&gt;&lt;span class="lineno"&gt;233 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; grep --quiet &lt;span class="s1"&gt;&amp;#39;noibpb&amp;#39;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$cmdline_path&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-234"&gt;&lt;span class="lineno"&gt;234 &lt;/span&gt;        &lt;span class="nv"&gt;noibpb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-235"&gt;&lt;span class="lineno"&gt;235 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-236"&gt;&lt;span class="lineno"&gt;236 &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-237"&gt;&lt;span class="lineno"&gt;237 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-238"&gt;&lt;span class="lineno"&gt;238 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-239"&gt;&lt;span class="lineno"&gt;239 &lt;/span&gt;check_variants&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-240"&gt;&lt;span class="lineno"&gt;240 &lt;/span&gt;    &lt;span class="c1"&gt;# Checks which variants are mitigated based on many global boolean flags.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-241"&gt;&lt;span class="lineno"&gt;241 &lt;/span&gt;    &lt;span class="c1"&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-242"&gt;&lt;span class="lineno"&gt;242 &lt;/span&gt;    &lt;span class="c1"&gt;# Side effects:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-243"&gt;&lt;span class="lineno"&gt;243 &lt;/span&gt;    &lt;span class="c1"&gt;#     Sets global variables variant_1, variant_2, variant_3.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-244"&gt;&lt;span class="lineno"&gt;244 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-245"&gt;&lt;span class="lineno"&gt;245 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; new_kernel &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-246"&gt;&lt;span class="lineno"&gt;246 &lt;/span&gt;        &lt;span class="nv"&gt;variant_1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mitigated&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-247"&gt;&lt;span class="lineno"&gt;247 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-248"&gt;&lt;span class="lineno"&gt;248 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-249"&gt;&lt;span class="lineno"&gt;249 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$vendor&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Intel&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-250"&gt;&lt;span class="lineno"&gt;250 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; ! fallback_needed &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-251"&gt;&lt;span class="lineno"&gt;251 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; &lt;span class="nv"&gt;pti_debugfs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;ibrs_debugfs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;ibpb_debugfs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-252"&gt;&lt;span class="lineno"&gt;252 &lt;/span&gt;                &lt;span class="nv"&gt;variant_2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mitigated&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-253"&gt;&lt;span class="lineno"&gt;253 &lt;/span&gt;                &lt;span class="nv"&gt;variant_3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mitigated&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-254"&gt;&lt;span class="lineno"&gt;254 &lt;/span&gt;            &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-255"&gt;&lt;span class="lineno"&gt;255 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; &lt;span class="nv"&gt;pti_debugfs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;ibrs_debugfs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;ibpb_debugfs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-256"&gt;&lt;span class="lineno"&gt;256 &lt;/span&gt;                &lt;span class="nv"&gt;variant_2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mitigated&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-257"&gt;&lt;span class="lineno"&gt;257 &lt;/span&gt;                &lt;span class="nv"&gt;variant_3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mitigated&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-258"&gt;&lt;span class="lineno"&gt;258 &lt;/span&gt;            &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-259"&gt;&lt;span class="lineno"&gt;259 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; &lt;span class="nv"&gt;pti_debugfs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;ibrs_debugfs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;ibpb_debugfs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-260"&gt;&lt;span class="lineno"&gt;260 &lt;/span&gt;                &lt;span class="nv"&gt;variant_3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mitigated&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-261"&gt;&lt;span class="lineno"&gt;261 &lt;/span&gt;            &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-262"&gt;&lt;span class="lineno"&gt;262 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-263"&gt;&lt;span class="lineno"&gt;263 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; ibrs_dmesg &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ibpb_dmesg &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ! noibrs &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ! noibpb &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-264"&gt;&lt;span class="lineno"&gt;264 &lt;/span&gt;                &lt;span class="nv"&gt;variant_2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mitigated&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-265"&gt;&lt;span class="lineno"&gt;265 &lt;/span&gt;            &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-266"&gt;&lt;span class="lineno"&gt;266 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; pti_dmesg &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-267"&gt;&lt;span class="lineno"&gt;267 &lt;/span&gt;                &lt;span class="nv"&gt;variant_3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mitigated&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-268"&gt;&lt;span class="lineno"&gt;268 &lt;/span&gt;            &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-269"&gt;&lt;span class="lineno"&gt;269 &lt;/span&gt;        &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-270"&gt;&lt;span class="lineno"&gt;270 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-271"&gt;&lt;span class="lineno"&gt;271 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-272"&gt;&lt;span class="lineno"&gt;272 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$vendor&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;AMD&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-273"&gt;&lt;span class="lineno"&gt;273 &lt;/span&gt;        &lt;span class="nv"&gt;variant_3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AMD is not vulnerable to this variant&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-274"&gt;&lt;span class="lineno"&gt;274 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-275"&gt;&lt;span class="lineno"&gt;275 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; ! fallback_needed &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-276"&gt;&lt;span class="lineno"&gt;276 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; &lt;span class="nv"&gt;pti_debugfs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;ibrs_debugfs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;ibpb_debugfs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-277"&gt;&lt;span class="lineno"&gt;277 &lt;/span&gt;                &lt;span class="nv"&gt;variant_2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mitigated&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-278"&gt;&lt;span class="lineno"&gt;278 &lt;/span&gt;            &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-279"&gt;&lt;span class="lineno"&gt;279 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; &lt;span class="nv"&gt;pti_debugfs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;ibrs_debugfs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nv"&gt;ibpb_debugfs&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-280"&gt;&lt;span class="lineno"&gt;280 &lt;/span&gt;                &lt;span class="nv"&gt;variant_2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mitigated&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-281"&gt;&lt;span class="lineno"&gt;281 &lt;/span&gt;            &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-282"&gt;&lt;span class="lineno"&gt;282 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-283"&gt;&lt;span class="lineno"&gt;283 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; ibpb_dmesg &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ! noibpb &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-284"&gt;&lt;span class="lineno"&gt;284 &lt;/span&gt;                &lt;span class="nv"&gt;variant_2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mitigated&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-285"&gt;&lt;span class="lineno"&gt;285 &lt;/span&gt;            &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-286"&gt;&lt;span class="lineno"&gt;286 &lt;/span&gt;        &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-287"&gt;&lt;span class="lineno"&gt;287 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-288"&gt;&lt;span class="lineno"&gt;288 &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-289"&gt;&lt;span class="lineno"&gt;289 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-290"&gt;&lt;span class="lineno"&gt;290 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-291"&gt;&lt;span class="lineno"&gt;291 &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BASH_SOURCE&lt;/span&gt;&lt;span class="p"&gt;[0]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-292"&gt;&lt;span class="lineno"&gt;292 &lt;/span&gt;    basic_args &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-293"&gt;&lt;span class="lineno"&gt;293 &lt;/span&gt;    basic_reqs &lt;span class="s2"&gt;&amp;quot;Spectre / Meltdown&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-294"&gt;&lt;span class="lineno"&gt;294 &lt;/span&gt;    &lt;span class="nv"&gt;running_kernel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt; uname -r &lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-295"&gt;&lt;span class="lineno"&gt;295 &lt;/span&gt;    check_supported_kernel &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$running_kernel&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-296"&gt;&lt;span class="lineno"&gt;296 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-297"&gt;&lt;span class="lineno"&gt;297 &lt;/span&gt;    &lt;span class="nv"&gt;rhel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt; get_rhel &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$running_kernel&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-298"&gt;&lt;span class="lineno"&gt;298 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; &lt;span class="nv"&gt;rhel&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-299"&gt;&lt;span class="lineno"&gt;299 &lt;/span&gt;        &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/sbin&amp;#39;&lt;/span&gt;:&lt;span class="nv"&gt;$PATH&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-300"&gt;&lt;span class="lineno"&gt;300 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-301"&gt;&lt;span class="lineno"&gt;301 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;RHEL5 is not supported by the script at the moment.&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-302"&gt;&lt;span class="lineno"&gt;302 &lt;/span&gt;        &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-303"&gt;&lt;span class="lineno"&gt;303 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-304"&gt;&lt;span class="lineno"&gt;304 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-305"&gt;&lt;span class="lineno"&gt;305 &lt;/span&gt;    &lt;span class="nv"&gt;vendor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt; check_cpu_vendor &lt;span class="k"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-306"&gt;&lt;span class="lineno"&gt;306 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-307"&gt;&lt;span class="lineno"&gt;307 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Your CPU vendor is not supported by the script at the moment.&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-308"&gt;&lt;span class="lineno"&gt;308 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Only Intel and AMD are supported for now.&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-309"&gt;&lt;span class="lineno"&gt;309 &lt;/span&gt;        &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-310"&gt;&lt;span class="lineno"&gt;310 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-311"&gt;&lt;span class="lineno"&gt;311 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-312"&gt;&lt;span class="lineno"&gt;312 &lt;/span&gt;    &lt;span class="nv"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-313"&gt;&lt;span class="lineno"&gt;313 &lt;/span&gt;    &lt;span class="nv"&gt;mounted_debugfs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-314"&gt;&lt;span class="lineno"&gt;314 &lt;/span&gt;    &lt;span class="nv"&gt;all_debug_files&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-315"&gt;&lt;span class="lineno"&gt;315 &lt;/span&gt;    &lt;span class="nv"&gt;fallback_needed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-316"&gt;&lt;span class="lineno"&gt;316 &lt;/span&gt;    &lt;span class="nv"&gt;pti_debugfs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-317"&gt;&lt;span class="lineno"&gt;317 &lt;/span&gt;    &lt;span class="nv"&gt;ibrs_debugfs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-318"&gt;&lt;span class="lineno"&gt;318 &lt;/span&gt;    &lt;span class="nv"&gt;ibpb_debugfs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-319"&gt;&lt;span class="lineno"&gt;319 &lt;/span&gt;    &lt;span class="nv"&gt;dmesg_wrapped&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-320"&gt;&lt;span class="lineno"&gt;320 &lt;/span&gt;    &lt;span class="nv"&gt;pti_dmesg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-321"&gt;&lt;span class="lineno"&gt;321 &lt;/span&gt;    &lt;span class="nv"&gt;ibrs_dmesg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-322"&gt;&lt;span class="lineno"&gt;322 &lt;/span&gt;    &lt;span class="nv"&gt;ibpb_dmesg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-323"&gt;&lt;span class="lineno"&gt;323 &lt;/span&gt;    &lt;span class="nv"&gt;not_ibrs_dmesg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-324"&gt;&lt;span class="lineno"&gt;324 &lt;/span&gt;    &lt;span class="nv"&gt;not_ibpb_dmesg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-325"&gt;&lt;span class="lineno"&gt;325 &lt;/span&gt;    &lt;span class="nv"&gt;new_kernel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-326"&gt;&lt;span class="lineno"&gt;326 &lt;/span&gt;    &lt;span class="nv"&gt;nopti&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-327"&gt;&lt;span class="lineno"&gt;327 &lt;/span&gt;    &lt;span class="nv"&gt;noibrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-328"&gt;&lt;span class="lineno"&gt;328 &lt;/span&gt;    &lt;span class="nv"&gt;noibpb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-329"&gt;&lt;span class="lineno"&gt;329 &lt;/span&gt;    &lt;span class="nv"&gt;hw_support&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-330"&gt;&lt;span class="lineno"&gt;330 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-331"&gt;&lt;span class="lineno"&gt;331 &lt;/span&gt;    &lt;span class="nv"&gt;variant_1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Vulnerable&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-332"&gt;&lt;span class="lineno"&gt;332 &lt;/span&gt;    &lt;span class="nv"&gt;variant_2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Vulnerable&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-333"&gt;&lt;span class="lineno"&gt;333 &lt;/span&gt;    &lt;span class="nv"&gt;variant_3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Vulnerable&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-334"&gt;&lt;span class="lineno"&gt;334 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-335"&gt;&lt;span class="lineno"&gt;335 &lt;/span&gt;    &lt;span class="c1"&gt;# Tests&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-336"&gt;&lt;span class="lineno"&gt;336 &lt;/span&gt;    gather_info
&lt;/span&gt;&lt;span id="row-337"&gt;&lt;span class="lineno"&gt;337 &lt;/span&gt;    check_variants
&lt;/span&gt;&lt;span id="row-338"&gt;&lt;span class="lineno"&gt;338 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-339"&gt;&lt;span class="lineno"&gt;339 &lt;/span&gt;    &lt;span class="c1"&gt;# Debug prints&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-340"&gt;&lt;span class="lineno"&gt;340 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$debug&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-341"&gt;&lt;span class="lineno"&gt;341 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;running_kernel = *&lt;/span&gt;&lt;span class="nv"&gt;$running_kernel&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-342"&gt;&lt;span class="lineno"&gt;342 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rhel = *&lt;/span&gt;&lt;span class="nv"&gt;$rhel&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-343"&gt;&lt;span class="lineno"&gt;343 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;vendor = *&lt;/span&gt;&lt;span class="nv"&gt;$vendor&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-344"&gt;&lt;span class="lineno"&gt;344 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;root = *&lt;/span&gt;&lt;span class="nv"&gt;$root&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-345"&gt;&lt;span class="lineno"&gt;345 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mounted_debugfs = *&lt;/span&gt;&lt;span class="nv"&gt;$mounted_debugfs&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-346"&gt;&lt;span class="lineno"&gt;346 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;all_debug_files = *&lt;/span&gt;&lt;span class="nv"&gt;$all_debug_files&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-347"&gt;&lt;span class="lineno"&gt;347 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;fallback_needed = *&lt;/span&gt;&lt;span class="nv"&gt;$fallback_needed&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-348"&gt;&lt;span class="lineno"&gt;348 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pti_debugfs = *&lt;/span&gt;&lt;span class="nv"&gt;$pti_debugfs&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-349"&gt;&lt;span class="lineno"&gt;349 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ibrs_debugfs = *&lt;/span&gt;&lt;span class="nv"&gt;$ibrs_debugfs&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-350"&gt;&lt;span class="lineno"&gt;350 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ibpb_debugfs = *&lt;/span&gt;&lt;span class="nv"&gt;$ibpb_debugfs&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-351"&gt;&lt;span class="lineno"&gt;351 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dmesg_wrapped = *&lt;/span&gt;&lt;span class="nv"&gt;$dmesg_wrapped&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-352"&gt;&lt;span class="lineno"&gt;352 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;pti_dmesg = *&lt;/span&gt;&lt;span class="nv"&gt;$pti_dmesg&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-353"&gt;&lt;span class="lineno"&gt;353 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ibrs_dmesg = *&lt;/span&gt;&lt;span class="nv"&gt;$ibrs_dmesg&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-354"&gt;&lt;span class="lineno"&gt;354 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ibpb_dmesg = *&lt;/span&gt;&lt;span class="nv"&gt;$ibpb_dmesg&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-355"&gt;&lt;span class="lineno"&gt;355 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;not_ibrs_dmesg = *&lt;/span&gt;&lt;span class="nv"&gt;$not_ibrs_dmesg&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-356"&gt;&lt;span class="lineno"&gt;356 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;not_ibpb_dmesg = *&lt;/span&gt;&lt;span class="nv"&gt;$not_ibpb_dmesg&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-357"&gt;&lt;span class="lineno"&gt;357 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;new_kernel = *&lt;/span&gt;&lt;span class="nv"&gt;$new_kernel&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-358"&gt;&lt;span class="lineno"&gt;358 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;nopti = *&lt;/span&gt;&lt;span class="nv"&gt;$nopti&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-359"&gt;&lt;span class="lineno"&gt;359 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;noibrs = *&lt;/span&gt;&lt;span class="nv"&gt;$noibrs&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-360"&gt;&lt;span class="lineno"&gt;360 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;noibpb = *&lt;/span&gt;&lt;span class="nv"&gt;$noibpb&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-361"&gt;&lt;span class="lineno"&gt;361 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hw_support = *&lt;/span&gt;&lt;span class="nv"&gt;$hw_support&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-362"&gt;&lt;span class="lineno"&gt;362 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;variant_1 = *&lt;/span&gt;&lt;span class="nv"&gt;$variant_1&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-363"&gt;&lt;span class="lineno"&gt;363 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;variant_2 = *&lt;/span&gt;&lt;span class="nv"&gt;$variant_2&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-364"&gt;&lt;span class="lineno"&gt;364 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;variant_3 = *&lt;/span&gt;&lt;span class="nv"&gt;$variant_3&lt;/span&gt;&lt;span class="s2"&gt;*&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-365"&gt;&lt;span class="lineno"&gt;365 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-366"&gt;&lt;span class="lineno"&gt;366 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-367"&gt;&lt;span class="lineno"&gt;367 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-368"&gt;&lt;span class="lineno"&gt;368 &lt;/span&gt;    &lt;span class="c1"&gt;# Results&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-369"&gt;&lt;span class="lineno"&gt;369 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; new_kernel &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-370"&gt;&lt;span class="lineno"&gt;370 &lt;/span&gt;        &lt;span class="nv"&gt;kernel_with_patches&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GREEN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;OK&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-371"&gt;&lt;span class="lineno"&gt;371 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; hw_support &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-372"&gt;&lt;span class="lineno"&gt;372 &lt;/span&gt;            &lt;span class="nv"&gt;hw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GREEN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;YES&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-373"&gt;&lt;span class="lineno"&gt;373 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-374"&gt;&lt;span class="lineno"&gt;374 &lt;/span&gt;            &lt;span class="nv"&gt;hw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RED&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;NO&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-375"&gt;&lt;span class="lineno"&gt;375 &lt;/span&gt;        &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-376"&gt;&lt;span class="lineno"&gt;376 &lt;/span&gt;    &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-377"&gt;&lt;span class="lineno"&gt;377 &lt;/span&gt;        &lt;span class="nv"&gt;kernel_with_patches&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RED&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;Not installed&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-378"&gt;&lt;span class="lineno"&gt;378 &lt;/span&gt;        &lt;span class="nv"&gt;hw&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;YELLOW&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;Cannot detect without updated kernel&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-379"&gt;&lt;span class="lineno"&gt;379 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-380"&gt;&lt;span class="lineno"&gt;380 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-381"&gt;&lt;span class="lineno"&gt;381 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; nopti &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-382"&gt;&lt;span class="lineno"&gt;382 &lt;/span&gt;        &lt;span class="nv"&gt;pti&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RED&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;Disabled on kernel commandline by &amp;#39;nopti&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-383"&gt;&lt;span class="lineno"&gt;383 &lt;/span&gt;    &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-384"&gt;&lt;span class="lineno"&gt;384 &lt;/span&gt;        &lt;span class="nv"&gt;pti&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Not disabled on kernel commandline&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-385"&gt;&lt;span class="lineno"&gt;385 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-386"&gt;&lt;span class="lineno"&gt;386 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-387"&gt;&lt;span class="lineno"&gt;387 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; noibrs &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-388"&gt;&lt;span class="lineno"&gt;388 &lt;/span&gt;        &lt;span class="nv"&gt;ibrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RED&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;Disabled on kernel commandline by &amp;#39;noibrs&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-389"&gt;&lt;span class="lineno"&gt;389 &lt;/span&gt;    &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-390"&gt;&lt;span class="lineno"&gt;390 &lt;/span&gt;        &lt;span class="nv"&gt;ibrs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Not disabled on kernel commandline&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-391"&gt;&lt;span class="lineno"&gt;391 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-392"&gt;&lt;span class="lineno"&gt;392 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-393"&gt;&lt;span class="lineno"&gt;393 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; noibpb &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-394"&gt;&lt;span class="lineno"&gt;394 &lt;/span&gt;        &lt;span class="nv"&gt;ibpb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RED&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;Disabled on kernel commandline by &amp;#39;noibpb&amp;#39;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-395"&gt;&lt;span class="lineno"&gt;395 &lt;/span&gt;    &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-396"&gt;&lt;span class="lineno"&gt;396 &lt;/span&gt;        &lt;span class="nv"&gt;ibpb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Not disabled on kernel commandline&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-397"&gt;&lt;span class="lineno"&gt;397 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-398"&gt;&lt;span class="lineno"&gt;398 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-399"&gt;&lt;span class="lineno"&gt;399 &lt;/span&gt;    &lt;span class="o"&gt;((&lt;/span&gt; &lt;span class="nv"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-400"&gt;&lt;span class="lineno"&gt;400 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$variant_1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Vulnerable&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-401"&gt;&lt;span class="lineno"&gt;401 &lt;/span&gt;        &lt;span class="o"&gt;((&lt;/span&gt; result &lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-402"&gt;&lt;span class="lineno"&gt;402 &lt;/span&gt;        &lt;span class="nv"&gt;variant_1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RED&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;$variant_1&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-403"&gt;&lt;span class="lineno"&gt;403 &lt;/span&gt;    &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-404"&gt;&lt;span class="lineno"&gt;404 &lt;/span&gt;        &lt;span class="nv"&gt;variant_1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GREEN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;$variant_1&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-405"&gt;&lt;span class="lineno"&gt;405 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-406"&gt;&lt;span class="lineno"&gt;406 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$variant_2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Vulnerable&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-407"&gt;&lt;span class="lineno"&gt;407 &lt;/span&gt;        &lt;span class="o"&gt;((&lt;/span&gt; result &lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-408"&gt;&lt;span class="lineno"&gt;408 &lt;/span&gt;        &lt;span class="nv"&gt;variant_2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RED&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;$variant_2&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-409"&gt;&lt;span class="lineno"&gt;409 &lt;/span&gt;    &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-410"&gt;&lt;span class="lineno"&gt;410 &lt;/span&gt;        &lt;span class="nv"&gt;variant_2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GREEN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;$variant_2&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-411"&gt;&lt;span class="lineno"&gt;411 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-412"&gt;&lt;span class="lineno"&gt;412 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$variant_3&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Vulnerable&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-413"&gt;&lt;span class="lineno"&gt;413 &lt;/span&gt;        &lt;span class="o"&gt;((&lt;/span&gt; result &lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-414"&gt;&lt;span class="lineno"&gt;414 &lt;/span&gt;        &lt;span class="nv"&gt;variant_3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RED&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;$variant_3&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-415"&gt;&lt;span class="lineno"&gt;415 &lt;/span&gt;    &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-416"&gt;&lt;span class="lineno"&gt;416 &lt;/span&gt;        &lt;span class="nv"&gt;variant_3&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GREEN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;$variant_3&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-417"&gt;&lt;span class="lineno"&gt;417 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-418"&gt;&lt;span class="lineno"&gt;418 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-419"&gt;&lt;span class="lineno"&gt;419 &lt;/span&gt;    &lt;span class="c1"&gt;# Output&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-420"&gt;&lt;span class="lineno"&gt;420 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;Detected CPU vendor: &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BOLD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;$vendor&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-421"&gt;&lt;span class="lineno"&gt;421 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;Running kernel: &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;BOLD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;$running_kernel&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-422"&gt;&lt;span class="lineno"&gt;422 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-423"&gt;&lt;span class="lineno"&gt;423 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-424"&gt;&lt;span class="lineno"&gt;424 &lt;/span&gt;    &lt;span class="c1"&gt;# Warnings&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-425"&gt;&lt;span class="lineno"&gt;425 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; fallback_needed &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-426"&gt;&lt;span class="lineno"&gt;426 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;YELLOW&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;Fallback non-runtime heuristics check is used (reading dmesg messages)&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;,&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-427"&gt;&lt;span class="lineno"&gt;427 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;because debugfs could not be read.&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-428"&gt;&lt;span class="lineno"&gt;428 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-429"&gt;&lt;span class="lineno"&gt;429 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;To improve mitigation detection:&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-430"&gt;&lt;span class="lineno"&gt;430 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; ! mounted_debugfs &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-431"&gt;&lt;span class="lineno"&gt;431 &lt;/span&gt;            &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;* Mount debugfs by following command:&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-432"&gt;&lt;span class="lineno"&gt;432 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; &lt;span class="nv"&gt;rhel&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nv"&gt;rhel&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;6&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-433"&gt;&lt;span class="lineno"&gt;433 &lt;/span&gt;                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;    # mount -t debugfs nodev /sys/kernel/debug&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-434"&gt;&lt;span class="lineno"&gt;434 &lt;/span&gt;            &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-435"&gt;&lt;span class="lineno"&gt;435 &lt;/span&gt;            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; &lt;span class="nv"&gt;rhel&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-436"&gt;&lt;span class="lineno"&gt;436 &lt;/span&gt;                &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;    # systemctl restart sys-kernel-debug.mount&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-437"&gt;&lt;span class="lineno"&gt;437 &lt;/span&gt;            &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-438"&gt;&lt;span class="lineno"&gt;438 &lt;/span&gt;        &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-439"&gt;&lt;span class="lineno"&gt;439 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; ! root &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-440"&gt;&lt;span class="lineno"&gt;440 &lt;/span&gt;            &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;* Run this script with elevated privileges (e.g. as root)&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-441"&gt;&lt;span class="lineno"&gt;441 &lt;/span&gt;        &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-442"&gt;&lt;span class="lineno"&gt;442 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-443"&gt;&lt;span class="lineno"&gt;443 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-444"&gt;&lt;span class="lineno"&gt;444 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-445"&gt;&lt;span class="lineno"&gt;445 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; dmesg_wrapped &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-446"&gt;&lt;span class="lineno"&gt;446 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;YELLOW&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;It seems that dmesg circular buffer already wrapped,&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-447"&gt;&lt;span class="lineno"&gt;447 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;YELLOW&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;the results may be inaccurate.&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-448"&gt;&lt;span class="lineno"&gt;448 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-449"&gt;&lt;span class="lineno"&gt;449 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-450"&gt;&lt;span class="lineno"&gt;450 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-451"&gt;&lt;span class="lineno"&gt;451 &lt;/span&gt;    &lt;span class="c1"&gt;# Variants&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-452"&gt;&lt;span class="lineno"&gt;452 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;Variant #1 (Spectre): &lt;/span&gt;&lt;span class="nv"&gt;$variant_1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-453"&gt;&lt;span class="lineno"&gt;453 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;CVE-2017-5753 - speculative execution bounds-check bypass&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-454"&gt;&lt;span class="lineno"&gt;454 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;   - Kernel with mitigation patches: &lt;/span&gt;&lt;span class="nv"&gt;$kernel_with_patches&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-455"&gt;&lt;span class="lineno"&gt;455 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-456"&gt;&lt;span class="lineno"&gt;456 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-457"&gt;&lt;span class="lineno"&gt;457 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;Variant #2 (Spectre): &lt;/span&gt;&lt;span class="nv"&gt;$variant_2&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-458"&gt;&lt;span class="lineno"&gt;458 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;CVE-2017-5715 - speculative execution branch target injection&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-459"&gt;&lt;span class="lineno"&gt;459 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;   - Kernel with mitigation patches: &lt;/span&gt;&lt;span class="nv"&gt;$kernel_with_patches&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-460"&gt;&lt;span class="lineno"&gt;460 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;   - HW support / updated microcode: &lt;/span&gt;&lt;span class="nv"&gt;$hw&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-461"&gt;&lt;span class="lineno"&gt;461 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;   - IBRS: &lt;/span&gt;&lt;span class="nv"&gt;$ibrs&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-462"&gt;&lt;span class="lineno"&gt;462 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;   - IBPB: &lt;/span&gt;&lt;span class="nv"&gt;$ibpb&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-463"&gt;&lt;span class="lineno"&gt;463 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-464"&gt;&lt;span class="lineno"&gt;464 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-465"&gt;&lt;span class="lineno"&gt;465 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;Variant #3 (Meltdown): &lt;/span&gt;&lt;span class="nv"&gt;$variant_3&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-466"&gt;&lt;span class="lineno"&gt;466 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;CVE-2017-5754 - speculative execution permission faults handling&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-467"&gt;&lt;span class="lineno"&gt;467 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$vendor&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;AMD&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-468"&gt;&lt;span class="lineno"&gt;468 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;   - AMD CPU: &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GREEN&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;OK&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;RESET&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-469"&gt;&lt;span class="lineno"&gt;469 &lt;/span&gt;    &lt;span class="k"&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-470"&gt;&lt;span class="lineno"&gt;470 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;   - Kernel with mitigation patches: &lt;/span&gt;&lt;span class="nv"&gt;$kernel_with_patches&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-471"&gt;&lt;span class="lineno"&gt;471 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;   - PTI: &lt;/span&gt;&lt;span class="nv"&gt;$pti&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-472"&gt;&lt;span class="lineno"&gt;472 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-473"&gt;&lt;span class="lineno"&gt;473 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-474"&gt;&lt;span class="lineno"&gt;474 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-475"&gt;&lt;span class="lineno"&gt;475 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; result !&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-476"&gt;&lt;span class="lineno"&gt;476 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Red Hat recommends that you:&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-477"&gt;&lt;span class="lineno"&gt;477 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; ! new_kernel &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-478"&gt;&lt;span class="lineno"&gt;478 &lt;/span&gt;            &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;* Update your kernel and reboot the system.&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-479"&gt;&lt;span class="lineno"&gt;479 &lt;/span&gt;        &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-480"&gt;&lt;span class="lineno"&gt;480 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; ! hw_support &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-481"&gt;&lt;span class="lineno"&gt;481 &lt;/span&gt;            &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;* Ask your HW vendor for CPU microcode update.&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-482"&gt;&lt;span class="lineno"&gt;482 &lt;/span&gt;        &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-483"&gt;&lt;span class="lineno"&gt;483 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt; noibrs &lt;span class="o"&gt;||&lt;/span&gt; noibpb &lt;span class="o"&gt;||&lt;/span&gt; nopti &lt;span class="o"&gt;))&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-484"&gt;&lt;span class="lineno"&gt;484 &lt;/span&gt;            &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;* Remove kernel commandline options as noted above.&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-485"&gt;&lt;span class="lineno"&gt;485 &lt;/span&gt;        &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-486"&gt;&lt;span class="lineno"&gt;486 &lt;/span&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-487"&gt;&lt;span class="lineno"&gt;487 &lt;/span&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-488"&gt;&lt;span class="lineno"&gt;488 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-489"&gt;&lt;span class="lineno"&gt;489 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;For more information see:&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-490"&gt;&lt;span class="lineno"&gt;490 &lt;/span&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;https://access.redhat.com/security/vulnerabilities/speculativeexecution&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-491"&gt;&lt;span class="lineno"&gt;491 &lt;/span&gt;    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-492"&gt;&lt;span class="lineno"&gt;492 &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
</content><category term="meltdown"></category><category term="code"></category><category term="bash"></category></entry><entry><title>code examples</title><link href="https://derez.github.io/2018/code0.html" rel="alternate"></link><published>2018-01-03T00:00:00-05:00</published><updated>2018-01-03T00:00:00-05:00</updated><author><name>Danny Walker</name></author><id>tag:derez.github.io,2018-01-03:/2018/code0.html</id><summary type="html">&lt;p class="first last"&gt;Summary of code examples to test out&amp;nbsp;syntax&lt;/p&gt;
</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span id="row-1"&gt;&lt;span class="lineno"&gt;1 &lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Pelican is a static site generator.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span id="row-1"&gt;&lt;span class="lineno"&gt; 1 &lt;/span&gt;&lt;span class="c1"&gt;# This file is part of PeachPy package and is licensed under the Simplified BSD license.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-2"&gt;&lt;span class="lineno"&gt; 2 &lt;/span&gt;&lt;span class="c1"&gt;#    See license.rst for the full text of the license.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-3"&gt;&lt;span class="lineno"&gt; 3 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-4"&gt;&lt;span class="lineno"&gt; 4 &lt;/span&gt;&lt;span class="n"&gt;active_writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-5"&gt;&lt;span class="lineno"&gt; 5 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-6"&gt;&lt;span class="lineno"&gt; 6 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-7"&gt;&lt;span class="lineno"&gt; 7 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CodeWriter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-8"&gt;&lt;span class="lineno"&gt; 8 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-9"&gt;&lt;span class="lineno"&gt; 9 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-10"&gt;&lt;span class="lineno"&gt;10 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-11"&gt;&lt;span class="lineno"&gt;11 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;previous_writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-12"&gt;&lt;span class="lineno"&gt;12 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-13"&gt;&lt;span class="lineno"&gt;13 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__enter__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-14"&gt;&lt;span class="lineno"&gt;14 &lt;/span&gt;        &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;active_writer&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-15"&gt;&lt;span class="lineno"&gt;15 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;previous_writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;active_writer&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-16"&gt;&lt;span class="lineno"&gt;16 &lt;/span&gt;        &lt;span class="n"&gt;active_writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-17"&gt;&lt;span class="lineno"&gt;17 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-18"&gt;&lt;span class="lineno"&gt;18 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-19"&gt;&lt;span class="lineno"&gt;19 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__exit__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exc_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exc_value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;traceback&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-20"&gt;&lt;span class="lineno"&gt;20 &lt;/span&gt;        &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;active_writer&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-21"&gt;&lt;span class="lineno"&gt;21 &lt;/span&gt;        &lt;span class="n"&gt;active_writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;previous_writer&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-22"&gt;&lt;span class="lineno"&gt;22 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;previous_writer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-23"&gt;&lt;span class="lineno"&gt;23 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-24"&gt;&lt;span class="lineno"&gt;24 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-25"&gt;&lt;span class="lineno"&gt;25 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-26"&gt;&lt;span class="lineno"&gt;26 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;    &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-27"&gt;&lt;span class="lineno"&gt;27 &lt;/span&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-28"&gt;&lt;span class="lineno"&gt;28 &lt;/span&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-29"&gt;&lt;span class="lineno"&gt;29 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-30"&gt;&lt;span class="lineno"&gt;30 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;indent_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-31"&gt;&lt;span class="lineno"&gt;31 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-32"&gt;&lt;span class="lineno"&gt;32 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-33"&gt;&lt;span class="lineno"&gt;33 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__str__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-34"&gt;&lt;span class="lineno"&gt;34 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lines&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-35"&gt;&lt;span class="lineno"&gt;35 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-36"&gt;&lt;span class="lineno"&gt;36 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-37"&gt;&lt;span class="lineno"&gt;37 &lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CodeBlock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-38"&gt;&lt;span class="lineno"&gt;38 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-39"&gt;&lt;span class="lineno"&gt;39 &lt;/span&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-40"&gt;&lt;span class="lineno"&gt;40 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-41"&gt;&lt;span class="lineno"&gt;41 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__enter__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-42"&gt;&lt;span class="lineno"&gt;42 &lt;/span&gt;        &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;active_writer&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-43"&gt;&lt;span class="lineno"&gt;43 &lt;/span&gt;        &lt;span class="n"&gt;active_writer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indent&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-44"&gt;&lt;span class="lineno"&gt;44 &lt;/span&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-45"&gt;&lt;span class="lineno"&gt;45 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-46"&gt;&lt;span class="lineno"&gt;46 &lt;/span&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__exit__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exc_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exc_value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;traceback&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-47"&gt;&lt;span class="lineno"&gt;47 &lt;/span&gt;        &lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;active_writer&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-48"&gt;&lt;span class="lineno"&gt;48 &lt;/span&gt;        &lt;span class="n"&gt;active_writer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indent&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;indent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
</content><category term="code examples"></category><category term="hightlighting"></category><category term="python"></category></entry><entry><title>code examples1</title><link href="https://derez.github.io/2017/code1.html" rel="alternate"></link><published>2017-01-03T11:22:00-05:00</published><updated>2017-01-03T11:22:00-05:00</updated><author><name>Danny Walker</name></author><id>tag:derez.github.io,2017-01-03:/2017/code1.html</id><summary type="html">&lt;p class="first last"&gt;Summary of code examples to test out&amp;nbsp;syntax&lt;/p&gt;
</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span id="row-20"&gt;&lt;span class="lineno"&gt; 20 &lt;/span&gt;&lt;span class="c1"&gt;# This file is part of PeachPy package and is licensed under the Simplified BSD license.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-21"&gt;&lt;span class="lineno"&gt; 21 &lt;/span&gt;&lt;span class="c1"&gt;#    See license.rst for the full text of the license.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-22"&gt;&lt;span class="lineno"&gt; 22 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-23"&gt;&lt;span class="lineno"&gt; 23 &lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;print_function&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-24"&gt;&lt;span class="lineno"&gt; 24 &lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;opcodes.x86_64&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-25"&gt;&lt;span class="lineno"&gt; 25 &lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;codegen.code&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CodeWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CodeBlock&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-26"&gt;&lt;span class="lineno"&gt; 26 &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-27"&gt;&lt;span class="lineno"&gt; 27 &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-28"&gt;&lt;span class="lineno"&gt; 28 &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-29"&gt;&lt;span class="lineno"&gt; 29 &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tempfile&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-30"&gt;&lt;span class="lineno"&gt; 30 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-31"&gt;&lt;span class="lineno"&gt; 31 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-32"&gt;&lt;span class="lineno"&gt; 32 &lt;/span&gt;&lt;span class="n"&gt;instruction_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;read_instruction_set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-33"&gt;&lt;span class="lineno"&gt; 33 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-34"&gt;&lt;span class="lineno"&gt; 34 &lt;/span&gt;&lt;span class="n"&gt;instruction_groups&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;x86_64.json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-35"&gt;&lt;span class="lineno"&gt; 35 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-36"&gt;&lt;span class="lineno"&gt; 36 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-37"&gt;&lt;span class="lineno"&gt; 37 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;filter_instruction_forms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instruction_forms&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-38"&gt;&lt;span class="lineno"&gt; 38 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Removes the instruction forms that are currently not supported&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-39"&gt;&lt;span class="lineno"&gt; 39 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-40"&gt;&lt;span class="lineno"&gt; 40 &lt;/span&gt;    &lt;span class="n"&gt;new_instruction_forms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-41"&gt;&lt;span class="lineno"&gt; 41 &lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;instruction_form&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;instruction_forms&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-42"&gt;&lt;span class="lineno"&gt; 42 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;r8l&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r16l&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r32l&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;moffs32&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;moffs64&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;operands&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-43"&gt;&lt;span class="lineno"&gt; 43 &lt;/span&gt;            &lt;span class="n"&gt;new_instruction_forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-44"&gt;&lt;span class="lineno"&gt; 44 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;new_instruction_forms&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-45"&gt;&lt;span class="lineno"&gt; 45 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-46"&gt;&lt;span class="lineno"&gt; 46 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-47"&gt;&lt;span class="lineno"&gt; 47 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_avx512_instruction_form&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-48"&gt;&lt;span class="lineno"&gt; 48 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isa_extensions&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isa_extensions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AVX512&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-49"&gt;&lt;span class="lineno"&gt; 49 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-50"&gt;&lt;span class="lineno"&gt; 50 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-51"&gt;&lt;span class="lineno"&gt; 51 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;objcopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-52"&gt;&lt;span class="lineno"&gt; 52 &lt;/span&gt;    &lt;span class="n"&gt;objdump_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OBJCOPY_FOR_X86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OBJCOPY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-53"&gt;&lt;span class="lineno"&gt; 53 &lt;/span&gt;    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;objdump_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;objcopy not found, please set the environment variable OBJCOPY_FOR_X86&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-54"&gt;&lt;span class="lineno"&gt; 54 &lt;/span&gt;    &lt;span class="n"&gt;objdump_process&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;objdump_path&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-55"&gt;&lt;span class="lineno"&gt; 55 &lt;/span&gt;                                       &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-56"&gt;&lt;span class="lineno"&gt; 56 &lt;/span&gt;                                       &lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-57"&gt;&lt;span class="lineno"&gt; 57 &lt;/span&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdoutdata&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderrdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;objdump_process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-58"&gt;&lt;span class="lineno"&gt; 58 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;objdump_process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;returncode&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-59"&gt;&lt;span class="lineno"&gt; 59 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdoutdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-60"&gt;&lt;span class="lineno"&gt; 60 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stderrdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-61"&gt;&lt;span class="lineno"&gt; 61 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-62"&gt;&lt;span class="lineno"&gt; 62 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-63"&gt;&lt;span class="lineno"&gt; 63 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;gas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-64"&gt;&lt;span class="lineno"&gt; 64 &lt;/span&gt;    &lt;span class="n"&gt;gas_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AS_FOR_X86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GAS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-65"&gt;&lt;span class="lineno"&gt; 65 &lt;/span&gt;    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;gas_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;GNU assembler not found, please set the environment variable AS_FOR_X86&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-66"&gt;&lt;span class="lineno"&gt; 66 &lt;/span&gt;    &lt;span class="n"&gt;gas_process&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;gas_path&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-67"&gt;&lt;span class="lineno"&gt; 67 &lt;/span&gt;                                   &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-68"&gt;&lt;span class="lineno"&gt; 68 &lt;/span&gt;                                   &lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-69"&gt;&lt;span class="lineno"&gt; 69 &lt;/span&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdoutdata&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderrdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gas_process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-70"&gt;&lt;span class="lineno"&gt; 70 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;gas_process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;returncode&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-71"&gt;&lt;span class="lineno"&gt; 71 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdoutdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-72"&gt;&lt;span class="lineno"&gt; 72 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stderrdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-73"&gt;&lt;span class="lineno"&gt; 73 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;stdoutdata&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ascii&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;replace&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-74"&gt;&lt;span class="lineno"&gt; 74 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-75"&gt;&lt;span class="lineno"&gt; 75 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-76"&gt;&lt;span class="lineno"&gt; 76 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;binutils_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;assembly&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-77"&gt;&lt;span class="lineno"&gt; 77 &lt;/span&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;tempfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NamedTemporaryFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;w+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;asm_file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-78"&gt;&lt;span class="lineno"&gt; 78 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;asm_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-79"&gt;&lt;span class="lineno"&gt; 79 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.intel_syntax noprefix&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;asm_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-80"&gt;&lt;span class="lineno"&gt; 80 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;assembly&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;asm_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-81"&gt;&lt;span class="lineno"&gt; 81 &lt;/span&gt;    &lt;span class="n"&gt;obj_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tempfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NamedTemporaryFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-82"&gt;&lt;span class="lineno"&gt; 82 &lt;/span&gt;    &lt;span class="n"&gt;obj_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-83"&gt;&lt;span class="lineno"&gt; 83 &lt;/span&gt;    &lt;span class="n"&gt;bin_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tempfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NamedTemporaryFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-84"&gt;&lt;span class="lineno"&gt; 84 &lt;/span&gt;    &lt;span class="n"&gt;bin_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-85"&gt;&lt;span class="lineno"&gt; 85 &lt;/span&gt;    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-86"&gt;&lt;span class="lineno"&gt; 86 &lt;/span&gt;        &lt;span class="n"&gt;gas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-o&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;asm_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-87"&gt;&lt;span class="lineno"&gt; 87 &lt;/span&gt;        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;asm_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-88"&gt;&lt;span class="lineno"&gt; 88 &lt;/span&gt;        &lt;span class="n"&gt;objcopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-O&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-j&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bin_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-89"&gt;&lt;span class="lineno"&gt; 89 &lt;/span&gt;        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-90"&gt;&lt;span class="lineno"&gt; 90 &lt;/span&gt;    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;OSError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-91"&gt;&lt;span class="lineno"&gt; 91 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;assembly&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-92"&gt;&lt;span class="lineno"&gt; 92 &lt;/span&gt;        &lt;span class="k"&gt;raise&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-93"&gt;&lt;span class="lineno"&gt; 93 &lt;/span&gt;    &lt;span class="n"&gt;bytecode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;bytearray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bin_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-94"&gt;&lt;span class="lineno"&gt; 94 &lt;/span&gt;    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bin_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-95"&gt;&lt;span class="lineno"&gt; 95 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bytearray([&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;])&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0x&lt;/span&gt;&lt;span class="si"&gt;%02X&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;bytecode&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-96"&gt;&lt;span class="lineno"&gt; 96 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-97"&gt;&lt;span class="lineno"&gt; 97 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-98"&gt;&lt;span class="lineno"&gt; 98 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_operand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;operand_number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;peachpy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;evex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-99"&gt;&lt;span class="lineno"&gt; 99 &lt;/span&gt;    &lt;span class="n"&gt;value_map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-100"&gt;&lt;span class="lineno"&gt;100 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;r8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r9b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r11b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-101"&gt;&lt;span class="lineno"&gt;101 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;r16&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;si&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r12w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;di&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r14w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-102"&gt;&lt;span class="lineno"&gt;102 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;r32&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ebp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r8d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;eax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r10d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-103"&gt;&lt;span class="lineno"&gt;103 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;r64&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rcx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r15&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r13&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-104"&gt;&lt;span class="lineno"&gt;104 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;mm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mm3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mm5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-105"&gt;&lt;span class="lineno"&gt;105 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;xmm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;xmm1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm14&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-106"&gt;&lt;span class="lineno"&gt;106 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;xmm{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm5{k1}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-107"&gt;&lt;span class="lineno"&gt;107 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;xmm{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm30{k2}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-108"&gt;&lt;span class="lineno"&gt;108 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;ymm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ymm2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ymm15&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ymm4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ymm10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-109"&gt;&lt;span class="lineno"&gt;109 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;ymm{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ymm24{k3}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-110"&gt;&lt;span class="lineno"&gt;110 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;ymm{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ymm19{k5}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-111"&gt;&lt;span class="lineno"&gt;111 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;zmm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zmm3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zmm26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zmm9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zmm17&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-112"&gt;&lt;span class="lineno"&gt;112 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;zmm{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zmm26{k7}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-113"&gt;&lt;span class="lineno"&gt;113 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;zmm{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zmm9{k6}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-114"&gt;&lt;span class="lineno"&gt;114 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;k&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;k5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-115"&gt;&lt;span class="lineno"&gt;115 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;k{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;k4{k6}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-116"&gt;&lt;span class="lineno"&gt;116 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r15 + rsi*8 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-117"&gt;&lt;span class="lineno"&gt;117 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;byte[r14 + rdi*4 - 123]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-118"&gt;&lt;span class="lineno"&gt;118 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m16&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;word[r13 + rbp*8 - 107]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-119"&gt;&lt;span class="lineno"&gt;119 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m32&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dword[r12 + rcx*8 - 99]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-120"&gt;&lt;span class="lineno"&gt;120 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m64&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qword[r11 + rdx*8 - 88]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-121"&gt;&lt;span class="lineno"&gt;121 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m64/m32bcst&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qword[r11 + rdx*8 - 88]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-122"&gt;&lt;span class="lineno"&gt;122 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m128&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oword[r10 + rax*8 - 77]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-123"&gt;&lt;span class="lineno"&gt;123 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m128/m32bcst&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oword[r10 + rax*8 - 77]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-124"&gt;&lt;span class="lineno"&gt;124 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m128/m64bcst&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oword[r10 + rax*8 - 77]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-125"&gt;&lt;span class="lineno"&gt;125 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m256&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hword[r9 + rbx*8 - 66]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-126"&gt;&lt;span class="lineno"&gt;126 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m256/m32bcst&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hword[r9 + rbx*8 - 66]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-127"&gt;&lt;span class="lineno"&gt;127 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m256/m64bcst&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hword[r9 + rbx*8 - 66]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-128"&gt;&lt;span class="lineno"&gt;128 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m512&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zword[r9 + rbx*8 - 66]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-129"&gt;&lt;span class="lineno"&gt;129 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m512/m32bcst&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zword[r9 + rbx*8 - 66]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-130"&gt;&lt;span class="lineno"&gt;130 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m512/m64bcst&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zword[r9 + rbx*8 - 66]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-131"&gt;&lt;span class="lineno"&gt;131 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m8{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;byte[r14 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;byte[r14 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;byte[r14 - 128]{k1}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-132"&gt;&lt;span class="lineno"&gt;132 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m16{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;word[r13 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;word[r13 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;word[r13 - 128]{k2}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-133"&gt;&lt;span class="lineno"&gt;133 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m32{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dword[r12 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dword[r12 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dword[r12 - 128]{k3}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-134"&gt;&lt;span class="lineno"&gt;134 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m64{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;qword[r11 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qword[r11 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qword[r11 - 128]{k4}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-135"&gt;&lt;span class="lineno"&gt;135 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m128{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;oword[r10 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oword[r10 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oword[r10 - 128]{k5}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-136"&gt;&lt;span class="lineno"&gt;136 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m256{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hword[r9 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hword[r9 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hword[r9 - 128]{k6}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-137"&gt;&lt;span class="lineno"&gt;137 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m512{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zword[r8 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zword[r8 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zword[r8 - 128]{k7}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-138"&gt;&lt;span class="lineno"&gt;138 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m32{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dword[r12 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dword[r12 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dword[r12 - 128]{k5}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-139"&gt;&lt;span class="lineno"&gt;139 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m64{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;qword[r11 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qword[r11 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qword[r11 - 128]{k6}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-140"&gt;&lt;span class="lineno"&gt;140 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[rsi + xmm0 * 4 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-141"&gt;&lt;span class="lineno"&gt;141 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r11 + ymm8 * 4 + 48]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-142"&gt;&lt;span class="lineno"&gt;142 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32z&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r15 + zmm19 * 4 - 16]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-143"&gt;&lt;span class="lineno"&gt;143 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[rsi + xmm1 * 8 + 40]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-144"&gt;&lt;span class="lineno"&gt;144 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r11 + ymm9 * 8 - 56]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-145"&gt;&lt;span class="lineno"&gt;145 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64z&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r15 + zmm20 * 8 + 72]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-146"&gt;&lt;span class="lineno"&gt;146 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32x{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[rsi + xmm0 * 4 - 128]{k1}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-147"&gt;&lt;span class="lineno"&gt;147 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32y{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r11 + ymm8 * 4 + 48]{k2}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-148"&gt;&lt;span class="lineno"&gt;148 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32z{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r15 + zmm19 * 4 - 16]{k3}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-149"&gt;&lt;span class="lineno"&gt;149 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64x{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[rsi + xmm1 * 8 + 40]{k4}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-150"&gt;&lt;span class="lineno"&gt;150 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64y{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r11 + ymm9 * 8 - 56]{k5}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-151"&gt;&lt;span class="lineno"&gt;151 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64z{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r15 + zmm20 * 8 + 72]{k6}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-152"&gt;&lt;span class="lineno"&gt;152 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;imm4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0b11&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-153"&gt;&lt;span class="lineno"&gt;153 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;imm8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-154"&gt;&lt;span class="lineno"&gt;154 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;imm16&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;32000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-155"&gt;&lt;span class="lineno"&gt;155 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;imm32&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0x10000000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-156"&gt;&lt;span class="lineno"&gt;156 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;imm64&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0x100000000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-157"&gt;&lt;span class="lineno"&gt;157 &lt;/span&gt;        &lt;span class="c1"&gt;# &amp;quot;rel32&amp;quot;: &amp;quot;rip+0x11223344&amp;quot;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-158"&gt;&lt;span class="lineno"&gt;158 &lt;/span&gt;        &lt;span class="c1"&gt;# &amp;quot;rel8&amp;quot;: &amp;quot;rip-100&amp;quot;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-159"&gt;&lt;span class="lineno"&gt;159 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;al&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;al&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-160"&gt;&lt;span class="lineno"&gt;160 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;cl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-161"&gt;&lt;span class="lineno"&gt;161 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;ax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-162"&gt;&lt;span class="lineno"&gt;162 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;eax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;eax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-163"&gt;&lt;span class="lineno"&gt;163 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;rax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-164"&gt;&lt;span class="lineno"&gt;164 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;xmm0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-165"&gt;&lt;span class="lineno"&gt;165 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-166"&gt;&lt;span class="lineno"&gt;166 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-167"&gt;&lt;span class="lineno"&gt;167 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;{sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-168"&gt;&lt;span class="lineno"&gt;168 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;{er}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{rn-sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-169"&gt;&lt;span class="lineno"&gt;169 &lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-170"&gt;&lt;span class="lineno"&gt;170 &lt;/span&gt;    &lt;span class="n"&gt;evex_value_map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-171"&gt;&lt;span class="lineno"&gt;171 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;xmm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;xmm16&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm19&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm31&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-172"&gt;&lt;span class="lineno"&gt;172 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;ymm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ymm17&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ymm5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ymm20&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ymm30&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-173"&gt;&lt;span class="lineno"&gt;173 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;byte[r14 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;byte[r14 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;byte[r14 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-174"&gt;&lt;span class="lineno"&gt;174 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m16&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;word[r13 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;word[r13 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;word[r13 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-175"&gt;&lt;span class="lineno"&gt;175 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m32&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dword[r12 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dword[r12 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dword[r12 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-176"&gt;&lt;span class="lineno"&gt;176 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m64&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;qword[r11 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qword[r11 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qword[r11 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-177"&gt;&lt;span class="lineno"&gt;177 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m128&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;oword[r10 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oword[r10 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oword[r10 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-178"&gt;&lt;span class="lineno"&gt;178 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m256&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hword[r9 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hword[r9 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hword[r9 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-179"&gt;&lt;span class="lineno"&gt;179 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m512&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zword[r8 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zword[r8 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zword[r8 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-180"&gt;&lt;span class="lineno"&gt;180 &lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-181"&gt;&lt;span class="lineno"&gt;181 &lt;/span&gt;    &lt;span class="n"&gt;peachpy_value_map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-182"&gt;&lt;span class="lineno"&gt;182 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32x{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[rsi + xmm0(k1) * 4 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-183"&gt;&lt;span class="lineno"&gt;183 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32y{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r11 + ymm8(k2) * 4 + 48]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-184"&gt;&lt;span class="lineno"&gt;184 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32z{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r15 + zmm19(k3) * 4 - 16]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-185"&gt;&lt;span class="lineno"&gt;185 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64x{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[rsi + xmm1(k4) * 8 + 40]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-186"&gt;&lt;span class="lineno"&gt;186 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64y{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r11 + ymm9(k5) * 8 - 56]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-187"&gt;&lt;span class="lineno"&gt;187 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64z{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r15 + zmm20(k6) * 8 + 72]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-188"&gt;&lt;span class="lineno"&gt;188 &lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-189"&gt;&lt;span class="lineno"&gt;189 &lt;/span&gt;    &lt;span class="n"&gt;optype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-190"&gt;&lt;span class="lineno"&gt;190 &lt;/span&gt;    &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value_map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;optype&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-191"&gt;&lt;span class="lineno"&gt;191 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;evex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-192"&gt;&lt;span class="lineno"&gt;192 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;evex_value_map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;optype&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-193"&gt;&lt;span class="lineno"&gt;193 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;peachpy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-194"&gt;&lt;span class="lineno"&gt;194 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;peachpy_value_map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;optype&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-195"&gt;&lt;span class="lineno"&gt;195 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-196"&gt;&lt;span class="lineno"&gt;196 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;operand_number&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-197"&gt;&lt;span class="lineno"&gt;197 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;peachpy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-198"&gt;&lt;span class="lineno"&gt;198 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\
&lt;/span&gt;&lt;span id="row-199"&gt;&lt;span class="lineno"&gt;199 &lt;/span&gt;            &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;byte&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;BYTE PTR &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\
&lt;/span&gt;&lt;span id="row-200"&gt;&lt;span class="lineno"&gt;200 &lt;/span&gt;            &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dword&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DWORD PTR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\
&lt;/span&gt;&lt;span id="row-201"&gt;&lt;span class="lineno"&gt;201 &lt;/span&gt;            &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;qword&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;QWORD PTR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\
&lt;/span&gt;&lt;span id="row-202"&gt;&lt;span class="lineno"&gt;202 &lt;/span&gt;            &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;oword&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;XMMWORD PTR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\
&lt;/span&gt;&lt;span id="row-203"&gt;&lt;span class="lineno"&gt;203 &lt;/span&gt;            &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hword&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;YMMWORD PTR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\
&lt;/span&gt;&lt;span id="row-204"&gt;&lt;span class="lineno"&gt;204 &lt;/span&gt;            &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zword&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ZMMWORD PTR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\
&lt;/span&gt;&lt;span id="row-205"&gt;&lt;span class="lineno"&gt;205 &lt;/span&gt;            &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;word&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;WORD PTR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\
&lt;/span&gt;&lt;span id="row-206"&gt;&lt;span class="lineno"&gt;206 &lt;/span&gt;            &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$+2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-207"&gt;&lt;span class="lineno"&gt;207 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;peachpy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-208"&gt;&lt;span class="lineno"&gt;208 &lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;kn&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-209"&gt;&lt;span class="lineno"&gt;209 &lt;/span&gt;            &lt;span class="n"&gt;kreg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;k&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-210"&gt;&lt;span class="lineno"&gt;210 &lt;/span&gt;            &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;kreg&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;(&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;kreg&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-211"&gt;&lt;span class="lineno"&gt;211 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;){z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.z)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-212"&gt;&lt;span class="lineno"&gt;212 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{rn-sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{rn_sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-213"&gt;&lt;span class="lineno"&gt;213 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{rz-sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{rz_sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-214"&gt;&lt;span class="lineno"&gt;214 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{ru-sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{ru_sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-215"&gt;&lt;span class="lineno"&gt;215 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{rd-sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{rd_sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-216"&gt;&lt;span class="lineno"&gt;216 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-217"&gt;&lt;span class="lineno"&gt;217 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-218"&gt;&lt;span class="lineno"&gt;218 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-219"&gt;&lt;span class="lineno"&gt;219 &lt;/span&gt;&lt;span class="n"&gt;tab&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-220"&gt;&lt;span class="lineno"&gt;220 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-221"&gt;&lt;span class="lineno"&gt;221 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;package_root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-222"&gt;&lt;span class="lineno"&gt;222 &lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instruction_names&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;instruction_groups&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-223"&gt;&lt;span class="lineno"&gt;223 &lt;/span&gt;        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;package_root&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;x86_64&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;encoding&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test_&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;.py&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-224"&gt;&lt;span class="lineno"&gt;224 &lt;/span&gt;            &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;CodeWriter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-225"&gt;&lt;span class="lineno"&gt;225 &lt;/span&gt;                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;# This file is auto-generated by /codegen/x86_64_test_encoding.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-226"&gt;&lt;span class="lineno"&gt;226 &lt;/span&gt;                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;# Reference opcodes are generated by:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-227"&gt;&lt;span class="lineno"&gt;227 &lt;/span&gt;                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#     &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;gas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitlines&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-228"&gt;&lt;span class="lineno"&gt;228 &lt;/span&gt;                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-229"&gt;&lt;span class="lineno"&gt;229 &lt;/span&gt;                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;from peachpy.x86_64 import *&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-230"&gt;&lt;span class="lineno"&gt;230 &lt;/span&gt;                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;import unittest&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-231"&gt;&lt;span class="lineno"&gt;231 &lt;/span&gt;                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-232"&gt;&lt;span class="lineno"&gt;232 &lt;/span&gt;                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-233"&gt;&lt;span class="lineno"&gt;233 &lt;/span&gt;                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;instruction_names&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-234"&gt;&lt;span class="lineno"&gt;234 &lt;/span&gt;                    &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;class Test&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;(unittest.TestCase):&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-235"&gt;&lt;span class="lineno"&gt;235 &lt;/span&gt;                    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;CodeBlock&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-236"&gt;&lt;span class="lineno"&gt;236 &lt;/span&gt;                        &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;def runTest(self):&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-237"&gt;&lt;span class="lineno"&gt;237 &lt;/span&gt;                        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;CodeBlock&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-238"&gt;&lt;span class="lineno"&gt;238 &lt;/span&gt;                            &lt;span class="c1"&gt;# Instructions with `name` name&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-239"&gt;&lt;span class="lineno"&gt;239 &lt;/span&gt;                            &lt;span class="n"&gt;name_instructions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instruction_set&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-240"&gt;&lt;span class="lineno"&gt;240 &lt;/span&gt;                            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;name_instructions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-241"&gt;&lt;span class="lineno"&gt;241 &lt;/span&gt;                                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;No forms for instruction: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-242"&gt;&lt;span class="lineno"&gt;242 &lt;/span&gt;                                &lt;span class="k"&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-243"&gt;&lt;span class="lineno"&gt;243 &lt;/span&gt;                            &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name_instructions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-244"&gt;&lt;span class="lineno"&gt;244 &lt;/span&gt;                            &lt;span class="n"&gt;name_instruction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name_instructions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-245"&gt;&lt;span class="lineno"&gt;245 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-246"&gt;&lt;span class="lineno"&gt;246 &lt;/span&gt;                            &lt;span class="n"&gt;has_assertions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-247"&gt;&lt;span class="lineno"&gt;247 &lt;/span&gt;                            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;instruction_form&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;filter_instruction_forms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name_instruction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-248"&gt;&lt;span class="lineno"&gt;248 &lt;/span&gt;                                &lt;span class="n"&gt;is_avx512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;is_avx512_instruction_form&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-249"&gt;&lt;span class="lineno"&gt;249 &lt;/span&gt;                                &lt;span class="n"&gt;peachpy_operands&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;generate_operand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;peachpy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;evex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;is_avx512&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-250"&gt;&lt;span class="lineno"&gt;250 &lt;/span&gt;                                                    &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;operands&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-251"&gt;&lt;span class="lineno"&gt;251 &lt;/span&gt;                                &lt;span class="n"&gt;gas_operands&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;generate_operand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;peachpy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;evex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;is_avx512&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-252"&gt;&lt;span class="lineno"&gt;252 &lt;/span&gt;                                                &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;operands&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-253"&gt;&lt;span class="lineno"&gt;253 &lt;/span&gt;                                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;any&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;op&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gas_operands&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-254"&gt;&lt;span class="lineno"&gt;254 &lt;/span&gt;                                    &lt;span class="n"&gt;gas_assembly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gas_operands&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-255"&gt;&lt;span class="lineno"&gt;255 &lt;/span&gt;                                    &lt;span class="n"&gt;peachpy_assembly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;(&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;peachpy_operands&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-256"&gt;&lt;span class="lineno"&gt;256 &lt;/span&gt;                                    &lt;span class="n"&gt;reference_bytecode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;binutils_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gas_assembly&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-257"&gt;&lt;span class="lineno"&gt;257 &lt;/span&gt;                                    &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;self.assertEqual(&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;.encode())&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-258"&gt;&lt;span class="lineno"&gt;258 &lt;/span&gt;                                              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reference_bytecode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;peachpy_assembly&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-259"&gt;&lt;span class="lineno"&gt;259 &lt;/span&gt;                                    &lt;span class="n"&gt;has_assertions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-260"&gt;&lt;span class="lineno"&gt;260 &lt;/span&gt;                            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;has_assertions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-261"&gt;&lt;span class="lineno"&gt;261 &lt;/span&gt;                                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-262"&gt;&lt;span class="lineno"&gt;262 &lt;/span&gt;                            &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-263"&gt;&lt;span class="lineno"&gt;263 &lt;/span&gt;                            &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-264"&gt;&lt;span class="lineno"&gt;264 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-265"&gt;&lt;span class="lineno"&gt;265 &lt;/span&gt;            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-266"&gt;&lt;span class="lineno"&gt;266 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-267"&gt;&lt;span class="lineno"&gt;267 &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-268"&gt;&lt;span class="lineno"&gt;268 &lt;/span&gt;    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
</content><category term="code examples"></category><category term="hightlighting"></category><category term="python"></category></entry><entry><title>code examples1</title><link href="https://derez.github.io/2017/shellcode-encoder.html" rel="alternate"></link><published>2017-01-03T11:22:00-05:00</published><updated>2017-01-03T11:22:00-05:00</updated><author><name>Danny Walker</name></author><id>tag:derez.github.io,2017-01-03:/2017/shellcode-encoder.html</id><summary type="html">&lt;p class="first last"&gt;More code examples to look at syntax&amp;nbsp;highlighting&lt;/p&gt;
</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span id="row-20"&gt;&lt;span class="lineno"&gt; 20 &lt;/span&gt;&lt;span class="c1"&gt;# This file is part of PeachPy package and is licensed under the Simplified BSD license.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-21"&gt;&lt;span class="lineno"&gt; 21 &lt;/span&gt;&lt;span class="c1"&gt;#    See license.rst for the full text of the license.&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-22"&gt;&lt;span class="lineno"&gt; 22 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-23"&gt;&lt;span class="lineno"&gt; 23 &lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;print_function&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-24"&gt;&lt;span class="lineno"&gt; 24 &lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;opcodes.x86_64&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-25"&gt;&lt;span class="lineno"&gt; 25 &lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;codegen.code&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CodeWriter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CodeBlock&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-26"&gt;&lt;span class="lineno"&gt; 26 &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-27"&gt;&lt;span class="lineno"&gt; 27 &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-28"&gt;&lt;span class="lineno"&gt; 28 &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-29"&gt;&lt;span class="lineno"&gt; 29 &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tempfile&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-30"&gt;&lt;span class="lineno"&gt; 30 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-31"&gt;&lt;span class="lineno"&gt; 31 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-32"&gt;&lt;span class="lineno"&gt; 32 &lt;/span&gt;&lt;span class="n"&gt;instruction_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;read_instruction_set&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-33"&gt;&lt;span class="lineno"&gt; 33 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-34"&gt;&lt;span class="lineno"&gt; 34 &lt;/span&gt;&lt;span class="n"&gt;instruction_groups&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;x86_64.json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-35"&gt;&lt;span class="lineno"&gt; 35 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-36"&gt;&lt;span class="lineno"&gt; 36 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-37"&gt;&lt;span class="lineno"&gt; 37 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;filter_instruction_forms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instruction_forms&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-38"&gt;&lt;span class="lineno"&gt; 38 &lt;/span&gt;    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Removes the instruction forms that are currently not supported&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-39"&gt;&lt;span class="lineno"&gt; 39 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-40"&gt;&lt;span class="lineno"&gt; 40 &lt;/span&gt;    &lt;span class="n"&gt;new_instruction_forms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-41"&gt;&lt;span class="lineno"&gt; 41 &lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;instruction_form&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;instruction_forms&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-42"&gt;&lt;span class="lineno"&gt; 42 &lt;/span&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;all&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;r8l&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r16l&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r32l&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;moffs32&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;moffs64&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;operands&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-43"&gt;&lt;span class="lineno"&gt; 43 &lt;/span&gt;            &lt;span class="n"&gt;new_instruction_forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-44"&gt;&lt;span class="lineno"&gt; 44 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;new_instruction_forms&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-45"&gt;&lt;span class="lineno"&gt; 45 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-46"&gt;&lt;span class="lineno"&gt; 46 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-47"&gt;&lt;span class="lineno"&gt; 47 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_avx512_instruction_form&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-48"&gt;&lt;span class="lineno"&gt; 48 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isa_extensions&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isa_extensions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AVX512&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-49"&gt;&lt;span class="lineno"&gt; 49 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-50"&gt;&lt;span class="lineno"&gt; 50 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-51"&gt;&lt;span class="lineno"&gt; 51 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;objcopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-52"&gt;&lt;span class="lineno"&gt; 52 &lt;/span&gt;    &lt;span class="n"&gt;objdump_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OBJCOPY_FOR_X86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;OBJCOPY&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-53"&gt;&lt;span class="lineno"&gt; 53 &lt;/span&gt;    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;objdump_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;objcopy not found, please set the environment variable OBJCOPY_FOR_X86&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-54"&gt;&lt;span class="lineno"&gt; 54 &lt;/span&gt;    &lt;span class="n"&gt;objdump_process&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;objdump_path&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-55"&gt;&lt;span class="lineno"&gt; 55 &lt;/span&gt;                                       &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-56"&gt;&lt;span class="lineno"&gt; 56 &lt;/span&gt;                                       &lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-57"&gt;&lt;span class="lineno"&gt; 57 &lt;/span&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdoutdata&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderrdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;objdump_process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-58"&gt;&lt;span class="lineno"&gt; 58 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;objdump_process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;returncode&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-59"&gt;&lt;span class="lineno"&gt; 59 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdoutdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-60"&gt;&lt;span class="lineno"&gt; 60 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stderrdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-61"&gt;&lt;span class="lineno"&gt; 61 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-62"&gt;&lt;span class="lineno"&gt; 62 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-63"&gt;&lt;span class="lineno"&gt; 63 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;gas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-64"&gt;&lt;span class="lineno"&gt; 64 &lt;/span&gt;    &lt;span class="n"&gt;gas_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;AS_FOR_X86&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;GAS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-65"&gt;&lt;span class="lineno"&gt; 65 &lt;/span&gt;    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;gas_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;GNU assembler not found, please set the environment variable AS_FOR_X86&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-66"&gt;&lt;span class="lineno"&gt; 66 &lt;/span&gt;    &lt;span class="n"&gt;gas_process&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Popen&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;gas_path&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-67"&gt;&lt;span class="lineno"&gt; 67 &lt;/span&gt;                                   &lt;span class="n"&gt;shell&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-68"&gt;&lt;span class="lineno"&gt; 68 &lt;/span&gt;                                   &lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PIPE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-69"&gt;&lt;span class="lineno"&gt; 69 &lt;/span&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdoutdata&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderrdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gas_process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;communicate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-70"&gt;&lt;span class="lineno"&gt; 70 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;gas_process&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;returncode&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-71"&gt;&lt;span class="lineno"&gt; 71 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stdoutdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-72"&gt;&lt;span class="lineno"&gt; 72 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stderrdata&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-73"&gt;&lt;span class="lineno"&gt; 73 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;stdoutdata&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ascii&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;replace&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-74"&gt;&lt;span class="lineno"&gt; 74 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-75"&gt;&lt;span class="lineno"&gt; 75 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-76"&gt;&lt;span class="lineno"&gt; 76 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;binutils_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;assembly&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-77"&gt;&lt;span class="lineno"&gt; 77 &lt;/span&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;tempfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NamedTemporaryFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;w+&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;asm_file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-78"&gt;&lt;span class="lineno"&gt; 78 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;asm_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-79"&gt;&lt;span class="lineno"&gt; 79 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.intel_syntax noprefix&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;asm_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-80"&gt;&lt;span class="lineno"&gt; 80 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;assembly&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;asm_file&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-81"&gt;&lt;span class="lineno"&gt; 81 &lt;/span&gt;    &lt;span class="n"&gt;obj_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tempfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NamedTemporaryFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-82"&gt;&lt;span class="lineno"&gt; 82 &lt;/span&gt;    &lt;span class="n"&gt;obj_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-83"&gt;&lt;span class="lineno"&gt; 83 &lt;/span&gt;    &lt;span class="n"&gt;bin_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tempfile&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NamedTemporaryFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-84"&gt;&lt;span class="lineno"&gt; 84 &lt;/span&gt;    &lt;span class="n"&gt;bin_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-85"&gt;&lt;span class="lineno"&gt; 85 &lt;/span&gt;    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-86"&gt;&lt;span class="lineno"&gt; 86 &lt;/span&gt;        &lt;span class="n"&gt;gas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-o&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;asm_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-87"&gt;&lt;span class="lineno"&gt; 87 &lt;/span&gt;        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;asm_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-88"&gt;&lt;span class="lineno"&gt; 88 &lt;/span&gt;        &lt;span class="n"&gt;objcopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;-O&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;binary&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-j&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.text&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bin_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-89"&gt;&lt;span class="lineno"&gt; 89 &lt;/span&gt;        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-90"&gt;&lt;span class="lineno"&gt; 90 &lt;/span&gt;    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;OSError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-91"&gt;&lt;span class="lineno"&gt; 91 &lt;/span&gt;        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;assembly&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-92"&gt;&lt;span class="lineno"&gt; 92 &lt;/span&gt;        &lt;span class="k"&gt;raise&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-93"&gt;&lt;span class="lineno"&gt; 93 &lt;/span&gt;    &lt;span class="n"&gt;bytecode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;bytearray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bin_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rb&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-94"&gt;&lt;span class="lineno"&gt; 94 &lt;/span&gt;    &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bin_file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-95"&gt;&lt;span class="lineno"&gt; 95 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bytearray([&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;])&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;0x&lt;/span&gt;&lt;span class="si"&gt;%02X&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;bytecode&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-96"&gt;&lt;span class="lineno"&gt; 96 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-97"&gt;&lt;span class="lineno"&gt; 97 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-98"&gt;&lt;span class="lineno"&gt; 98 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_operand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;operand_number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;peachpy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;evex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-99"&gt;&lt;span class="lineno"&gt; 99 &lt;/span&gt;    &lt;span class="n"&gt;value_map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-100"&gt;&lt;span class="lineno"&gt;100 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;r8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;bl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r9b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r11b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-101"&gt;&lt;span class="lineno"&gt;101 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;r16&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;si&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r12w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;di&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r14w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-102"&gt;&lt;span class="lineno"&gt;102 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;r32&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ebp&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r8d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;eax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r10d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-103"&gt;&lt;span class="lineno"&gt;103 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;r64&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rcx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r15&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;r13&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-104"&gt;&lt;span class="lineno"&gt;104 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;mm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mm3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mm5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-105"&gt;&lt;span class="lineno"&gt;105 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;xmm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;xmm1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm14&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-106"&gt;&lt;span class="lineno"&gt;106 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;xmm{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm5{k1}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-107"&gt;&lt;span class="lineno"&gt;107 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;xmm{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm30{k2}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-108"&gt;&lt;span class="lineno"&gt;108 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;ymm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ymm2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ymm15&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ymm4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ymm10&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-109"&gt;&lt;span class="lineno"&gt;109 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;ymm{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ymm24{k3}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-110"&gt;&lt;span class="lineno"&gt;110 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;ymm{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ymm19{k5}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-111"&gt;&lt;span class="lineno"&gt;111 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;zmm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zmm3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zmm26&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zmm9&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zmm17&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-112"&gt;&lt;span class="lineno"&gt;112 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;zmm{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zmm26{k7}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-113"&gt;&lt;span class="lineno"&gt;113 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;zmm{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zmm9{k6}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-114"&gt;&lt;span class="lineno"&gt;114 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;k&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;k5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-115"&gt;&lt;span class="lineno"&gt;115 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;k{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;k4{k6}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-116"&gt;&lt;span class="lineno"&gt;116 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r15 + rsi*8 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-117"&gt;&lt;span class="lineno"&gt;117 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;byte[r14 + rdi*4 - 123]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-118"&gt;&lt;span class="lineno"&gt;118 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m16&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;word[r13 + rbp*8 - 107]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-119"&gt;&lt;span class="lineno"&gt;119 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m32&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dword[r12 + rcx*8 - 99]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-120"&gt;&lt;span class="lineno"&gt;120 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m64&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qword[r11 + rdx*8 - 88]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-121"&gt;&lt;span class="lineno"&gt;121 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m64/m32bcst&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qword[r11 + rdx*8 - 88]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-122"&gt;&lt;span class="lineno"&gt;122 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m128&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oword[r10 + rax*8 - 77]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-123"&gt;&lt;span class="lineno"&gt;123 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m128/m32bcst&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oword[r10 + rax*8 - 77]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-124"&gt;&lt;span class="lineno"&gt;124 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m128/m64bcst&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oword[r10 + rax*8 - 77]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-125"&gt;&lt;span class="lineno"&gt;125 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m256&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hword[r9 + rbx*8 - 66]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-126"&gt;&lt;span class="lineno"&gt;126 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m256/m32bcst&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hword[r9 + rbx*8 - 66]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-127"&gt;&lt;span class="lineno"&gt;127 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m256/m64bcst&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hword[r9 + rbx*8 - 66]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-128"&gt;&lt;span class="lineno"&gt;128 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m512&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zword[r9 + rbx*8 - 66]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-129"&gt;&lt;span class="lineno"&gt;129 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m512/m32bcst&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zword[r9 + rbx*8 - 66]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-130"&gt;&lt;span class="lineno"&gt;130 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m512/m64bcst&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zword[r9 + rbx*8 - 66]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-131"&gt;&lt;span class="lineno"&gt;131 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m8{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;byte[r14 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;byte[r14 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;byte[r14 - 128]{k1}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-132"&gt;&lt;span class="lineno"&gt;132 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m16{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;word[r13 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;word[r13 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;word[r13 - 128]{k2}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-133"&gt;&lt;span class="lineno"&gt;133 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m32{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dword[r12 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dword[r12 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dword[r12 - 128]{k3}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-134"&gt;&lt;span class="lineno"&gt;134 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m64{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;qword[r11 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qword[r11 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qword[r11 - 128]{k4}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-135"&gt;&lt;span class="lineno"&gt;135 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m128{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;oword[r10 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oword[r10 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oword[r10 - 128]{k5}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-136"&gt;&lt;span class="lineno"&gt;136 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m256{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hword[r9 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hword[r9 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hword[r9 - 128]{k6}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-137"&gt;&lt;span class="lineno"&gt;137 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m512{k}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zword[r8 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zword[r8 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zword[r8 - 128]{k7}{z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-138"&gt;&lt;span class="lineno"&gt;138 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m32{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dword[r12 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dword[r12 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dword[r12 - 128]{k5}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-139"&gt;&lt;span class="lineno"&gt;139 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m64{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;qword[r11 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qword[r11 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qword[r11 - 128]{k6}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-140"&gt;&lt;span class="lineno"&gt;140 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[rsi + xmm0 * 4 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-141"&gt;&lt;span class="lineno"&gt;141 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r11 + ymm8 * 4 + 48]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-142"&gt;&lt;span class="lineno"&gt;142 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32z&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r15 + zmm19 * 4 - 16]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-143"&gt;&lt;span class="lineno"&gt;143 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64x&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[rsi + xmm1 * 8 + 40]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-144"&gt;&lt;span class="lineno"&gt;144 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64y&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r11 + ymm9 * 8 - 56]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-145"&gt;&lt;span class="lineno"&gt;145 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64z&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r15 + zmm20 * 8 + 72]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-146"&gt;&lt;span class="lineno"&gt;146 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32x{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[rsi + xmm0 * 4 - 128]{k1}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-147"&gt;&lt;span class="lineno"&gt;147 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32y{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r11 + ymm8 * 4 + 48]{k2}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-148"&gt;&lt;span class="lineno"&gt;148 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32z{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r15 + zmm19 * 4 - 16]{k3}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-149"&gt;&lt;span class="lineno"&gt;149 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64x{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[rsi + xmm1 * 8 + 40]{k4}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-150"&gt;&lt;span class="lineno"&gt;150 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64y{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r11 + ymm9 * 8 - 56]{k5}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-151"&gt;&lt;span class="lineno"&gt;151 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64z{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r15 + zmm20 * 8 + 72]{k6}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-152"&gt;&lt;span class="lineno"&gt;152 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;imm4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0b11&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-153"&gt;&lt;span class="lineno"&gt;153 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;imm8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-154"&gt;&lt;span class="lineno"&gt;154 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;imm16&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;32000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-155"&gt;&lt;span class="lineno"&gt;155 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;imm32&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0x10000000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-156"&gt;&lt;span class="lineno"&gt;156 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;imm64&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;0x100000000&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-157"&gt;&lt;span class="lineno"&gt;157 &lt;/span&gt;        &lt;span class="c1"&gt;# &amp;quot;rel32&amp;quot;: &amp;quot;rip+0x11223344&amp;quot;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-158"&gt;&lt;span class="lineno"&gt;158 &lt;/span&gt;        &lt;span class="c1"&gt;# &amp;quot;rel8&amp;quot;: &amp;quot;rip-100&amp;quot;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-159"&gt;&lt;span class="lineno"&gt;159 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;al&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;al&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-160"&gt;&lt;span class="lineno"&gt;160 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;cl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;cl&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-161"&gt;&lt;span class="lineno"&gt;161 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;ax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-162"&gt;&lt;span class="lineno"&gt;162 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;eax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;eax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-163"&gt;&lt;span class="lineno"&gt;163 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;rax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;rax&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-164"&gt;&lt;span class="lineno"&gt;164 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;xmm0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm0&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-165"&gt;&lt;span class="lineno"&gt;165 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-166"&gt;&lt;span class="lineno"&gt;166 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-167"&gt;&lt;span class="lineno"&gt;167 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;{sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-168"&gt;&lt;span class="lineno"&gt;168 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;{er}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{rn-sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-169"&gt;&lt;span class="lineno"&gt;169 &lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-170"&gt;&lt;span class="lineno"&gt;170 &lt;/span&gt;    &lt;span class="n"&gt;evex_value_map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-171"&gt;&lt;span class="lineno"&gt;171 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;xmm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;xmm16&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm19&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;xmm31&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-172"&gt;&lt;span class="lineno"&gt;172 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;ymm&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ymm17&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ymm5&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ymm20&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ymm30&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-173"&gt;&lt;span class="lineno"&gt;173 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;byte[r14 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;byte[r14 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;byte[r14 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-174"&gt;&lt;span class="lineno"&gt;174 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m16&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;word[r13 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;word[r13 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;word[r13 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-175"&gt;&lt;span class="lineno"&gt;175 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m32&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dword[r12 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dword[r12 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dword[r12 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-176"&gt;&lt;span class="lineno"&gt;176 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m64&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;qword[r11 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qword[r11 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;qword[r11 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-177"&gt;&lt;span class="lineno"&gt;177 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m128&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;oword[r10 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oword[r10 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oword[r10 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-178"&gt;&lt;span class="lineno"&gt;178 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m256&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hword[r9 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hword[r9 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hword[r9 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-179"&gt;&lt;span class="lineno"&gt;179 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;m512&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zword[r8 - 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zword[r8 + 64]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;zword[r8 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-180"&gt;&lt;span class="lineno"&gt;180 &lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-181"&gt;&lt;span class="lineno"&gt;181 &lt;/span&gt;    &lt;span class="n"&gt;peachpy_value_map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-182"&gt;&lt;span class="lineno"&gt;182 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32x{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[rsi + xmm0(k1) * 4 - 128]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-183"&gt;&lt;span class="lineno"&gt;183 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32y{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r11 + ymm8(k2) * 4 + 48]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-184"&gt;&lt;span class="lineno"&gt;184 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm32z{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r15 + zmm19(k3) * 4 - 16]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-185"&gt;&lt;span class="lineno"&gt;185 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64x{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[rsi + xmm1(k4) * 8 + 40]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-186"&gt;&lt;span class="lineno"&gt;186 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64y{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r11 + ymm9(k5) * 8 - 56]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-187"&gt;&lt;span class="lineno"&gt;187 &lt;/span&gt;        &lt;span class="s2"&gt;&amp;quot;vm64z{k}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;[r15 + zmm20(k6) * 8 + 72]&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-188"&gt;&lt;span class="lineno"&gt;188 &lt;/span&gt;    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-189"&gt;&lt;span class="lineno"&gt;189 &lt;/span&gt;    &lt;span class="n"&gt;optype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-190"&gt;&lt;span class="lineno"&gt;190 &lt;/span&gt;    &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value_map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;optype&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-191"&gt;&lt;span class="lineno"&gt;191 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;evex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-192"&gt;&lt;span class="lineno"&gt;192 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;evex_value_map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;optype&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-193"&gt;&lt;span class="lineno"&gt;193 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;peachpy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-194"&gt;&lt;span class="lineno"&gt;194 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;peachpy_value_map&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;optype&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-195"&gt;&lt;span class="lineno"&gt;195 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-196"&gt;&lt;span class="lineno"&gt;196 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;operand_number&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-197"&gt;&lt;span class="lineno"&gt;197 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;peachpy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-198"&gt;&lt;span class="lineno"&gt;198 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\
&lt;/span&gt;&lt;span id="row-199"&gt;&lt;span class="lineno"&gt;199 &lt;/span&gt;            &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;byte&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;BYTE PTR &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\
&lt;/span&gt;&lt;span id="row-200"&gt;&lt;span class="lineno"&gt;200 &lt;/span&gt;            &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dword&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;DWORD PTR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\
&lt;/span&gt;&lt;span id="row-201"&gt;&lt;span class="lineno"&gt;201 &lt;/span&gt;            &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;qword&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;QWORD PTR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\
&lt;/span&gt;&lt;span id="row-202"&gt;&lt;span class="lineno"&gt;202 &lt;/span&gt;            &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;oword&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;XMMWORD PTR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\
&lt;/span&gt;&lt;span id="row-203"&gt;&lt;span class="lineno"&gt;203 &lt;/span&gt;            &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hword&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;YMMWORD PTR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\
&lt;/span&gt;&lt;span id="row-204"&gt;&lt;span class="lineno"&gt;204 &lt;/span&gt;            &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;zword&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ZMMWORD PTR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\
&lt;/span&gt;&lt;span id="row-205"&gt;&lt;span class="lineno"&gt;205 &lt;/span&gt;            &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;word&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;WORD PTR&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;\
&lt;/span&gt;&lt;span id="row-206"&gt;&lt;span class="lineno"&gt;206 &lt;/span&gt;            &lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$+2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-207"&gt;&lt;span class="lineno"&gt;207 &lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;peachpy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-208"&gt;&lt;span class="lineno"&gt;208 &lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;kn&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-209"&gt;&lt;span class="lineno"&gt;209 &lt;/span&gt;            &lt;span class="n"&gt;kreg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;k&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-210"&gt;&lt;span class="lineno"&gt;210 &lt;/span&gt;            &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;kreg&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;(&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;kreg&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-211"&gt;&lt;span class="lineno"&gt;211 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;){z}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;.z)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-212"&gt;&lt;span class="lineno"&gt;212 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{rn-sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{rn_sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-213"&gt;&lt;span class="lineno"&gt;213 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{rz-sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{rz_sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-214"&gt;&lt;span class="lineno"&gt;214 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{ru-sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{ru_sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-215"&gt;&lt;span class="lineno"&gt;215 &lt;/span&gt;        &lt;span class="n"&gt;operand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{rd-sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;{rd_sae}&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-216"&gt;&lt;span class="lineno"&gt;216 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;operand&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-217"&gt;&lt;span class="lineno"&gt;217 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-218"&gt;&lt;span class="lineno"&gt;218 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-219"&gt;&lt;span class="lineno"&gt;219 &lt;/span&gt;&lt;span class="n"&gt;tab&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-220"&gt;&lt;span class="lineno"&gt;220 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-221"&gt;&lt;span class="lineno"&gt;221 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;package_root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-222"&gt;&lt;span class="lineno"&gt;222 &lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instruction_names&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;instruction_groups&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-223"&gt;&lt;span class="lineno"&gt;223 &lt;/span&gt;        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;package_root&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;x86_64&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;encoding&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test_&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;.py&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-224"&gt;&lt;span class="lineno"&gt;224 &lt;/span&gt;            &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;CodeWriter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-225"&gt;&lt;span class="lineno"&gt;225 &lt;/span&gt;                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;# This file is auto-generated by /codegen/x86_64_test_encoding.py&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-226"&gt;&lt;span class="lineno"&gt;226 &lt;/span&gt;                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;# Reference opcodes are generated by:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-227"&gt;&lt;span class="lineno"&gt;227 &lt;/span&gt;                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#     &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;gas&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--version&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitlines&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-228"&gt;&lt;span class="lineno"&gt;228 &lt;/span&gt;                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-229"&gt;&lt;span class="lineno"&gt;229 &lt;/span&gt;                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;from peachpy.x86_64 import *&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-230"&gt;&lt;span class="lineno"&gt;230 &lt;/span&gt;                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;import unittest&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-231"&gt;&lt;span class="lineno"&gt;231 &lt;/span&gt;                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-232"&gt;&lt;span class="lineno"&gt;232 &lt;/span&gt;                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-233"&gt;&lt;span class="lineno"&gt;233 &lt;/span&gt;                &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;instruction_names&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-234"&gt;&lt;span class="lineno"&gt;234 &lt;/span&gt;                    &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;class Test&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;(unittest.TestCase):&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-235"&gt;&lt;span class="lineno"&gt;235 &lt;/span&gt;                    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;CodeBlock&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-236"&gt;&lt;span class="lineno"&gt;236 &lt;/span&gt;                        &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;def runTest(self):&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-237"&gt;&lt;span class="lineno"&gt;237 &lt;/span&gt;                        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;CodeBlock&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-238"&gt;&lt;span class="lineno"&gt;238 &lt;/span&gt;                            &lt;span class="c1"&gt;# Instructions with `name` name&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-239"&gt;&lt;span class="lineno"&gt;239 &lt;/span&gt;                            &lt;span class="n"&gt;name_instructions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;instruction_set&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-240"&gt;&lt;span class="lineno"&gt;240 &lt;/span&gt;                            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;name_instructions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-241"&gt;&lt;span class="lineno"&gt;241 &lt;/span&gt;                                &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;No forms for instruction: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-242"&gt;&lt;span class="lineno"&gt;242 &lt;/span&gt;                                &lt;span class="k"&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-243"&gt;&lt;span class="lineno"&gt;243 &lt;/span&gt;                            &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name_instructions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-244"&gt;&lt;span class="lineno"&gt;244 &lt;/span&gt;                            &lt;span class="n"&gt;name_instruction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;name_instructions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-245"&gt;&lt;span class="lineno"&gt;245 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-246"&gt;&lt;span class="lineno"&gt;246 &lt;/span&gt;                            &lt;span class="n"&gt;has_assertions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-247"&gt;&lt;span class="lineno"&gt;247 &lt;/span&gt;                            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;instruction_form&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;filter_instruction_forms&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name_instruction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-248"&gt;&lt;span class="lineno"&gt;248 &lt;/span&gt;                                &lt;span class="n"&gt;is_avx512&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;is_avx512_instruction_form&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-249"&gt;&lt;span class="lineno"&gt;249 &lt;/span&gt;                                &lt;span class="n"&gt;peachpy_operands&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;generate_operand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;peachpy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;evex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;is_avx512&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-250"&gt;&lt;span class="lineno"&gt;250 &lt;/span&gt;                                                    &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;operands&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-251"&gt;&lt;span class="lineno"&gt;251 &lt;/span&gt;                                &lt;span class="n"&gt;gas_operands&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;generate_operand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;peachpy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;evex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;is_avx512&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-252"&gt;&lt;span class="lineno"&gt;252 &lt;/span&gt;                                                &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;enumerate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;operands&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-253"&gt;&lt;span class="lineno"&gt;253 &lt;/span&gt;                                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;any&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;op&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gas_operands&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-254"&gt;&lt;span class="lineno"&gt;254 &lt;/span&gt;                                    &lt;span class="n"&gt;gas_assembly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gas_operands&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-255"&gt;&lt;span class="lineno"&gt;255 &lt;/span&gt;                                    &lt;span class="n"&gt;peachpy_assembly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;(&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;instruction_form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;, &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;peachpy_operands&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-256"&gt;&lt;span class="lineno"&gt;256 &lt;/span&gt;                                    &lt;span class="n"&gt;reference_bytecode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;binutils_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gas_assembly&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-257"&gt;&lt;span class="lineno"&gt;257 &lt;/span&gt;                                    &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;self.assertEqual(&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;.encode())&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-258"&gt;&lt;span class="lineno"&gt;258 &lt;/span&gt;                                              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reference_bytecode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;peachpy_assembly&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-259"&gt;&lt;span class="lineno"&gt;259 &lt;/span&gt;                                    &lt;span class="n"&gt;has_assertions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-260"&gt;&lt;span class="lineno"&gt;260 &lt;/span&gt;                            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;has_assertions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-261"&gt;&lt;span class="lineno"&gt;261 &lt;/span&gt;                                &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pass&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-262"&gt;&lt;span class="lineno"&gt;262 &lt;/span&gt;                            &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-263"&gt;&lt;span class="lineno"&gt;263 &lt;/span&gt;                            &lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-264"&gt;&lt;span class="lineno"&gt;264 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-265"&gt;&lt;span class="lineno"&gt;265 &lt;/span&gt;            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-266"&gt;&lt;span class="lineno"&gt;266 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-267"&gt;&lt;span class="lineno"&gt;267 &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-268"&gt;&lt;span class="lineno"&gt;268 &lt;/span&gt;    &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
</content><category term="code examples"></category><category term="hightlighting"></category><category term="python"></category></entry><entry><title>Shellcode Encoders 2</title><link href="https://derez.github.io/2016/shellcode-encoder-2.html" rel="alternate"></link><published>2016-12-09T00:00:00-05:00</published><updated>2016-12-09T00:00:00-05:00</updated><author><name>Danny Walker</name></author><id>tag:derez.github.io,2016-12-09:/2016/shellcode-encoder-2.html</id><summary type="html">&lt;p class="first last"&gt;Additional shellcode encoder&amp;nbsp;techniques&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Shellcode encoders are used to defeat basic pattern matching or remove bad bytes from a&amp;nbsp;payload.&lt;/p&gt;
&lt;p&gt;The following encoder rotates bytes. I decided to rotate 3 bits left when encoding, meaning the decoder needs to rotate right 3 bits. Here is the decoder&amp;nbsp;logic:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span id="row-1"&gt;&lt;span class="lineno"&gt; 1 &lt;/span&gt;&lt;span class="nl"&gt;_start:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-2"&gt;&lt;span class="lineno"&gt; 2 &lt;/span&gt;    &lt;span class="nf"&gt;jmp&lt;/span&gt; &lt;span class="no"&gt;encoded&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-3"&gt;&lt;span class="lineno"&gt; 3 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-4"&gt;&lt;span class="lineno"&gt; 4 &lt;/span&gt;&lt;span class="nl"&gt;getaddr:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-5"&gt;&lt;span class="lineno"&gt; 5 &lt;/span&gt;    &lt;span class="nf"&gt;pop&lt;/span&gt; &lt;span class="no"&gt;rbx&lt;/span&gt;         &lt;span class="c"&gt;; *rbx stores data&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-6"&gt;&lt;span class="lineno"&gt; 6 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-7"&gt;&lt;span class="lineno"&gt; 7 &lt;/span&gt;    &lt;span class="nf"&gt;xor&lt;/span&gt; &lt;span class="no"&gt;ecx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;ecx&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-8"&gt;&lt;span class="lineno"&gt; 8 &lt;/span&gt;    &lt;span class="nf"&gt;add&lt;/span&gt; &lt;span class="no"&gt;cl&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0xff&lt;/span&gt;    &lt;span class="c"&gt;; replace with shellcode size&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-9"&gt;&lt;span class="lineno"&gt; 9 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-10"&gt;&lt;span class="lineno"&gt;10 &lt;/span&gt;&lt;span class="nl"&gt;decode:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-11"&gt;&lt;span class="lineno"&gt;11 &lt;/span&gt;    &lt;span class="nf"&gt;ror&lt;/span&gt; &lt;span class="no"&gt;byte&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="no"&gt;rbx&lt;/span&gt; &lt;span class="err"&gt;+&lt;/span&gt; &lt;span class="no"&gt;rcx&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="mi"&gt;0x3&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-12"&gt;&lt;span class="lineno"&gt;12 &lt;/span&gt;    &lt;span class="nf"&gt;loop&lt;/span&gt; &lt;span class="no"&gt;decode&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-13"&gt;&lt;span class="lineno"&gt;13 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-14"&gt;&lt;span class="lineno"&gt;14 &lt;/span&gt;    &lt;span class="nf"&gt;jmp&lt;/span&gt; &lt;span class="no"&gt;rbx&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-15"&gt;&lt;span class="lineno"&gt;15 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-16"&gt;&lt;span class="lineno"&gt;16 &lt;/span&gt;&lt;span class="nl"&gt;encoded:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-17"&gt;&lt;span class="lineno"&gt;17 &lt;/span&gt;    &lt;span class="nf"&gt;call&lt;/span&gt; &lt;span class="no"&gt;getaddr&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-18"&gt;&lt;span class="lineno"&gt;18 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-19"&gt;&lt;span class="lineno"&gt;19 &lt;/span&gt;    &lt;span class="c"&gt;; db 0x.... encoded bytes go here&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This resulted in the following 21 byte&amp;nbsp;stub:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span id="row-1"&gt;&lt;span class="lineno"&gt;1 &lt;/span&gt;&lt;span class="go"&gt;\xeb\x0e\x5b\x31\xc9\x80\xc1\x20\xc0\x0c\x0b\x03\xe2\xfa\xff\xe3\xe8\xed\xff\xff\xff&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="x64-bit-rotate-encoder"&gt;
&lt;h2&gt;x64 Bit-Rotate&amp;nbsp;Encoder&lt;/h2&gt;
&lt;p&gt;Here is a python script that basically just rotates all the bits left by 3, and then prepends the decoder stub (changing the length in the cl register&amp;nbsp;appropriately).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span id="row-1"&gt;&lt;span class="lineno"&gt; 1 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;rol&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-2"&gt;&lt;span class="lineno"&gt; 2 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xff&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-3"&gt;&lt;span class="lineno"&gt; 3 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-4"&gt;&lt;span class="lineno"&gt; 4 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hex_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-5"&gt;&lt;span class="lineno"&gt; 5 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-6"&gt;&lt;span class="lineno"&gt; 6 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-7"&gt;&lt;span class="lineno"&gt; 7 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;rot_encode_vector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shellcode&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-8"&gt;&lt;span class="lineno"&gt; 8 &lt;/span&gt;    &lt;span class="n"&gt;encoded&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-9"&gt;&lt;span class="lineno"&gt; 9 &lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;shellcode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-10"&gt;&lt;span class="lineno"&gt;10 &lt;/span&gt;        &lt;span class="n"&gt;encoded&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rol&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-11"&gt;&lt;span class="lineno"&gt;11 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-12"&gt;&lt;span class="lineno"&gt;12 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;encoded&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-13"&gt;&lt;span class="lineno"&gt;13 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-14"&gt;&lt;span class="lineno"&gt;14 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_decoder_stub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;encoded&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-15"&gt;&lt;span class="lineno"&gt;15 &lt;/span&gt;    &lt;span class="n"&gt;decoder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xeb&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;x0e&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;x5b&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;x31&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xc9&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;x80&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xc1&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;x04&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-16"&gt;&lt;span class="lineno"&gt;16 &lt;/span&gt;    &lt;span class="n"&gt;decoder&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;hex_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;encoded&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-17"&gt;&lt;span class="lineno"&gt;17 &lt;/span&gt;    &lt;span class="n"&gt;decoder&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xc0&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;x0c&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;x0b&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;x03&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xe2&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xfa&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xff&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xe3&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-18"&gt;&lt;span class="lineno"&gt;18 &lt;/span&gt;    &lt;span class="n"&gt;decoder&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xe8&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xed&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xff&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xff&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;xff&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-19"&gt;&lt;span class="lineno"&gt;19 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-20"&gt;&lt;span class="lineno"&gt;20 &lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;byte&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;encoded&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-21"&gt;&lt;span class="lineno"&gt;21 &lt;/span&gt;        &lt;span class="n"&gt;decoder&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;hex_string&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;byte&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-22"&gt;&lt;span class="lineno"&gt;22 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-23"&gt;&lt;span class="lineno"&gt;23 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;decoder&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-24"&gt;&lt;span class="lineno"&gt;24 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-25"&gt;&lt;span class="lineno"&gt;25 &lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;rot_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shellcode&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-26"&gt;&lt;span class="lineno"&gt;26 &lt;/span&gt;    &lt;span class="n"&gt;shellcode_vector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;shellcode&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-27"&gt;&lt;span class="lineno"&gt;27 &lt;/span&gt;    &lt;span class="n"&gt;shellcode_vector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;shellcode_vector&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-28"&gt;&lt;span class="lineno"&gt;28 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-29"&gt;&lt;span class="lineno"&gt;29 &lt;/span&gt;    &lt;span class="n"&gt;encoded_vector&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rot_encode_vector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;shellcode_vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-30"&gt;&lt;span class="lineno"&gt;30 &lt;/span&gt;    &lt;span class="n"&gt;complete&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;add_decoder_stub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;encoded_vector&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-31"&gt;&lt;span class="lineno"&gt;31 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-32"&gt;&lt;span class="lineno"&gt;32 &lt;/span&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;complete&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encoded_vector&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;shellcode_vector&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-33"&gt;&lt;span class="lineno"&gt;33 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-34"&gt;&lt;span class="lineno"&gt;34 &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-35"&gt;&lt;span class="lineno"&gt;35 &lt;/span&gt;    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;argparse&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-36"&gt;&lt;span class="lineno"&gt;36 &lt;/span&gt;    &lt;span class="n"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;argparse&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ArgumentParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Bit-Rotate Encoder&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-37"&gt;&lt;span class="lineno"&gt;37 &lt;/span&gt;    &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_argument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;shellcode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;shellcode to encode&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-38"&gt;&lt;span class="lineno"&gt;38 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-39"&gt;&lt;span class="lineno"&gt;39 &lt;/span&gt;    &lt;span class="n"&gt;argv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parse_args&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-40"&gt;&lt;span class="lineno"&gt;40 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-41"&gt;&lt;span class="lineno"&gt;41 &lt;/span&gt;    &lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scv&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rot_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shellcode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-42"&gt;&lt;span class="lineno"&gt;42 &lt;/span&gt;
&lt;/span&gt;&lt;span id="row-43"&gt;&lt;span class="lineno"&gt;43 &lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Original length: &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scv&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-44"&gt;&lt;span class="lineno"&gt;44 &lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shellcode&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-45"&gt;&lt;span class="lineno"&gt;45 &lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-46"&gt;&lt;span class="lineno"&gt;46 &lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Encoded length: &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-47"&gt;&lt;span class="lineno"&gt;47 &lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;out&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-48"&gt;&lt;span class="lineno"&gt;48 &lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt;
&lt;/span&gt;&lt;span id="row-49"&gt;&lt;span class="lineno"&gt;49 &lt;/span&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;db &amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;, &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;encv&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="code"></category><category term="asm"></category><category term="nasm"></category><category term="shellcode"></category><category term="encoder"></category></entry></feed>